/*
 * Copyright 2010-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
    }

   dependencies {
     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
   }
}

apply plugin: 'kotlin'
apply plugin: org.jetbrains.kotlin.NativeInteropPlugin

apply plugin: 'c'

def javaHome = System.getProperty('java.home')
def compilerArgsForJniIncludes = ["", "linux", "darwin"].collect { "-I$javaHome/../include/$it" } as String[]

model {
    components {
        clangstubs(NativeLibrarySpec) {
            sources {
                c.source.srcDir 'prebuilt/nativeInteropStubs/c'
            }

            binaries.all {
                cCompiler.args compilerArgsForJniIncludes
                cCompiler.args "-I$llvmDir/include"
            }

            binaries.withType(SharedLibraryBinarySpec) {
                linker.args "$llvmDir/lib/${System.mapLibraryName("clang")}"
            }
        }
   }

}

sourceSets {
    main {
        kotlin {
            srcDirs 'prebuilt/nativeInteropStubs/kotlin'
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile project(':Interop:Runtime')
}

task nativelibs(type: Copy) {
    dependsOn 'clangstubsSharedLibrary'

    from "$buildDir/libs/clangstubs/shared/"
    into "$buildDir/nativelibs/"
}

classes.dependsOn nativelibs

kotlinNativeInterop {
    clang {
        defFile 'clang.def'
        compilerOpts "-I$llvmDir/include"
        linkerOpts "-L$llvmDir/lib"
        genTask.args '-keepcstubs', 'true'
    }
}

task updatePrebuilt {
    dependsOn genClangInteropStubs

    doLast {
        copy {
            from("$buildDir/nativeInteropStubs/clang/kotlin") {
                include 'clang/clang.kt'
            }
            into 'prebuilt/nativeInteropStubs/kotlin'
        }

        copy {
            from("$buildDir/nativelibs") {
                include 'clangstubs.c'
            }
            into 'prebuilt/nativeInteropStubs/c'
        }
    }
}