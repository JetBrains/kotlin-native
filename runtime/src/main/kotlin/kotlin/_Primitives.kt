/*
 * Copyright 2010-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package kotlin

// Autogenerated with tools/generators/Operators.kt (signed_kt).
@SymbolName("Kotlin_Byte_plus_Byte")
external public operator fun Byte.plus(arg0: Byte): Int
@SymbolName("Kotlin_Byte_plus_Short")
external public operator fun Byte.plus(arg0: Short): Int
@SymbolName("Kotlin_Byte_plus_Int")
external public operator fun Byte.plus(arg0: Int): Int
@SymbolName("Kotlin_Byte_plus_Long")
external public operator fun Byte.plus(arg0: Long): Long
@SymbolName("Kotlin_Byte_plus_Float")
external public operator fun Byte.plus(arg0: Float): Float
@SymbolName("Kotlin_Byte_plus_Double")
external public operator fun Byte.plus(arg0: Double): Double
@SymbolName("Kotlin_Byte_minus_Byte")
external public operator fun Byte.minus(arg0: Byte): Int
@SymbolName("Kotlin_Byte_minus_Short")
external public operator fun Byte.minus(arg0: Short): Int
@SymbolName("Kotlin_Byte_minus_Int")
external public operator fun Byte.minus(arg0: Int): Int
@SymbolName("Kotlin_Byte_minus_Long")
external public operator fun Byte.minus(arg0: Long): Long
@SymbolName("Kotlin_Byte_minus_Float")
external public operator fun Byte.minus(arg0: Float): Float
@SymbolName("Kotlin_Byte_minus_Double")
external public operator fun Byte.minus(arg0: Double): Double
@SymbolName("Kotlin_Byte_times_Byte")
external public operator fun Byte.times(arg0: Byte): Int
@SymbolName("Kotlin_Byte_times_Short")
external public operator fun Byte.times(arg0: Short): Int
@SymbolName("Kotlin_Byte_times_Int")
external public operator fun Byte.times(arg0: Int): Int
@SymbolName("Kotlin_Byte_times_Long")
external public operator fun Byte.times(arg0: Long): Long
@SymbolName("Kotlin_Byte_times_Float")
external public operator fun Byte.times(arg0: Float): Float
@SymbolName("Kotlin_Byte_times_Double")
external public operator fun Byte.times(arg0: Double): Double
@SymbolName("Kotlin_Byte_div_Byte")
external public operator fun Byte.div(arg0: Byte): Int
@SymbolName("Kotlin_Byte_div_Short")
external public operator fun Byte.div(arg0: Short): Int
@SymbolName("Kotlin_Byte_div_Int")
external public operator fun Byte.div(arg0: Int): Int
@SymbolName("Kotlin_Byte_div_Long")
external public operator fun Byte.div(arg0: Long): Long
@SymbolName("Kotlin_Byte_div_Float")
external public operator fun Byte.div(arg0: Float): Float
@SymbolName("Kotlin_Byte_div_Double")
external public operator fun Byte.div(arg0: Double): Double
@SymbolName("Kotlin_Byte_rem_Byte")
external public operator fun Byte.rem(arg0: Byte): Int
@SymbolName("Kotlin_Byte_rem_Short")
external public operator fun Byte.rem(arg0: Short): Int
@SymbolName("Kotlin_Byte_rem_Int")
external public operator fun Byte.rem(arg0: Int): Int
@SymbolName("Kotlin_Byte_rem_Long")
external public operator fun Byte.rem(arg0: Long): Long
@SymbolName("Kotlin_Byte_rem_Float")
external public operator fun Byte.rem(arg0: Float): Float
@SymbolName("Kotlin_Byte_rem_Double")
external public operator fun Byte.rem(arg0: Double): Double
@SymbolName("Kotlin_Byte_compareTo_Short")
external public operator fun Byte.compareTo(arg0: Short): Int
@SymbolName("Kotlin_Byte_compareTo_Int")
external public operator fun Byte.compareTo(arg0: Int): Int
@SymbolName("Kotlin_Byte_compareTo_Long")
external public operator fun Byte.compareTo(arg0: Long): Int
@SymbolName("Kotlin_Byte_compareTo_Float")
external public operator fun Byte.compareTo(arg0: Float): Int
@SymbolName("Kotlin_Byte_compareTo_Double")
external public operator fun Byte.compareTo(arg0: Double): Int
@SymbolName("Kotlin_Byte_and_Byte")
external public infix fun Byte.and(arg0: Byte): Int
@SymbolName("Kotlin_Byte_or_Byte")
external public infix fun Byte.or(arg0: Byte): Int
@SymbolName("Kotlin_Byte_xor_Byte")
external public infix fun Byte.xor(arg0: Byte): Int
@SymbolName("Kotlin_Byte_shl_Int")
external public infix fun Byte.shl(arg0: Int): Int
@SymbolName("Kotlin_Byte_shr_Int")
external public infix fun Byte.shr(arg0: Int): Int
@SymbolName("Kotlin_Byte_ushr_Int")
external public infix fun Byte.ushr(arg0: Int): Int
@SymbolName("Kotlin_Byte_inv")
external public fun Byte.inv(): Byte
@SymbolName("Kotlin_Byte_inc")
external public operator fun Byte.inc(): Byte
@SymbolName("Kotlin_Byte_dec")
external public operator fun Byte.dec(): Byte
@SymbolName("Kotlin_Byte_unaryPlus")
external public operator fun Byte.unaryPlus(): Int
@SymbolName("Kotlin_Byte_unaryMinus")
external public operator fun Byte.unaryMinus(): Int
@SymbolName("Kotlin_Short_plus_Byte")
external public operator fun Short.plus(arg0: Byte): Int
@SymbolName("Kotlin_Short_plus_Short")
external public operator fun Short.plus(arg0: Short): Int
@SymbolName("Kotlin_Short_plus_Int")
external public operator fun Short.plus(arg0: Int): Int
@SymbolName("Kotlin_Short_plus_Long")
external public operator fun Short.plus(arg0: Long): Long
@SymbolName("Kotlin_Short_plus_Float")
external public operator fun Short.plus(arg0: Float): Float
@SymbolName("Kotlin_Short_plus_Double")
external public operator fun Short.plus(arg0: Double): Double
@SymbolName("Kotlin_Short_minus_Byte")
external public operator fun Short.minus(arg0: Byte): Int
@SymbolName("Kotlin_Short_minus_Short")
external public operator fun Short.minus(arg0: Short): Int
@SymbolName("Kotlin_Short_minus_Int")
external public operator fun Short.minus(arg0: Int): Int
@SymbolName("Kotlin_Short_minus_Long")
external public operator fun Short.minus(arg0: Long): Long
@SymbolName("Kotlin_Short_minus_Float")
external public operator fun Short.minus(arg0: Float): Float
@SymbolName("Kotlin_Short_minus_Double")
external public operator fun Short.minus(arg0: Double): Double
@SymbolName("Kotlin_Short_times_Byte")
external public operator fun Short.times(arg0: Byte): Int
@SymbolName("Kotlin_Short_times_Short")
external public operator fun Short.times(arg0: Short): Int
@SymbolName("Kotlin_Short_times_Int")
external public operator fun Short.times(arg0: Int): Int
@SymbolName("Kotlin_Short_times_Long")
external public operator fun Short.times(arg0: Long): Long
@SymbolName("Kotlin_Short_times_Float")
external public operator fun Short.times(arg0: Float): Float
@SymbolName("Kotlin_Short_times_Double")
external public operator fun Short.times(arg0: Double): Double
@SymbolName("Kotlin_Short_div_Byte")
external public operator fun Short.div(arg0: Byte): Int
@SymbolName("Kotlin_Short_div_Short")
external public operator fun Short.div(arg0: Short): Int
@SymbolName("Kotlin_Short_div_Int")
external public operator fun Short.div(arg0: Int): Int
@SymbolName("Kotlin_Short_div_Long")
external public operator fun Short.div(arg0: Long): Long
@SymbolName("Kotlin_Short_div_Float")
external public operator fun Short.div(arg0: Float): Float
@SymbolName("Kotlin_Short_div_Double")
external public operator fun Short.div(arg0: Double): Double
@SymbolName("Kotlin_Short_rem_Byte")
external public operator fun Short.rem(arg0: Byte): Int
@SymbolName("Kotlin_Short_rem_Short")
external public operator fun Short.rem(arg0: Short): Int
@SymbolName("Kotlin_Short_rem_Int")
external public operator fun Short.rem(arg0: Int): Int
@SymbolName("Kotlin_Short_rem_Long")
external public operator fun Short.rem(arg0: Long): Long
@SymbolName("Kotlin_Short_rem_Float")
external public operator fun Short.rem(arg0: Float): Float
@SymbolName("Kotlin_Short_rem_Double")
external public operator fun Short.rem(arg0: Double): Double
@SymbolName("Kotlin_Short_compareTo_Byte")
external public operator fun Short.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_Short_compareTo_Int")
external public operator fun Short.compareTo(arg0: Int): Int
@SymbolName("Kotlin_Short_compareTo_Long")
external public operator fun Short.compareTo(arg0: Long): Int
@SymbolName("Kotlin_Short_compareTo_Float")
external public operator fun Short.compareTo(arg0: Float): Int
@SymbolName("Kotlin_Short_compareTo_Double")
external public operator fun Short.compareTo(arg0: Double): Int
@SymbolName("Kotlin_Short_and_Short")
external public infix fun Short.and(arg0: Short): Int
@SymbolName("Kotlin_Short_or_Short")
external public infix fun Short.or(arg0: Short): Int
@SymbolName("Kotlin_Short_xor_Short")
external public infix fun Short.xor(arg0: Short): Int
@SymbolName("Kotlin_Short_shl_Int")
external public infix fun Short.shl(arg0: Int): Int
@SymbolName("Kotlin_Short_shr_Int")
external public infix fun Short.shr(arg0: Int): Int
@SymbolName("Kotlin_Short_ushr_Int")
external public infix fun Short.ushr(arg0: Int): Int
@SymbolName("Kotlin_Short_inv")
external public fun Short.inv(): Short
@SymbolName("Kotlin_Short_inc")
external public operator fun Short.inc(): Short
@SymbolName("Kotlin_Short_dec")
external public operator fun Short.dec(): Short
@SymbolName("Kotlin_Short_unaryPlus")
external public operator fun Short.unaryPlus(): Int
@SymbolName("Kotlin_Short_unaryMinus")
external public operator fun Short.unaryMinus(): Int
/*@SymbolName("Kotlin_Int_plus_Byte")
external public operator fun Int.plus(arg0: Byte): Int
@SymbolName("Kotlin_Int_plus_Short")
external public operator fun Int.plus(arg0: Short): Int
@SymbolName("Kotlin_Int_plus_Int")
external public operator fun Int.plus(arg0: Int): Int
@SymbolName("Kotlin_Int_plus_Long")
external public operator fun Int.plus(arg0: Long): Long
@SymbolName("Kotlin_Int_plus_Float")
external public operator fun Int.plus(arg0: Float): Float
@SymbolName("Kotlin_Int_plus_Double")
external public operator fun Int.plus(arg0: Double): Double */
@SymbolName("Kotlin_Int_minus_Byte")
external public operator fun Int.minus(arg0: Byte): Int
@SymbolName("Kotlin_Int_minus_Short")
external public operator fun Int.minus(arg0: Short): Int
@SymbolName("Kotlin_Int_minus_Int")
external public operator fun Int.minus(arg0: Int): Int
@SymbolName("Kotlin_Int_minus_Long")
external public operator fun Int.minus(arg0: Long): Long
@SymbolName("Kotlin_Int_minus_Float")
external public operator fun Int.minus(arg0: Float): Float
@SymbolName("Kotlin_Int_minus_Double")
external public operator fun Int.minus(arg0: Double): Double
/*@SymbolName("Kotlin_Int_times_Byte")
external public operator fun Int.times(arg0: Byte): Int
@SymbolName("Kotlin_Int_times_Short")
external public operator fun Int.times(arg0: Short): Int
@SymbolName("Kotlin_Int_times_Int")
external public operator fun Int.times(arg0: Int): Int
@SymbolName("Kotlin_Int_times_Long")
external public operator fun Int.times(arg0: Long): Long
@SymbolName("Kotlin_Int_times_Float")
external public operator fun Int.times(arg0: Float): Float
@SymbolName("Kotlin_Int_times_Double")
external public operator fun Int.times(arg0: Double): Double*/
@SymbolName("Kotlin_Int_div_Byte")
external public operator fun Int.div(arg0: Byte): Int
@SymbolName("Kotlin_Int_div_Short")
external public operator fun Int.div(arg0: Short): Int
@SymbolName("Kotlin_Int_div_Int")
external public operator fun Int.div(arg0: Int): Int
@SymbolName("Kotlin_Int_div_Long")
external public operator fun Int.div(arg0: Long): Long
@SymbolName("Kotlin_Int_div_Float")
external public operator fun Int.div(arg0: Float): Float
@SymbolName("Kotlin_Int_div_Double")
external public operator fun Int.div(arg0: Double): Double
@SymbolName("Kotlin_Int_rem_Byte")
external public operator fun Int.rem(arg0: Byte): Int
@SymbolName("Kotlin_Int_rem_Short")
external public operator fun Int.rem(arg0: Short): Int
@SymbolName("Kotlin_Int_rem_Int")
external public operator fun Int.rem(arg0: Int): Int
@SymbolName("Kotlin_Int_rem_Long")
external public operator fun Int.rem(arg0: Long): Long
@SymbolName("Kotlin_Int_rem_Float")
external public operator fun Int.rem(arg0: Float): Float
@SymbolName("Kotlin_Int_rem_Double")
external public operator fun Int.rem(arg0: Double): Double
@SymbolName("Kotlin_Int_compareTo_Byte")
external public operator fun Int.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_Int_compareTo_Short")
external public operator fun Int.compareTo(arg0: Short): Int
@SymbolName("Kotlin_Int_compareTo_Long")
external public operator fun Int.compareTo(arg0: Long): Int
@SymbolName("Kotlin_Int_compareTo_Float")
external public operator fun Int.compareTo(arg0: Float): Int
@SymbolName("Kotlin_Int_compareTo_Double")
external public operator fun Int.compareTo(arg0: Double): Int
/*@SymbolName("Kotlin_Int_and_Int")
external public infix fun Int.and(arg0: Int): Int */
@SymbolName("Kotlin_Int_or_Int")
external public infix fun Int.or(arg0: Int): Int
@SymbolName("Kotlin_Int_xor_Int")
external public infix fun Int.xor(arg0: Int): Int
@SymbolName("Kotlin_Int_shl_Int")
external public infix fun Int.shl(arg0: Int): Int
@SymbolName("Kotlin_Int_shr_Int")
external public infix fun Int.shr(arg0: Int): Int
@SymbolName("Kotlin_Int_ushr_Int")
external public infix fun Int.ushr(arg0: Int): Int
@SymbolName("Kotlin_Int_inv")
external public fun Int.inv(): Int
@SymbolName("Kotlin_Int_inc")
external public operator fun Int.inc(): Int
@SymbolName("Kotlin_Int_dec")
external public operator fun Int.dec(): Int
@SymbolName("Kotlin_Int_unaryPlus")
external public operator fun Int.unaryPlus(): Int
@SymbolName("Kotlin_Int_unaryMinus")
external public operator fun Int.unaryMinus(): Int
@SymbolName("Kotlin_Long_plus_Byte")
external public operator fun Long.plus(arg0: Byte): Long
@SymbolName("Kotlin_Long_plus_Short")
external public operator fun Long.plus(arg0: Short): Long
@SymbolName("Kotlin_Long_plus_Int")
external public operator fun Long.plus(arg0: Int): Long
@SymbolName("Kotlin_Long_plus_Long")
external public operator fun Long.plus(arg0: Long): Long
@SymbolName("Kotlin_Long_plus_Float")
external public operator fun Long.plus(arg0: Float): Float
@SymbolName("Kotlin_Long_plus_Double")
external public operator fun Long.plus(arg0: Double): Double
@SymbolName("Kotlin_Long_minus_Byte")
external public operator fun Long.minus(arg0: Byte): Long
@SymbolName("Kotlin_Long_minus_Short")
external public operator fun Long.minus(arg0: Short): Long
@SymbolName("Kotlin_Long_minus_Int")
external public operator fun Long.minus(arg0: Int): Long
@SymbolName("Kotlin_Long_minus_Long")
external public operator fun Long.minus(arg0: Long): Long
@SymbolName("Kotlin_Long_minus_Float")
external public operator fun Long.minus(arg0: Float): Float
@SymbolName("Kotlin_Long_minus_Double")
external public operator fun Long.minus(arg0: Double): Double
@SymbolName("Kotlin_Long_times_Byte")
external public operator fun Long.times(arg0: Byte): Long
@SymbolName("Kotlin_Long_times_Short")
external public operator fun Long.times(arg0: Short): Long
@SymbolName("Kotlin_Long_times_Int")
external public operator fun Long.times(arg0: Int): Long
@SymbolName("Kotlin_Long_times_Long")
external public operator fun Long.times(arg0: Long): Long
@SymbolName("Kotlin_Long_times_Float")
external public operator fun Long.times(arg0: Float): Float
@SymbolName("Kotlin_Long_times_Double")
external public operator fun Long.times(arg0: Double): Double
@SymbolName("Kotlin_Long_div_Byte")
external public operator fun Long.div(arg0: Byte): Long
@SymbolName("Kotlin_Long_div_Short")
external public operator fun Long.div(arg0: Short): Long
@SymbolName("Kotlin_Long_div_Int")
external public operator fun Long.div(arg0: Int): Long
@SymbolName("Kotlin_Long_div_Long")
external public operator fun Long.div(arg0: Long): Long
@SymbolName("Kotlin_Long_div_Float")
external public operator fun Long.div(arg0: Float): Float
@SymbolName("Kotlin_Long_div_Double")
external public operator fun Long.div(arg0: Double): Double
@SymbolName("Kotlin_Long_rem_Byte")
external public operator fun Long.rem(arg0: Byte): Long
@SymbolName("Kotlin_Long_rem_Short")
external public operator fun Long.rem(arg0: Short): Long
@SymbolName("Kotlin_Long_rem_Int")
external public operator fun Long.rem(arg0: Int): Long
@SymbolName("Kotlin_Long_rem_Long")
external public operator fun Long.rem(arg0: Long): Long
@SymbolName("Kotlin_Long_rem_Float")
external public operator fun Long.rem(arg0: Float): Float
@SymbolName("Kotlin_Long_rem_Double")
external public operator fun Long.rem(arg0: Double): Double
@SymbolName("Kotlin_Long_compareTo_Byte")
external public operator fun Long.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_Long_compareTo_Short")
external public operator fun Long.compareTo(arg0: Short): Int
@SymbolName("Kotlin_Long_compareTo_Int")
external public operator fun Long.compareTo(arg0: Int): Int
@SymbolName("Kotlin_Long_compareTo_Float")
external public operator fun Long.compareTo(arg0: Float): Int
@SymbolName("Kotlin_Long_compareTo_Double")
external public operator fun Long.compareTo(arg0: Double): Int
@SymbolName("Kotlin_Long_and_Long")
external public infix fun Long.and(arg0: Long): Long
@SymbolName("Kotlin_Long_or_Long")
external public infix fun Long.or(arg0: Long): Long
@SymbolName("Kotlin_Long_xor_Long")
external public infix fun Long.xor(arg0: Long): Long
@SymbolName("Kotlin_Long_shl_Int")
external public infix fun Long.shl(arg0: Int): Long
@SymbolName("Kotlin_Long_shr_Int")
external public infix fun Long.shr(arg0: Int): Long
@SymbolName("Kotlin_Long_ushr_Int")
external public infix fun Long.ushr(arg0: Int): Long
@SymbolName("Kotlin_Long_inv")
external public fun Long.inv(): Long
@SymbolName("Kotlin_Long_inc")
external public operator fun Long.inc(): Long
@SymbolName("Kotlin_Long_dec")
external public operator fun Long.dec(): Long
@SymbolName("Kotlin_Long_unaryPlus")
external public operator fun Long.unaryPlus(): Long
@SymbolName("Kotlin_Long_unaryMinus")
external public operator fun Long.unaryMinus(): Long


// Autogenerated with tools/generators/Operators.kt (floating_kt).
@SymbolName("Kotlin_Float_plus_Byte")
external public operator fun Float.plus(arg0: Byte): Float
@SymbolName("Kotlin_Float_plus_Short")
external public operator fun Float.plus(arg0: Short): Float
@SymbolName("Kotlin_Float_plus_Int")
external public operator fun Float.plus(arg0: Int): Float
@SymbolName("Kotlin_Float_plus_Long")
external public operator fun Float.plus(arg0: Long): Float
@SymbolName("Kotlin_Float_plus_Float")
external public operator fun Float.plus(arg0: Float): Float
@SymbolName("Kotlin_Float_plus_Double")
external public operator fun Float.plus(arg0: Double): Double
@SymbolName("Kotlin_Float_minus_Byte")
external public operator fun Float.minus(arg0: Byte): Float
@SymbolName("Kotlin_Float_minus_Short")
external public operator fun Float.minus(arg0: Short): Float
@SymbolName("Kotlin_Float_minus_Int")
external public operator fun Float.minus(arg0: Int): Float
@SymbolName("Kotlin_Float_minus_Long")
external public operator fun Float.minus(arg0: Long): Float
@SymbolName("Kotlin_Float_minus_Float")
external public operator fun Float.minus(arg0: Float): Float
@SymbolName("Kotlin_Float_minus_Double")
external public operator fun Float.minus(arg0: Double): Double
@SymbolName("Kotlin_Float_times_Byte")
external public operator fun Float.times(arg0: Byte): Float
@SymbolName("Kotlin_Float_times_Short")
external public operator fun Float.times(arg0: Short): Float
@SymbolName("Kotlin_Float_times_Int")
external public operator fun Float.times(arg0: Int): Float
@SymbolName("Kotlin_Float_times_Long")
external public operator fun Float.times(arg0: Long): Float
@SymbolName("Kotlin_Float_times_Float")
external public operator fun Float.times(arg0: Float): Float
@SymbolName("Kotlin_Float_times_Double")
external public operator fun Float.times(arg0: Double): Double
@SymbolName("Kotlin_Float_div_Byte")
external public operator fun Float.div(arg0: Byte): Float
@SymbolName("Kotlin_Float_div_Short")
external public operator fun Float.div(arg0: Short): Float
@SymbolName("Kotlin_Float_div_Int")
external public operator fun Float.div(arg0: Int): Float
@SymbolName("Kotlin_Float_div_Long")
external public operator fun Float.div(arg0: Long): Float
@SymbolName("Kotlin_Float_div_Float")
external public operator fun Float.div(arg0: Float): Float
@SymbolName("Kotlin_Float_div_Double")
external public operator fun Float.div(arg0: Double): Double
@SymbolName("Kotlin_Float_rem_Byte")
external public operator fun Float.rem(arg0: Byte): Float
@SymbolName("Kotlin_Float_rem_Short")
external public operator fun Float.rem(arg0: Short): Float
@SymbolName("Kotlin_Float_rem_Int")
external public operator fun Float.rem(arg0: Int): Float
@SymbolName("Kotlin_Float_rem_Long")
external public operator fun Float.rem(arg0: Long): Float
@SymbolName("Kotlin_Float_rem_Float")
external public operator fun Float.rem(arg0: Float): Float
@SymbolName("Kotlin_Float_rem_Double")
external public operator fun Float.rem(arg0: Double): Double
@SymbolName("Kotlin_Float_compareTo_Byte")
external public fun Float.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_Float_compareTo_Short")
external public fun Float.compareTo(arg0: Short): Int
@SymbolName("Kotlin_Float_compareTo_Int")
external public fun Float.compareTo(arg0: Int): Int
@SymbolName("Kotlin_Float_compareTo_Long")
external public fun Float.compareTo(arg0: Long): Int
@SymbolName("Kotlin_Float_compareTo_Double")
external public fun Float.compareTo(arg0: Double): Int
@SymbolName("Kotlin_Float_inc")
external public operator fun Float.inc(): Float
@SymbolName("Kotlin_Float_dec")
external public operator fun Float.dec(): Float
@SymbolName("Kotlin_Float_unaryPlus")
external public operator fun Float.unaryPlus(): Float
@SymbolName("Kotlin_Float_unaryMinus")
external public operator fun Float.unaryMinus(): Float
@SymbolName("Kotlin_Double_plus_Byte")
external public operator fun Double.plus(arg0: Byte): Double
@SymbolName("Kotlin_Double_plus_Short")
external public operator fun Double.plus(arg0: Short): Double
@SymbolName("Kotlin_Double_plus_Int")
external public operator fun Double.plus(arg0: Int): Double
@SymbolName("Kotlin_Double_plus_Long")
external public operator fun Double.plus(arg0: Long): Double
@SymbolName("Kotlin_Double_plus_Float")
external public operator fun Double.plus(arg0: Float): Double
@SymbolName("Kotlin_Double_plus_Double")
external public operator fun Double.plus(arg0: Double): Double
@SymbolName("Kotlin_Double_minus_Byte")
external public operator fun Double.minus(arg0: Byte): Double
@SymbolName("Kotlin_Double_minus_Short")
external public operator fun Double.minus(arg0: Short): Double
@SymbolName("Kotlin_Double_minus_Int")
external public operator fun Double.minus(arg0: Int): Double
@SymbolName("Kotlin_Double_minus_Long")
external public operator fun Double.minus(arg0: Long): Double
@SymbolName("Kotlin_Double_minus_Float")
external public operator fun Double.minus(arg0: Float): Double
@SymbolName("Kotlin_Double_minus_Double")
external public operator fun Double.minus(arg0: Double): Double
@SymbolName("Kotlin_Double_times_Byte")
external public operator fun Double.times(arg0: Byte): Double
@SymbolName("Kotlin_Double_times_Short")
external public operator fun Double.times(arg0: Short): Double
@SymbolName("Kotlin_Double_times_Int")
external public operator fun Double.times(arg0: Int): Double
@SymbolName("Kotlin_Double_times_Long")
external public operator fun Double.times(arg0: Long): Double
@SymbolName("Kotlin_Double_times_Float")
external public operator fun Double.times(arg0: Float): Double
@SymbolName("Kotlin_Double_times_Double")
external public operator fun Double.times(arg0: Double): Double
@SymbolName("Kotlin_Double_div_Byte")
external public operator fun Double.div(arg0: Byte): Double
@SymbolName("Kotlin_Double_div_Short")
external public operator fun Double.div(arg0: Short): Double
@SymbolName("Kotlin_Double_div_Int")
external public operator fun Double.div(arg0: Int): Double
@SymbolName("Kotlin_Double_div_Long")
external public operator fun Double.div(arg0: Long): Double
@SymbolName("Kotlin_Double_div_Float")
external public operator fun Double.div(arg0: Float): Double
@SymbolName("Kotlin_Double_div_Double")
external public operator fun Double.div(arg0: Double): Double
@SymbolName("Kotlin_Double_rem_Byte")
external public operator fun Double.rem(arg0: Byte): Double
@SymbolName("Kotlin_Double_rem_Short")
external public operator fun Double.rem(arg0: Short): Double
@SymbolName("Kotlin_Double_rem_Int")
external public operator fun Double.rem(arg0: Int): Double
@SymbolName("Kotlin_Double_rem_Long")
external public operator fun Double.rem(arg0: Long): Double
@SymbolName("Kotlin_Double_rem_Float")
external public operator fun Double.rem(arg0: Float): Double
@SymbolName("Kotlin_Double_rem_Double")
external public operator fun Double.rem(arg0: Double): Double
@SymbolName("Kotlin_Double_compareTo_Byte")
external public fun Double.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_Double_compareTo_Short")
external public fun Double.compareTo(arg0: Short): Int
@SymbolName("Kotlin_Double_compareTo_Int")
external public fun Double.compareTo(arg0: Int): Int
@SymbolName("Kotlin_Double_compareTo_Long")
external public fun Double.compareTo(arg0: Long): Int
@SymbolName("Kotlin_Double_compareTo_Float")
external public fun Double.compareTo(arg0: Float): Int
@SymbolName("Kotlin_Double_inc")
external public operator fun Double.inc(): Double
@SymbolName("Kotlin_Double_dec")
external public operator fun Double.dec(): Double
@SymbolName("Kotlin_Double_unaryPlus")
external public operator fun Double.unaryPlus(): Double
@SymbolName("Kotlin_Double_unaryMinus")
external public operator fun Double.unaryMinus(): Double
