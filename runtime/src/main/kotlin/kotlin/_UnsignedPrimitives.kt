/*
 * Copyright 2010-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package kotlin

// Autogenerated with tools/generators/Operators.kt (unsigned_kt).
@SymbolName("Kotlin_UByte_plus_Byte")
external public operator fun UByte.plus(arg0: Byte): UInt
@SymbolName("Kotlin_UByte_plus_Short")
external public operator fun UByte.plus(arg0: Short): UInt
@SymbolName("Kotlin_UByte_plus_Int")
external public operator fun UByte.plus(arg0: Int): UInt
@SymbolName("Kotlin_UByte_plus_Long")
external public operator fun UByte.plus(arg0: Long): Long
@SymbolName("Kotlin_UByte_plus_Float")
external public operator fun UByte.plus(arg0: Float): Float
@SymbolName("Kotlin_UByte_plus_Double")
external public operator fun UByte.plus(arg0: Double): Double
@SymbolName("Kotlin_UByte_minus_Byte")
external public operator fun UByte.minus(arg0: Byte): UInt
@SymbolName("Kotlin_UByte_minus_Short")
external public operator fun UByte.minus(arg0: Short): UInt
@SymbolName("Kotlin_UByte_minus_Int")
external public operator fun UByte.minus(arg0: Int): UInt
@SymbolName("Kotlin_UByte_minus_Long")
external public operator fun UByte.minus(arg0: Long): Long
@SymbolName("Kotlin_UByte_minus_Float")
external public operator fun UByte.minus(arg0: Float): Float
@SymbolName("Kotlin_UByte_minus_Double")
external public operator fun UByte.minus(arg0: Double): Double
@SymbolName("Kotlin_UByte_times_Byte")
external public operator fun UByte.times(arg0: Byte): UInt
@SymbolName("Kotlin_UByte_times_Short")
external public operator fun UByte.times(arg0: Short): UInt
@SymbolName("Kotlin_UByte_times_Int")
external public operator fun UByte.times(arg0: Int): UInt
@SymbolName("Kotlin_UByte_times_Long")
external public operator fun UByte.times(arg0: Long): Long
@SymbolName("Kotlin_UByte_times_Float")
external public operator fun UByte.times(arg0: Float): Float
@SymbolName("Kotlin_UByte_times_Double")
external public operator fun UByte.times(arg0: Double): Double
@SymbolName("Kotlin_UByte_div_Byte")
external public operator fun UByte.div(arg0: Byte): UInt
@SymbolName("Kotlin_UByte_div_Short")
external public operator fun UByte.div(arg0: Short): UInt
@SymbolName("Kotlin_UByte_div_Int")
external public operator fun UByte.div(arg0: Int): UInt
@SymbolName("Kotlin_UByte_div_Long")
external public operator fun UByte.div(arg0: Long): Long
@SymbolName("Kotlin_UByte_div_Float")
external public operator fun UByte.div(arg0: Float): Float
@SymbolName("Kotlin_UByte_div_Double")
external public operator fun UByte.div(arg0: Double): Double
@SymbolName("Kotlin_UByte_rem_Byte")
external public operator fun UByte.rem(arg0: Byte): UInt
@SymbolName("Kotlin_UByte_rem_Short")
external public operator fun UByte.rem(arg0: Short): UInt
@SymbolName("Kotlin_UByte_rem_Int")
external public operator fun UByte.rem(arg0: Int): UInt
@SymbolName("Kotlin_UByte_rem_Long")
external public operator fun UByte.rem(arg0: Long): Long
@SymbolName("Kotlin_UByte_rem_Float")
external public operator fun UByte.rem(arg0: Float): Float
@SymbolName("Kotlin_UByte_rem_Double")
external public operator fun UByte.rem(arg0: Double): Double
@SymbolName("Kotlin_UByte_compareTo_Byte")
external public operator fun UByte.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_UByte_compareTo_Short")
external public operator fun UByte.compareTo(arg0: Short): Int
@SymbolName("Kotlin_UByte_compareTo_Int")
external public operator fun UByte.compareTo(arg0: Int): Int
@SymbolName("Kotlin_UByte_compareTo_Long")
external public operator fun UByte.compareTo(arg0: Long): Int
@SymbolName("Kotlin_UByte_compareTo_Float")
external public operator fun UByte.compareTo(arg0: Float): Int
@SymbolName("Kotlin_UByte_compareTo_Double")
external public operator fun UByte.compareTo(arg0: Double): Int
@SymbolName("Kotlin_UByte_and_UByte")
external public infix fun UByte.and(arg0: UByte): UInt
@SymbolName("Kotlin_UByte_or_UByte")
external public infix fun UByte.or(arg0: UByte): UInt
@SymbolName("Kotlin_UByte_xor_UByte")
external public infix fun UByte.xor(arg0: UByte): UInt
@SymbolName("Kotlin_UByte_shl_Int")
external public infix fun UByte.shl(arg0: Int): UInt
@SymbolName("Kotlin_UByte_shr_Int")
external public infix fun UByte.shr(arg0: Int): UInt
@SymbolName("Kotlin_UByte_inv")
external public fun UByte.inv(): UByte
@SymbolName("Kotlin_UByte_inc")
external public operator fun UByte.inc(): UByte
@SymbolName("Kotlin_UByte_dec")
external public operator fun UByte.dec(): UByte
@SymbolName("Kotlin_UByte_unaryPlus")
external public operator fun UByte.unaryPlus(): UInt
@SymbolName("Kotlin_UByte_unaryMinus")
external public operator fun UByte.unaryMinus(): UInt
@SymbolName("Kotlin_UShort_plus_Byte")
external public operator fun UShort.plus(arg0: Byte): UInt
@SymbolName("Kotlin_UShort_plus_Short")
external public operator fun UShort.plus(arg0: Short): UInt
@SymbolName("Kotlin_UShort_plus_Int")
external public operator fun UShort.plus(arg0: Int): UInt
@SymbolName("Kotlin_UShort_plus_Long")
external public operator fun UShort.plus(arg0: Long): Long
@SymbolName("Kotlin_UShort_plus_Float")
external public operator fun UShort.plus(arg0: Float): Float
@SymbolName("Kotlin_UShort_plus_Double")
external public operator fun UShort.plus(arg0: Double): Double
@SymbolName("Kotlin_UShort_minus_Byte")
external public operator fun UShort.minus(arg0: Byte): UInt
@SymbolName("Kotlin_UShort_minus_Short")
external public operator fun UShort.minus(arg0: Short): UInt
@SymbolName("Kotlin_UShort_minus_Int")
external public operator fun UShort.minus(arg0: Int): UInt
@SymbolName("Kotlin_UShort_minus_Long")
external public operator fun UShort.minus(arg0: Long): Long
@SymbolName("Kotlin_UShort_minus_Float")
external public operator fun UShort.minus(arg0: Float): Float
@SymbolName("Kotlin_UShort_minus_Double")
external public operator fun UShort.minus(arg0: Double): Double
@SymbolName("Kotlin_UShort_times_Byte")
external public operator fun UShort.times(arg0: Byte): UInt
@SymbolName("Kotlin_UShort_times_Short")
external public operator fun UShort.times(arg0: Short): UInt
@SymbolName("Kotlin_UShort_times_Int")
external public operator fun UShort.times(arg0: Int): UInt
@SymbolName("Kotlin_UShort_times_Long")
external public operator fun UShort.times(arg0: Long): Long
@SymbolName("Kotlin_UShort_times_Float")
external public operator fun UShort.times(arg0: Float): Float
@SymbolName("Kotlin_UShort_times_Double")
external public operator fun UShort.times(arg0: Double): Double
@SymbolName("Kotlin_UShort_div_Byte")
external public operator fun UShort.div(arg0: Byte): UInt
@SymbolName("Kotlin_UShort_div_Short")
external public operator fun UShort.div(arg0: Short): UInt
@SymbolName("Kotlin_UShort_div_Int")
external public operator fun UShort.div(arg0: Int): UInt
@SymbolName("Kotlin_UShort_div_Long")
external public operator fun UShort.div(arg0: Long): Long
@SymbolName("Kotlin_UShort_div_Float")
external public operator fun UShort.div(arg0: Float): Float
@SymbolName("Kotlin_UShort_div_Double")
external public operator fun UShort.div(arg0: Double): Double
@SymbolName("Kotlin_UShort_rem_Byte")
external public operator fun UShort.rem(arg0: Byte): UInt
@SymbolName("Kotlin_UShort_rem_Short")
external public operator fun UShort.rem(arg0: Short): UInt
@SymbolName("Kotlin_UShort_rem_Int")
external public operator fun UShort.rem(arg0: Int): UInt
@SymbolName("Kotlin_UShort_rem_Long")
external public operator fun UShort.rem(arg0: Long): Long
@SymbolName("Kotlin_UShort_rem_Float")
external public operator fun UShort.rem(arg0: Float): Float
@SymbolName("Kotlin_UShort_rem_Double")
external public operator fun UShort.rem(arg0: Double): Double
@SymbolName("Kotlin_UShort_compareTo_Byte")
external public operator fun UShort.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_UShort_compareTo_Short")
external public operator fun UShort.compareTo(arg0: Short): Int
@SymbolName("Kotlin_UShort_compareTo_Int")
external public operator fun UShort.compareTo(arg0: Int): Int
@SymbolName("Kotlin_UShort_compareTo_Long")
external public operator fun UShort.compareTo(arg0: Long): Int
@SymbolName("Kotlin_UShort_compareTo_Float")
external public operator fun UShort.compareTo(arg0: Float): Int
@SymbolName("Kotlin_UShort_compareTo_Double")
external public operator fun UShort.compareTo(arg0: Double): Int
@SymbolName("Kotlin_UShort_and_UShort")
external public infix fun UShort.and(arg0: UShort): UInt
@SymbolName("Kotlin_UShort_or_UShort")
external public infix fun UShort.or(arg0: UShort): UInt
@SymbolName("Kotlin_UShort_xor_UShort")
external public infix fun UShort.xor(arg0: UShort): UInt
@SymbolName("Kotlin_UShort_shl_Int")
external public infix fun UShort.shl(arg0: Int): UInt
@SymbolName("Kotlin_UShort_shr_Int")
external public infix fun UShort.shr(arg0: Int): UInt
@SymbolName("Kotlin_UShort_inv")
external public fun UShort.inv(): UShort
@SymbolName("Kotlin_UShort_inc")
external public operator fun UShort.inc(): UShort
@SymbolName("Kotlin_UShort_dec")
external public operator fun UShort.dec(): UShort
@SymbolName("Kotlin_UShort_unaryPlus")
external public operator fun UShort.unaryPlus(): UInt
@SymbolName("Kotlin_UShort_unaryMinus")
external public operator fun UShort.unaryMinus(): UInt
@SymbolName("Kotlin_UInt_plus_Byte")
external public operator fun UInt.plus(arg0: Byte): UInt
@SymbolName("Kotlin_UInt_plus_Short")
external public operator fun UInt.plus(arg0: Short): UInt
@SymbolName("Kotlin_UInt_plus_Int")
external public operator fun UInt.plus(arg0: Int): UInt
@SymbolName("Kotlin_UInt_plus_Long")
external public operator fun UInt.plus(arg0: Long): Long
@SymbolName("Kotlin_UInt_plus_Float")
external public operator fun UInt.plus(arg0: Float): Float
@SymbolName("Kotlin_UInt_plus_Double")
external public operator fun UInt.plus(arg0: Double): Double
@SymbolName("Kotlin_UInt_minus_Byte")
external public operator fun UInt.minus(arg0: Byte): UInt
@SymbolName("Kotlin_UInt_minus_Short")
external public operator fun UInt.minus(arg0: Short): UInt
@SymbolName("Kotlin_UInt_minus_Int")
external public operator fun UInt.minus(arg0: Int): UInt
@SymbolName("Kotlin_UInt_minus_Long")
external public operator fun UInt.minus(arg0: Long): Long
@SymbolName("Kotlin_UInt_minus_Float")
external public operator fun UInt.minus(arg0: Float): Float
@SymbolName("Kotlin_UInt_minus_Double")
external public operator fun UInt.minus(arg0: Double): Double
@SymbolName("Kotlin_UInt_times_Byte")
external public operator fun UInt.times(arg0: Byte): UInt
@SymbolName("Kotlin_UInt_times_Short")
external public operator fun UInt.times(arg0: Short): UInt
@SymbolName("Kotlin_UInt_times_Int")
external public operator fun UInt.times(arg0: Int): UInt
@SymbolName("Kotlin_UInt_times_Long")
external public operator fun UInt.times(arg0: Long): Long
@SymbolName("Kotlin_UInt_times_Float")
external public operator fun UInt.times(arg0: Float): Float
@SymbolName("Kotlin_UInt_times_Double")
external public operator fun UInt.times(arg0: Double): Double
@SymbolName("Kotlin_UInt_div_Byte")
external public operator fun UInt.div(arg0: Byte): UInt
@SymbolName("Kotlin_UInt_div_Short")
external public operator fun UInt.div(arg0: Short): UInt
@SymbolName("Kotlin_UInt_div_Int")
external public operator fun UInt.div(arg0: Int): UInt
@SymbolName("Kotlin_UInt_div_Long")
external public operator fun UInt.div(arg0: Long): Long
@SymbolName("Kotlin_UInt_div_Float")
external public operator fun UInt.div(arg0: Float): Float
@SymbolName("Kotlin_UInt_div_Double")
external public operator fun UInt.div(arg0: Double): Double
@SymbolName("Kotlin_UInt_rem_Byte")
external public operator fun UInt.rem(arg0: Byte): UInt
@SymbolName("Kotlin_UInt_rem_Short")
external public operator fun UInt.rem(arg0: Short): UInt
@SymbolName("Kotlin_UInt_rem_Int")
external public operator fun UInt.rem(arg0: Int): UInt
@SymbolName("Kotlin_UInt_rem_Long")
external public operator fun UInt.rem(arg0: Long): Long
@SymbolName("Kotlin_UInt_rem_Float")
external public operator fun UInt.rem(arg0: Float): Float
@SymbolName("Kotlin_UInt_rem_Double")
external public operator fun UInt.rem(arg0: Double): Double
@SymbolName("Kotlin_UInt_compareTo_Byte")
external public operator fun UInt.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_UInt_compareTo_Short")
external public operator fun UInt.compareTo(arg0: Short): Int
@SymbolName("Kotlin_UInt_compareTo_Int")
external public operator fun UInt.compareTo(arg0: Int): Int
@SymbolName("Kotlin_UInt_compareTo_Long")
external public operator fun UInt.compareTo(arg0: Long): Int
@SymbolName("Kotlin_UInt_compareTo_Float")
external public operator fun UInt.compareTo(arg0: Float): Int
@SymbolName("Kotlin_UInt_compareTo_Double")
external public operator fun UInt.compareTo(arg0: Double): Int
@SymbolName("Kotlin_UInt_and_UInt")
external public infix fun UInt.and(arg0: UInt): UInt
@SymbolName("Kotlin_UInt_or_UInt")
external public infix fun UInt.or(arg0: UInt): UInt
@SymbolName("Kotlin_UInt_xor_UInt")
external public infix fun UInt.xor(arg0: UInt): UInt
@SymbolName("Kotlin_UInt_shl_Int")
external public infix fun UInt.shl(arg0: Int): UInt
@SymbolName("Kotlin_UInt_shr_Int")
external public infix fun UInt.shr(arg0: Int): UInt
@SymbolName("Kotlin_UInt_inv")
external public fun UInt.inv(): UInt
@SymbolName("Kotlin_UInt_inc")
external public operator fun UInt.inc(): UInt
@SymbolName("Kotlin_UInt_dec")
external public operator fun UInt.dec(): UInt
@SymbolName("Kotlin_UInt_unaryPlus")
external public operator fun UInt.unaryPlus(): UInt
@SymbolName("Kotlin_UInt_unaryMinus")
external public operator fun UInt.unaryMinus(): UInt
@SymbolName("Kotlin_ULong_plus_Byte")
external public operator fun ULong.plus(arg0: Byte): ULong
@SymbolName("Kotlin_ULong_plus_Short")
external public operator fun ULong.plus(arg0: Short): ULong
@SymbolName("Kotlin_ULong_plus_Int")
external public operator fun ULong.plus(arg0: Int): ULong
@SymbolName("Kotlin_ULong_plus_Long")
external public operator fun ULong.plus(arg0: Long): ULong
@SymbolName("Kotlin_ULong_plus_Float")
external public operator fun ULong.plus(arg0: Float): Float
@SymbolName("Kotlin_ULong_plus_Double")
external public operator fun ULong.plus(arg0: Double): Double
@SymbolName("Kotlin_ULong_minus_Byte")
external public operator fun ULong.minus(arg0: Byte): ULong
@SymbolName("Kotlin_ULong_minus_Short")
external public operator fun ULong.minus(arg0: Short): ULong
@SymbolName("Kotlin_ULong_minus_Int")
external public operator fun ULong.minus(arg0: Int): ULong
@SymbolName("Kotlin_ULong_minus_Long")
external public operator fun ULong.minus(arg0: Long): ULong
@SymbolName("Kotlin_ULong_minus_Float")
external public operator fun ULong.minus(arg0: Float): Float
@SymbolName("Kotlin_ULong_minus_Double")
external public operator fun ULong.minus(arg0: Double): Double
@SymbolName("Kotlin_ULong_times_Byte")
external public operator fun ULong.times(arg0: Byte): ULong
@SymbolName("Kotlin_ULong_times_Short")
external public operator fun ULong.times(arg0: Short): ULong
@SymbolName("Kotlin_ULong_times_Int")
external public operator fun ULong.times(arg0: Int): ULong
@SymbolName("Kotlin_ULong_times_Long")
external public operator fun ULong.times(arg0: Long): ULong
@SymbolName("Kotlin_ULong_times_Float")
external public operator fun ULong.times(arg0: Float): Float
@SymbolName("Kotlin_ULong_times_Double")
external public operator fun ULong.times(arg0: Double): Double
@SymbolName("Kotlin_ULong_div_Byte")
external public operator fun ULong.div(arg0: Byte): ULong
@SymbolName("Kotlin_ULong_div_Short")
external public operator fun ULong.div(arg0: Short): ULong
@SymbolName("Kotlin_ULong_div_Int")
external public operator fun ULong.div(arg0: Int): ULong
@SymbolName("Kotlin_ULong_div_Long")
external public operator fun ULong.div(arg0: Long): ULong
@SymbolName("Kotlin_ULong_div_Float")
external public operator fun ULong.div(arg0: Float): Float
@SymbolName("Kotlin_ULong_div_Double")
external public operator fun ULong.div(arg0: Double): Double
@SymbolName("Kotlin_ULong_rem_Byte")
external public operator fun ULong.rem(arg0: Byte): ULong
@SymbolName("Kotlin_ULong_rem_Short")
external public operator fun ULong.rem(arg0: Short): ULong
@SymbolName("Kotlin_ULong_rem_Int")
external public operator fun ULong.rem(arg0: Int): ULong
@SymbolName("Kotlin_ULong_rem_Long")
external public operator fun ULong.rem(arg0: Long): ULong
@SymbolName("Kotlin_ULong_rem_Float")
external public operator fun ULong.rem(arg0: Float): Float
@SymbolName("Kotlin_ULong_rem_Double")
external public operator fun ULong.rem(arg0: Double): Double
@SymbolName("Kotlin_ULong_compareTo_Byte")
external public operator fun ULong.compareTo(arg0: Byte): Int
@SymbolName("Kotlin_ULong_compareTo_Short")
external public operator fun ULong.compareTo(arg0: Short): Int
@SymbolName("Kotlin_ULong_compareTo_Int")
external public operator fun ULong.compareTo(arg0: Int): Int
@SymbolName("Kotlin_ULong_compareTo_Long")
external public operator fun ULong.compareTo(arg0: Long): Int
@SymbolName("Kotlin_ULong_compareTo_Float")
external public operator fun ULong.compareTo(arg0: Float): Int
@SymbolName("Kotlin_ULong_compareTo_Double")
external public operator fun ULong.compareTo(arg0: Double): Int
@SymbolName("Kotlin_ULong_and_ULong")
external public infix fun ULong.and(arg0: ULong): ULong
@SymbolName("Kotlin_ULong_or_ULong")
external public infix fun ULong.or(arg0: ULong): ULong
@SymbolName("Kotlin_ULong_xor_ULong")
external public infix fun ULong.xor(arg0: ULong): ULong
@SymbolName("Kotlin_ULong_shl_Int")
external public infix fun ULong.shl(arg0: Int): ULong
@SymbolName("Kotlin_ULong_shr_Int")
external public infix fun ULong.shr(arg0: Int): ULong
@SymbolName("Kotlin_ULong_inv")
external public fun ULong.inv(): ULong
@SymbolName("Kotlin_ULong_inc")
external public operator fun ULong.inc(): ULong
@SymbolName("Kotlin_ULong_dec")
external public operator fun ULong.dec(): ULong
@SymbolName("Kotlin_ULong_unaryPlus")
external public operator fun ULong.unaryPlus(): ULong
@SymbolName("Kotlin_ULong_unaryMinus")
external public operator fun ULong.unaryMinus(): ULong