//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/javax/security/cert/CertificateExpiredException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException")
#ifdef RESTRICT_JavaxSecurityCertCertificateExpiredException
#define INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException 0
#else
#define INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException 1
#endif
#undef RESTRICT_JavaxSecurityCertCertificateExpiredException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxSecurityCertCertificateExpiredException_) && (INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException || defined(INCLUDE_JavaxSecurityCertCertificateExpiredException))
#define JavaxSecurityCertCertificateExpiredException_

#define RESTRICT_JavaxSecurityCertCertificateException 1
#define INCLUDE_JavaxSecurityCertCertificateException 1
#include "javax/security/cert/CertificateException.h"

/*!
 @brief The exception that is thrown when a <code>Certificate</code> has expired.
 <p>
  Note: This package is provided only for compatibility reasons. It contains a
  simplified version of the java.security.cert package that was previously used
  by JSSE (Java SSL package). All applications that do not have to be
  compatible with older versions of JSSE (that is before Java SDK 1.5) should
  only use java.security.cert.
 */
@interface JavaxSecurityCertCertificateExpiredException : JavaxSecurityCertCertificateException

#pragma mark Public

/*!
 @brief Creates a new <code>CertificateExpiredException</code>.
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates a new <code>CertificateExpiredException</code> with the specified
  message.
 @param msg the detail message for this exception
 */
- (instancetype __nonnull)initWithNSString:(NSString *)msg;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxSecurityCertCertificateExpiredException)

FOUNDATION_EXPORT void JavaxSecurityCertCertificateExpiredException_initWithNSString_(JavaxSecurityCertCertificateExpiredException *self, NSString *msg);

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *new_JavaxSecurityCertCertificateExpiredException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *create_JavaxSecurityCertCertificateExpiredException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void JavaxSecurityCertCertificateExpiredException_init(JavaxSecurityCertCertificateExpiredException *self);

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *new_JavaxSecurityCertCertificateExpiredException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *create_JavaxSecurityCertCertificateExpiredException_init(void);

J2OBJC_TYPE_LITERAL_HEADER(JavaxSecurityCertCertificateExpiredException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException")
