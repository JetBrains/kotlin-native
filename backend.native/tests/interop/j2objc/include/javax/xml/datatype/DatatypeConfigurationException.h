//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/luni/src/main/java/javax/xml/datatype/DatatypeConfigurationException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxXmlDatatypeDatatypeConfigurationException")
#ifdef RESTRICT_JavaxXmlDatatypeDatatypeConfigurationException
#define INCLUDE_ALL_JavaxXmlDatatypeDatatypeConfigurationException 0
#else
#define INCLUDE_ALL_JavaxXmlDatatypeDatatypeConfigurationException 1
#endif
#undef RESTRICT_JavaxXmlDatatypeDatatypeConfigurationException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxXmlDatatypeDatatypeConfigurationException_) && (INCLUDE_ALL_JavaxXmlDatatypeDatatypeConfigurationException || defined(INCLUDE_JavaxXmlDatatypeDatatypeConfigurationException))
#define JavaxXmlDatatypeDatatypeConfigurationException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaIoPrintStream;
@class JavaIoPrintWriter;
@class JavaLangThrowable;

/*!
 @brief <p>Indicates a serious configuration error.
 </p>
 @author <a href="mailto:Jeff.Suttor@@Sun.com">Jeff Suttor</a>
 @version $Revision: 569987 $, $Date: 2007-08-26 21:08:46 -0700 (Sun, 26 Aug 2007) $
 @since 1.5
 */
@interface JavaxXmlDatatypeDatatypeConfigurationException : JavaLangException

#pragma mark Public

/*!
 @brief <p>Create a new <code>DatatypeConfigurationException</code> with
  no specified detail message and cause.
 </p>
 */
- (instancetype __nonnull)init;

/*!
 @brief <p>Create a new <code>DatatypeConfigurationException</code> with
  the specified detail message.
 </p>
 @param message The detail message.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message;

/*!
 @brief <p>Create a new <code>DatatypeConfigurationException</code> with
  the specified detail message and cause.
 </p>
 @param message The detail message.
 @param cause The cause.  A  <code> null </code>  value is permitted, and indicates that the cause is nonexistent or unknown.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief <p>Create a new <code>DatatypeConfigurationException</code> with
  the specified cause.
 </p>
 @param cause The cause.  A  <code> null </code>  value is permitted, and indicates that the cause is nonexistent or unknown.
 */
- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Print the the trace of methods from where the error
  originated.This will trace all nested exception
  objects, as well as this object.
 */
- (void)printStackTrace;

/*!
 @brief Print the the trace of methods from where the error
  originated.This will trace all nested exception
  objects, as well as this object.
 @param s The stream where the dump will be sent to.
 */
- (void)printStackTraceWithJavaIoPrintStream:(JavaIoPrintStream *)s;

/*!
 @brief Print the the trace of methods from where the error
  originated.This will trace all nested exception
  objects, as well as this object.
 @param s The writer where the dump will be sent to.
 */
- (void)printStackTraceWithJavaIoPrintWriter:(JavaIoPrintWriter *)s;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(JavaxXmlDatatypeDatatypeConfigurationException)

FOUNDATION_EXPORT void JavaxXmlDatatypeDatatypeConfigurationException_init(JavaxXmlDatatypeDatatypeConfigurationException *self);

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *new_JavaxXmlDatatypeDatatypeConfigurationException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *create_JavaxXmlDatatypeDatatypeConfigurationException_init(void);

FOUNDATION_EXPORT void JavaxXmlDatatypeDatatypeConfigurationException_initWithNSString_(JavaxXmlDatatypeDatatypeConfigurationException *self, NSString *message);

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *new_JavaxXmlDatatypeDatatypeConfigurationException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *create_JavaxXmlDatatypeDatatypeConfigurationException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void JavaxXmlDatatypeDatatypeConfigurationException_initWithNSString_withJavaLangThrowable_(JavaxXmlDatatypeDatatypeConfigurationException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *new_JavaxXmlDatatypeDatatypeConfigurationException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *create_JavaxXmlDatatypeDatatypeConfigurationException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT void JavaxXmlDatatypeDatatypeConfigurationException_initWithJavaLangThrowable_(JavaxXmlDatatypeDatatypeConfigurationException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *new_JavaxXmlDatatypeDatatypeConfigurationException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConfigurationException *create_JavaxXmlDatatypeDatatypeConfigurationException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(JavaxXmlDatatypeDatatypeConfigurationException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxXmlDatatypeDatatypeConfigurationException")
