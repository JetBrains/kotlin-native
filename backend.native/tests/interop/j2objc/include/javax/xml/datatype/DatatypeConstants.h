//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/luni/src/main/java/javax/xml/datatype/DatatypeConstants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxXmlDatatypeDatatypeConstants")
#ifdef RESTRICT_JavaxXmlDatatypeDatatypeConstants
#define INCLUDE_ALL_JavaxXmlDatatypeDatatypeConstants 0
#else
#define INCLUDE_ALL_JavaxXmlDatatypeDatatypeConstants 1
#endif
#undef RESTRICT_JavaxXmlDatatypeDatatypeConstants

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxXmlDatatypeDatatypeConstants_) && (INCLUDE_ALL_JavaxXmlDatatypeDatatypeConstants || defined(INCLUDE_JavaxXmlDatatypeDatatypeConstants))
#define JavaxXmlDatatypeDatatypeConstants_

@class JavaxXmlDatatypeDatatypeConstants_Field;
@class JavaxXmlNamespaceQName;

/*!
 @brief <p>Utility class to contain basic Datatype values as constants.
 </p>
 @author <a href="mailto:Jeff.Suttor@@Sun.com">Jeff Suttor</a>
 @version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
 @since 1.5
 */
@interface JavaxXmlDatatypeDatatypeConstants : NSObject
@property (readonly, class) jint JANUARY NS_SWIFT_NAME(JANUARY);
@property (readonly, class) jint FEBRUARY NS_SWIFT_NAME(FEBRUARY);
@property (readonly, class) jint MARCH NS_SWIFT_NAME(MARCH);
@property (readonly, class) jint APRIL NS_SWIFT_NAME(APRIL);
@property (readonly, class) jint MAY NS_SWIFT_NAME(MAY);
@property (readonly, class) jint JUNE NS_SWIFT_NAME(JUNE);
@property (readonly, class) jint JULY NS_SWIFT_NAME(JULY);
@property (readonly, class) jint AUGUST NS_SWIFT_NAME(AUGUST);
@property (readonly, class) jint SEPTEMBER NS_SWIFT_NAME(SEPTEMBER);
@property (readonly, class) jint OCTOBER NS_SWIFT_NAME(OCTOBER);
@property (readonly, class) jint NOVEMBER NS_SWIFT_NAME(NOVEMBER);
@property (readonly, class) jint DECEMBER NS_SWIFT_NAME(DECEMBER);
@property (readonly, class) jint LESSER NS_SWIFT_NAME(LESSER);
@property (readonly, class) jint EQUAL NS_SWIFT_NAME(EQUAL);
@property (readonly, class) jint GREATER NS_SWIFT_NAME(GREATER);
@property (readonly, class) jint INDETERMINATE NS_SWIFT_NAME(INDETERMINATE);
@property (readonly, class) jint FIELD_UNDEFINED NS_SWIFT_NAME(FIELD_UNDEFINED);
@property (readonly, class, strong) JavaxXmlDatatypeDatatypeConstants_Field *YEARS NS_SWIFT_NAME(YEARS);
@property (readonly, class, strong) JavaxXmlDatatypeDatatypeConstants_Field *MONTHS NS_SWIFT_NAME(MONTHS);
@property (readonly, class, strong) JavaxXmlDatatypeDatatypeConstants_Field *DAYS NS_SWIFT_NAME(DAYS);
@property (readonly, class, strong) JavaxXmlDatatypeDatatypeConstants_Field *HOURS NS_SWIFT_NAME(HOURS);
@property (readonly, class, strong) JavaxXmlDatatypeDatatypeConstants_Field *MINUTES NS_SWIFT_NAME(MINUTES);
@property (readonly, class, strong) JavaxXmlDatatypeDatatypeConstants_Field *SECONDS NS_SWIFT_NAME(SECONDS);
@property (readonly, class, strong) JavaxXmlNamespaceQName *DATETIME NS_SWIFT_NAME(DATETIME);
@property (readonly, class, strong) JavaxXmlNamespaceQName *TIME NS_SWIFT_NAME(TIME);
@property (readonly, class, strong) JavaxXmlNamespaceQName *DATE NS_SWIFT_NAME(DATE);
@property (readonly, class, strong) JavaxXmlNamespaceQName *GYEARMONTH NS_SWIFT_NAME(GYEARMONTH);
@property (readonly, class, strong) JavaxXmlNamespaceQName *GMONTHDAY NS_SWIFT_NAME(GMONTHDAY);
@property (readonly, class, strong) JavaxXmlNamespaceQName *GYEAR NS_SWIFT_NAME(GYEAR);
@property (readonly, class, strong) JavaxXmlNamespaceQName *GMONTH NS_SWIFT_NAME(GMONTH);
@property (readonly, class, strong) JavaxXmlNamespaceQName *GDAY NS_SWIFT_NAME(GDAY);
@property (readonly, class, strong) JavaxXmlNamespaceQName *DURATION NS_SWIFT_NAME(DURATION);
@property (readonly, class, strong) JavaxXmlNamespaceQName *DURATION_DAYTIME NS_SWIFT_NAME(DURATION_DAYTIME);
@property (readonly, class, strong) JavaxXmlNamespaceQName *DURATION_YEARMONTH NS_SWIFT_NAME(DURATION_YEARMONTH);
@property (readonly, class) jint MAX_TIMEZONE_OFFSET NS_SWIFT_NAME(MAX_TIMEZONE_OFFSET);
@property (readonly, class) jint MIN_TIMEZONE_OFFSET NS_SWIFT_NAME(MIN_TIMEZONE_OFFSET);

+ (jint)JANUARY;

+ (jint)FEBRUARY;

+ (jint)MARCH;

+ (jint)APRIL;

+ (jint)MAY;

+ (jint)JUNE;

+ (jint)JULY;

+ (jint)AUGUST;

+ (jint)SEPTEMBER;

+ (jint)OCTOBER;

+ (jint)NOVEMBER;

+ (jint)DECEMBER;

+ (jint)LESSER;

+ (jint)EQUAL;

+ (jint)GREATER;

+ (jint)INDETERMINATE;

+ (jint)FIELD_UNDEFINED;

+ (JavaxXmlDatatypeDatatypeConstants_Field *)YEARS;

+ (JavaxXmlDatatypeDatatypeConstants_Field *)MONTHS;

+ (JavaxXmlDatatypeDatatypeConstants_Field *)DAYS;

+ (JavaxXmlDatatypeDatatypeConstants_Field *)HOURS;

+ (JavaxXmlDatatypeDatatypeConstants_Field *)MINUTES;

+ (JavaxXmlDatatypeDatatypeConstants_Field *)SECONDS;

+ (JavaxXmlNamespaceQName *)DATETIME;

+ (JavaxXmlNamespaceQName *)TIME;

+ (JavaxXmlNamespaceQName *)DATE;

+ (JavaxXmlNamespaceQName *)GYEARMONTH;

+ (JavaxXmlNamespaceQName *)GMONTHDAY;

+ (JavaxXmlNamespaceQName *)GYEAR;

+ (JavaxXmlNamespaceQName *)GMONTH;

+ (JavaxXmlNamespaceQName *)GDAY;

+ (JavaxXmlNamespaceQName *)DURATION;

+ (JavaxXmlNamespaceQName *)DURATION_DAYTIME;

+ (JavaxXmlNamespaceQName *)DURATION_YEARMONTH;

+ (jint)MAX_TIMEZONE_OFFSET;

+ (jint)MIN_TIMEZONE_OFFSET;

@end

J2OBJC_STATIC_INIT(JavaxXmlDatatypeDatatypeConstants)

/*!
 @brief Value for first month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_JANUARY(void);
#define JavaxXmlDatatypeDatatypeConstants_JANUARY 1
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, JANUARY, jint)

/*!
 @brief Value for second month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_FEBRUARY(void);
#define JavaxXmlDatatypeDatatypeConstants_FEBRUARY 2
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, FEBRUARY, jint)

/*!
 @brief Value for third month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_MARCH(void);
#define JavaxXmlDatatypeDatatypeConstants_MARCH 3
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, MARCH, jint)

/*!
 @brief Value for fourth month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_APRIL(void);
#define JavaxXmlDatatypeDatatypeConstants_APRIL 4
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, APRIL, jint)

/*!
 @brief Value for fifth month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_MAY(void);
#define JavaxXmlDatatypeDatatypeConstants_MAY 5
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, MAY, jint)

/*!
 @brief Value for sixth month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_JUNE(void);
#define JavaxXmlDatatypeDatatypeConstants_JUNE 6
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, JUNE, jint)

/*!
 @brief Value for seventh month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_JULY(void);
#define JavaxXmlDatatypeDatatypeConstants_JULY 7
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, JULY, jint)

/*!
 @brief Value for eighth month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_AUGUST(void);
#define JavaxXmlDatatypeDatatypeConstants_AUGUST 8
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, AUGUST, jint)

/*!
 @brief Value for ninth month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_SEPTEMBER(void);
#define JavaxXmlDatatypeDatatypeConstants_SEPTEMBER 9
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, SEPTEMBER, jint)

/*!
 @brief Value for tenth month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_OCTOBER(void);
#define JavaxXmlDatatypeDatatypeConstants_OCTOBER 10
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, OCTOBER, jint)

/*!
 @brief Value for eleven month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_NOVEMBER(void);
#define JavaxXmlDatatypeDatatypeConstants_NOVEMBER 11
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, NOVEMBER, jint)

/*!
 @brief Value for twelve month of year.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_DECEMBER(void);
#define JavaxXmlDatatypeDatatypeConstants_DECEMBER 12
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, DECEMBER, jint)

/*!
 @brief <p>Comparison result.
 </p>
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_LESSER(void);
#define JavaxXmlDatatypeDatatypeConstants_LESSER -1
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, LESSER, jint)

/*!
 @brief <p>Comparison result.
 </p>
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_EQUAL(void);
#define JavaxXmlDatatypeDatatypeConstants_EQUAL 0
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, EQUAL, jint)

/*!
 @brief <p>Comparison result.
 </p>
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_GREATER(void);
#define JavaxXmlDatatypeDatatypeConstants_GREATER 1
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, GREATER, jint)

/*!
 @brief <p>Comparison result.
 </p>
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_INDETERMINATE(void);
#define JavaxXmlDatatypeDatatypeConstants_INDETERMINATE 2
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, INDETERMINATE, jint)

/*!
 @brief Designation that an "int" field is not set.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_FIELD_UNDEFINED(void);
#define JavaxXmlDatatypeDatatypeConstants_FIELD_UNDEFINED ((jint) 0x80000000)
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, FIELD_UNDEFINED, jint)

/*!
 @brief <p>A constant that represents the years field.
 </p>
 */
inline JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_get_YEARS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_YEARS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, YEARS, JavaxXmlDatatypeDatatypeConstants_Field *)

/*!
 @brief <p>A constant that represents the months field.
 </p>
 */
inline JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_get_MONTHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_MONTHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, MONTHS, JavaxXmlDatatypeDatatypeConstants_Field *)

/*!
 @brief <p>A constant that represents the days field.
 </p>
 */
inline JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_get_DAYS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_DAYS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, DAYS, JavaxXmlDatatypeDatatypeConstants_Field *)

/*!
 @brief <p>A constant that represents the hours field.
 </p>
 */
inline JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_get_HOURS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_HOURS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, HOURS, JavaxXmlDatatypeDatatypeConstants_Field *)

/*!
 @brief <p>A constant that represents the minutes field.
 </p>
 */
inline JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_get_MINUTES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_MINUTES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, MINUTES, JavaxXmlDatatypeDatatypeConstants_Field *)

/*!
 @brief <p>A constant that represents the seconds field.
 </p>
 */
inline JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_get_SECONDS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeConstants_Field *JavaxXmlDatatypeDatatypeConstants_SECONDS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, SECONDS, JavaxXmlDatatypeDatatypeConstants_Field *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>dateTime</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_DATETIME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_DATETIME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, DATETIME, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>time</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_TIME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_TIME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, TIME, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>date</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_DATE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_DATE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, DATE, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gYearMonth</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_GYEARMONTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_GYEARMONTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, GYEARMONTH, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gMonthDay</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_GMONTHDAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_GMONTHDAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, GMONTHDAY, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gYear</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_GYEAR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_GYEAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, GYEAR, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gMonth</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_GMONTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_GMONTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, GMONTH, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema 1.0 datatype <code>gDay</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_GDAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_GDAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, GDAY, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for W3C XML Schema datatype <code>duration</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_DURATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_DURATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, DURATION, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for XQuery 1.0 and XPath 2.0 datatype <code>dayTimeDuration</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_DURATION_DAYTIME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_DURATION_DAYTIME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, DURATION_DAYTIME, JavaxXmlNamespaceQName *)

/*!
 @brief <p>Fully qualified name for XQuery 1.0 and XPath 2.0 datatype <code>yearMonthDuration</code>.
 </p>
 */
inline JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_get_DURATION_YEARMONTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlNamespaceQName *JavaxXmlDatatypeDatatypeConstants_DURATION_YEARMONTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(JavaxXmlDatatypeDatatypeConstants, DURATION_YEARMONTH, JavaxXmlNamespaceQName *)

/*!
 @brief W3C XML Schema max timezone offset is -14:00.Zone offset is in minutes.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_MAX_TIMEZONE_OFFSET(void);
#define JavaxXmlDatatypeDatatypeConstants_MAX_TIMEZONE_OFFSET -840
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, MAX_TIMEZONE_OFFSET, jint)

/*!
 @brief W3C XML Schema min timezone offset is +14:00.Zone offset is in minutes.
 */
inline jint JavaxXmlDatatypeDatatypeConstants_get_MIN_TIMEZONE_OFFSET(void);
#define JavaxXmlDatatypeDatatypeConstants_MIN_TIMEZONE_OFFSET 840
J2OBJC_STATIC_FIELD_CONSTANT(JavaxXmlDatatypeDatatypeConstants, MIN_TIMEZONE_OFFSET, jint)

J2OBJC_TYPE_LITERAL_HEADER(JavaxXmlDatatypeDatatypeConstants)

#endif

#if !defined (JavaxXmlDatatypeDatatypeConstants_Field_) && (INCLUDE_ALL_JavaxXmlDatatypeDatatypeConstants || defined(INCLUDE_JavaxXmlDatatypeDatatypeConstants_Field))
#define JavaxXmlDatatypeDatatypeConstants_Field_

/*!
 @brief Type-safe enum class that represents six fields
  of the <code>Duration</code> class.
 */
@interface JavaxXmlDatatypeDatatypeConstants_Field : NSObject

#pragma mark Public

/*!
 @brief <p>Get id of this Field.
 </p>
 @return Id of field.
 */
- (jint)getId;

/*!
 @brief Returns a field name in English.This method
  is intended to be used for debugging/diagnosis
  and not for display to end-users.
 @return a non-null valid String constant.
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxXmlDatatypeDatatypeConstants_Field)

J2OBJC_TYPE_LITERAL_HEADER(JavaxXmlDatatypeDatatypeConstants_Field)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxXmlDatatypeDatatypeConstants")
