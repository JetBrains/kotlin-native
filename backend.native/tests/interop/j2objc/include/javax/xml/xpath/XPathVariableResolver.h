//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/luni/src/main/java/javax/xml/xpath/XPathVariableResolver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxXmlXpathXPathVariableResolver")
#ifdef RESTRICT_JavaxXmlXpathXPathVariableResolver
#define INCLUDE_ALL_JavaxXmlXpathXPathVariableResolver 0
#else
#define INCLUDE_ALL_JavaxXmlXpathXPathVariableResolver 1
#endif
#undef RESTRICT_JavaxXmlXpathXPathVariableResolver

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxXmlXpathXPathVariableResolver_) && (INCLUDE_ALL_JavaxXmlXpathXPathVariableResolver || defined(INCLUDE_JavaxXmlXpathXPathVariableResolver))
#define JavaxXmlXpathXPathVariableResolver_

@class JavaxXmlNamespaceQName;

/*!
 @brief <p><code>XPathVariableResolver</code> provides access to the set of user defined XPath variables.
 </p>
  
 <p>The <code>XPathVariableResolver</code> and the XPath evaluator must adhere to a contract that
  cannot be directly enforced by the API.  Although variables may be mutable,
  that is, an application may wish to evaluate the same XPath expression more
  than once with different variable values, in the course of evaluating any
  single XPath expression, a variable's value <strong><em>must</em></strong> be immutable.</p>
 @author <a href="mailto:Norman.Walsh@@Sun.com">Norman Walsh</a>
 @author <a href="mailto:Jeff.Suttor@@Sun.com">Jeff Suttor</a>
 @version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $
 @since 1.5
 */
@protocol JavaxXmlXpathXPathVariableResolver < JavaObject >

/*!
 @brief <p>Find a variable in the set of available variables.
 </p>
  
 <p>If <code>variableName</code> is <code>null</code>, then a <code>NullPointerException</code> is thrown.</p>
 @param variableName The  <code> QName </code>  of the variable name.
 @return The variables value, or <code>null</code> if no variable named <code>variableName</code>
    exists.  The value returned must be of a type appropriate for the underlying object model.
 @throw NullPointerExceptionIf <code>variableName</code> is <code>null</code>.
 */
- (id)resolveVariableWithJavaxXmlNamespaceQName:(JavaxXmlNamespaceQName *)variableName;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxXmlXpathXPathVariableResolver)

J2OBJC_TYPE_LITERAL_HEADER(JavaxXmlXpathXPathVariableResolver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxXmlXpathXPathVariableResolver")
