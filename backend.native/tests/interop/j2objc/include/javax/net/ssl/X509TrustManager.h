//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/javax/net/ssl/X509TrustManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNetSslX509TrustManager")
#ifdef RESTRICT_JavaxNetSslX509TrustManager
#define INCLUDE_ALL_JavaxNetSslX509TrustManager 0
#else
#define INCLUDE_ALL_JavaxNetSslX509TrustManager 1
#endif
#undef RESTRICT_JavaxNetSslX509TrustManager

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNetSslX509TrustManager_) && (INCLUDE_ALL_JavaxNetSslX509TrustManager || defined(INCLUDE_JavaxNetSslX509TrustManager))
#define JavaxNetSslX509TrustManager_

#define RESTRICT_JavaxNetSslTrustManager 1
#define INCLUDE_JavaxNetSslTrustManager 1
#include "javax/net/ssl/TrustManager.h"

@class IOSObjectArray;

/*!
 @brief Instance of this interface manage which X509 certificates
  may be used to authenticate the remote side of a secure
  socket.Decisions may be based on trusted certificate
  authorities, certificate revocation lists, online
  status checking or other means.
 @since 1.4
 */
@protocol JavaxNetSslX509TrustManager < JavaxNetSslTrustManager, JavaObject >

/*!
 @brief Given the partial or complete certificate chain provided by the
  peer, build a certificate path to a trusted root and return if
  it can be validated and is trusted for client SSL
  authentication based on the authentication type.
 <p>
  The authentication type is determined by the actual certificate
  used. For instance, if RSAPublicKey is used, the authType
  should be "RSA". Checking is case-sensitive.
 @param chain the peer certificate chain
 @param authType the authentication type based on the client certificate
 @throw IllegalArgumentExceptionif null or zero-length chain
          is passed in for the chain parameter or if null or zero-length
          string is passed in for the  authType parameter
 @throw CertificateExceptionif the certificate chain is not trusted
          by this TrustManager.
 */
- (void)checkClientTrustedWithJavaSecurityCertX509CertificateArray:(IOSObjectArray *)chain
                                                      withNSString:(NSString *)authType;

/*!
 @brief Given the partial or complete certificate chain provided by the
  peer, build a certificate path to a trusted root and return if
  it can be validated and is trusted for server SSL
  authentication based on the authentication type.
 <p>
  The authentication type is the key exchange algorithm portion
  of the cipher suites represented as a String, such as "RSA",
  "DHE_DSS". Note: for some exportable cipher suites, the key
  exchange algorithm is determined at run time during the
  handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5,
  the authType should be RSA_EXPORT when an ephemeral RSA key is
  used for the key exchange, and RSA when the key from the server
  certificate is used. Checking is case-sensitive.
 @param chain the peer certificate chain
 @param authType the key exchange algorithm used
 @throw IllegalArgumentExceptionif null or zero-length chain
          is passed in for the chain parameter or if null or zero-length
          string is passed in for the  authType parameter
 @throw CertificateExceptionif the certificate chain is not trusted
          by this TrustManager.
 */
- (void)checkServerTrustedWithJavaSecurityCertX509CertificateArray:(IOSObjectArray *)chain
                                                      withNSString:(NSString *)authType;

/*!
 @brief Return an array of certificate authority certificates
  which are trusted for authenticating peers.
 @return a non-null (possibly empty) array of acceptable
           CA issuer certificates.
 */
- (IOSObjectArray *)getAcceptedIssuers;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNetSslX509TrustManager)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslX509TrustManager)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxNetSslX509TrustManager")
