//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/javax/net/ssl/ManagerFactoryParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNetSslManagerFactoryParameters")
#ifdef RESTRICT_JavaxNetSslManagerFactoryParameters
#define INCLUDE_ALL_JavaxNetSslManagerFactoryParameters 0
#else
#define INCLUDE_ALL_JavaxNetSslManagerFactoryParameters 1
#endif
#undef RESTRICT_JavaxNetSslManagerFactoryParameters

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNetSslManagerFactoryParameters_) && (INCLUDE_ALL_JavaxNetSslManagerFactoryParameters || defined(INCLUDE_JavaxNetSslManagerFactoryParameters))
#define JavaxNetSslManagerFactoryParameters_

/*!
 @brief This class is the base interface for providing
  algorithm-specific information to a KeyManagerFactory or
  TrustManagerFactory.
 <P>
  In some cases, initialization parameters other than keystores
  may be needed by a provider.  Users of that particular provider
  are expected to pass an implementation of the appropriate
  sub-interface of this class as defined by the
  provider.  The provider can then call the specified methods in the 
 <CODE>ManagerFactoryParameters</CODE> implementation to obtain the
  needed information.
 @author Brad R. Wetmore
 @since 1.4
 */
@protocol JavaxNetSslManagerFactoryParameters < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNetSslManagerFactoryParameters)

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslManagerFactoryParameters)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxNetSslManagerFactoryParameters")
