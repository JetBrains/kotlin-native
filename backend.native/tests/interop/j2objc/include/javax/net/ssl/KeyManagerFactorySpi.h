//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxNetSslKeyManagerFactorySpi")
#ifdef RESTRICT_JavaxNetSslKeyManagerFactorySpi
#define INCLUDE_ALL_JavaxNetSslKeyManagerFactorySpi 0
#else
#define INCLUDE_ALL_JavaxNetSslKeyManagerFactorySpi 1
#endif
#undef RESTRICT_JavaxNetSslKeyManagerFactorySpi

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxNetSslKeyManagerFactorySpi_) && (INCLUDE_ALL_JavaxNetSslKeyManagerFactorySpi || defined(INCLUDE_JavaxNetSslKeyManagerFactorySpi))
#define JavaxNetSslKeyManagerFactorySpi_

@class IOSCharArray;
@class IOSObjectArray;
@class JavaSecurityKeyStore;
@protocol JavaxNetSslManagerFactoryParameters;

/*!
 @brief This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)
  for the <code>KeyManagerFactory</code> class.
 <p> All the abstract methods in this class must be implemented by each
  cryptographic service provider who wishes to supply the implementation
  of a particular key manager factory.
 @since 1.4
 - seealso: KeyManagerFactory
 - seealso: KeyManager
 */
@interface JavaxNetSslKeyManagerFactorySpi : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

/*!
 @brief Returns one key manager for each type of key material.
 @return the key managers
 @throw IllegalStateException
 if the KeyManagerFactorySpi is not initialized
 */
- (IOSObjectArray *)engineGetKeyManagers;

/*!
 @brief Initializes this factory with a source of key material.
 @param ks the key store or null
 @param password the password for recovering keys
 @throw KeyStoreExceptionif this operation fails
 @throw NoSuchAlgorithmExceptionif the specified algorithm is not
           available from the specified provider.
 @throw UnrecoverableKeyExceptionif the key cannot be recovered
 - seealso: KeyManagerFactory#init(KeyStore, char[])
 */
- (void)engineInitWithJavaSecurityKeyStore:(JavaSecurityKeyStore *)ks
                             withCharArray:(IOSCharArray *)password;

/*!
 @brief Initializes this factory with a source of key material.
 <P>
  In some cases, initialization parameters other than a keystore
  and password may be needed by a provider.  Users of that
  particular provider are expected to pass an implementation of
  the appropriate <CODE>ManagerFactoryParameters</CODE> as
  defined by the provider.  The provider can then call the
  specified methods in the ManagerFactoryParameters
  implementation to obtain the needed information.
 @param spec an implementation of a provider-specific parameter           specification
 @throw InvalidAlgorithmParameterExceptionif there is problem
           with the parameters
 - seealso: KeyManagerFactory#init(ManagerFactoryParameters spec)
 */
- (void)engineInitWithJavaxNetSslManagerFactoryParameters:(id<JavaxNetSslManagerFactoryParameters>)spec;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNetSslKeyManagerFactorySpi)

FOUNDATION_EXPORT void JavaxNetSslKeyManagerFactorySpi_init(JavaxNetSslKeyManagerFactorySpi *self);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslKeyManagerFactorySpi)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaxNetSslKeyManagerFactorySpi")
