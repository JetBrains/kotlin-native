//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/net/SecureCacheResponse.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNetSecureCacheResponse")
#ifdef RESTRICT_JavaNetSecureCacheResponse
#define INCLUDE_ALL_JavaNetSecureCacheResponse 0
#else
#define INCLUDE_ALL_JavaNetSecureCacheResponse 1
#endif
#undef RESTRICT_JavaNetSecureCacheResponse

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNetSecureCacheResponse_) && (INCLUDE_ALL_JavaNetSecureCacheResponse || defined(INCLUDE_JavaNetSecureCacheResponse))
#define JavaNetSecureCacheResponse_

#define RESTRICT_JavaNetCacheResponse 1
#define INCLUDE_JavaNetCacheResponse 1
#include "java/net/CacheResponse.h"

@protocol JavaSecurityPrincipal;
@protocol JavaUtilList;

/*!
 @brief Represents a cache response originally retrieved through secure
  means, such as TLS.
 @since 1.5
 */
@interface JavaNetSecureCacheResponse : JavaNetCacheResponse

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Returns the cipher suite in use on the original connection that
  retrieved the network resource.
 @return a string representing the cipher suite
 */
- (NSString *)getCipherSuite;

/*!
 @brief Returns the certificate chain that were sent to the server during
  handshaking of the original connection that retrieved the
  network resource.Note: This method is useful only
  when using certificate-based cipher suites.
 @return an immutable List of Certificate representing the
            certificate chain that was sent to the server. If no
            certificate chain was sent, null will be returned.
 - seealso: #getLocalPrincipal()
 */
- (id<JavaUtilList>)getLocalCertificateChain;

/*!
 @brief Returns the principal that was sent to the server during
  handshaking in the original connection that retrieved the
  network resource.
 @return the principal sent to the server. Returns an X500Principal
  of the end-entity certificate for X509-based cipher suites, and
  KerberosPrincipal for Kerberos cipher suites. If no principal was
  sent, then null is returned.
 - seealso: #getLocalCertificateChain()
 - seealso: #getPeerPrincipal()
 */
- (id<JavaSecurityPrincipal>)getLocalPrincipal;

/*!
 @brief Returns the server's principal which was established as part of
  defining the session during the original connection that
  retrieved the network resource.
 @return the server's principal. Returns an X500Principal of the
  end-entity certiticate for X509-based cipher suites, and
  KerberosPrincipal for Kerberos cipher suites.
 @throw SSLPeerUnverifiedExceptionif the peer was not verified.
 - seealso: #getServerCertificateChain()
 - seealso: #getLocalPrincipal()
 */
- (id<JavaSecurityPrincipal>)getPeerPrincipal;

/*!
 @brief Returns the server's certificate chain, which was established as
  part of defining the session in the original connection that
  retrieved the network resource, from cache.Note: This method
  can be used only when using certificate-based cipher suites;
  using it with non-certificate-based cipher suites, such as
  Kerberos, will throw an SSLPeerUnverifiedException.
 @return an immutable List of Certificate representing the server's
          certificate chain.
 @throw SSLPeerUnverifiedExceptionif the peer is not verified.
 - seealso: #getPeerPrincipal()
 */
- (id<JavaUtilList>)getServerCertificateChain;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNetSecureCacheResponse)

FOUNDATION_EXPORT void JavaNetSecureCacheResponse_init(JavaNetSecureCacheResponse *self);

J2OBJC_TYPE_LITERAL_HEADER(JavaNetSecureCacheResponse)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaNetSecureCacheResponse")
