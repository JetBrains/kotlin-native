//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/io/SerializationHandleMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoSerializationHandleMap")
#ifdef RESTRICT_JavaIoSerializationHandleMap
#define INCLUDE_ALL_JavaIoSerializationHandleMap 0
#else
#define INCLUDE_ALL_JavaIoSerializationHandleMap 1
#endif
#undef RESTRICT_JavaIoSerializationHandleMap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaIoSerializationHandleMap_) && (INCLUDE_ALL_JavaIoSerializationHandleMap || defined(INCLUDE_JavaIoSerializationHandleMap))
#define JavaIoSerializationHandleMap_

/*!
 @brief A specialization of IdentityHashMap<Object, int> for use when serializing objects.
 We need to assign each object we write an int 'handle' (densely packed but not starting
  at zero), and use the same handle any time we write the same object again.
 */
@interface JavaIoSerializationHandleMap : NSObject

#pragma mark Public

- (instancetype __nonnull)initPackagePrivate;

- (jint)getWithId:(id)key;

- (jboolean)isEmpty;

- (jint)putWithId:(id)key
          withInt:(jint)value;

- (jint)removeWithId:(id)key;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoSerializationHandleMap)

FOUNDATION_EXPORT void JavaIoSerializationHandleMap_initPackagePrivate(JavaIoSerializationHandleMap *self);

FOUNDATION_EXPORT JavaIoSerializationHandleMap *new_JavaIoSerializationHandleMap_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoSerializationHandleMap *create_JavaIoSerializationHandleMap_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoSerializationHandleMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaIoSerializationHandleMap")
