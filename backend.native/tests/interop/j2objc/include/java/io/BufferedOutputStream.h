//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/io/BufferedOutputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoBufferedOutputStream")
#ifdef RESTRICT_JavaIoBufferedOutputStream
#define INCLUDE_ALL_JavaIoBufferedOutputStream 0
#else
#define INCLUDE_ALL_JavaIoBufferedOutputStream 1
#endif
#undef RESTRICT_JavaIoBufferedOutputStream

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaIoBufferedOutputStream_) && (INCLUDE_ALL_JavaIoBufferedOutputStream || defined(INCLUDE_JavaIoBufferedOutputStream))
#define JavaIoBufferedOutputStream_

#define RESTRICT_JavaIoFilterOutputStream 1
#define INCLUDE_JavaIoFilterOutputStream 1
#include "java/io/FilterOutputStream.h"

@class IOSByteArray;
@class JavaIoOutputStream;

/*!
 @brief The class implements a buffered output stream.By setting up such
  an output stream, an application can write bytes to the underlying
  output stream without necessarily causing a call to the underlying
  system for each byte written.
 @author Arthur van Hoff
 @since JDK1.0
 */
@interface JavaIoBufferedOutputStream : JavaIoFilterOutputStream {
 @public
  /*!
   @brief The internal buffer where data is stored.
   */
  IOSByteArray *buf_;
  /*!
   @brief The number of valid bytes in the buffer.This value is always
  in the range <tt>0</tt> through <tt>buf.length</tt>; elements 
 <tt>buf[0]</tt> through <tt>buf[count-1]</tt> contain valid
  byte data.
   */
  jint count_;
}

#pragma mark Public

/*!
 @brief Creates a new buffered output stream to write data to the
  specified underlying output stream.
 @param outArg the underlying output stream.
 */
- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

/*!
 @brief Creates a new buffered output stream to write data to the
  specified underlying output stream with the specified buffer
  size.
 @param outArg the underlying output stream.
 @param size the buffer size.
 @throw IllegalArgumentExceptionif size &lt;= 0.
 */
- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                             withInt:(jint)size;

/*!
 @brief Flushes this buffered output stream.This forces any buffered
  output bytes to be written out to the underlying output stream.
 @throw IOExceptionif an I/O error occurs.
 - seealso: java.io.FilterOutputStream#out
 */
- (void)flush;

/*!
 @brief Writes <code>len</code> bytes from the specified byte array
  starting at offset <code>off</code> to this buffered output stream.
 <p> Ordinarily this method stores bytes from the given array into this
  stream's buffer, flushing the buffer to the underlying output stream as
  needed.  If the requested length is at least as large as this stream's
  buffer, however, then this method will flush the buffer and write the
  bytes directly to the underlying output stream.  Thus redundant 
 <code>BufferedOutputStream</code>s will not copy data unnecessarily.
 @param b the data.
 @param off the start offset in the data.
 @param len the number of bytes to write.
 @throw IOExceptionif an I/O error occurs.
 */
- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len;

/*!
 @brief Writes the specified byte to this buffered output stream.
 @param b the byte to be written.
 @throw IOExceptionif an I/O error occurs.
 */
- (void)writeWithInt:(jint)b;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoBufferedOutputStream)

J2OBJC_FIELD_SETTER(JavaIoBufferedOutputStream, buf_, IOSByteArray *)

FOUNDATION_EXPORT void JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(JavaIoBufferedOutputStream *self, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT JavaIoBufferedOutputStream *new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoBufferedOutputStream *create_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg);

FOUNDATION_EXPORT void JavaIoBufferedOutputStream_initWithJavaIoOutputStream_withInt_(JavaIoBufferedOutputStream *self, JavaIoOutputStream *outArg, jint size);

FOUNDATION_EXPORT JavaIoBufferedOutputStream *new_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_withInt_(JavaIoOutputStream *outArg, jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoBufferedOutputStream *create_JavaIoBufferedOutputStream_initWithJavaIoOutputStream_withInt_(JavaIoOutputStream *outArg, jint size);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoBufferedOutputStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaIoBufferedOutputStream")
