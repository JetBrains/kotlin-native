//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/io/SyncFailedException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoSyncFailedException")
#ifdef RESTRICT_JavaIoSyncFailedException
#define INCLUDE_ALL_JavaIoSyncFailedException 0
#else
#define INCLUDE_ALL_JavaIoSyncFailedException 1
#endif
#undef RESTRICT_JavaIoSyncFailedException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaIoSyncFailedException_) && (INCLUDE_ALL_JavaIoSyncFailedException || defined(INCLUDE_JavaIoSyncFailedException))
#define JavaIoSyncFailedException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;

/*!
 @brief Signals that a sync operation has failed.
 @author Ken Arnold
 - seealso: java.io.FileDescriptor#sync
 - seealso: java.io.IOException
 @since JDK1.1
 */
@interface JavaIoSyncFailedException : JavaIoIOException

#pragma mark Public

/*!
 @brief Constructs an SyncFailedException with a detail message.
 A detail message is a String that describes this particular exception.
 @param desc a String describing the exception.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)desc;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoSyncFailedException)

FOUNDATION_EXPORT void JavaIoSyncFailedException_initWithNSString_(JavaIoSyncFailedException *self, NSString *desc);

FOUNDATION_EXPORT JavaIoSyncFailedException *new_JavaIoSyncFailedException_initWithNSString_(NSString *desc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoSyncFailedException *create_JavaIoSyncFailedException_initWithNSString_(NSString *desc);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoSyncFailedException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaIoSyncFailedException")
