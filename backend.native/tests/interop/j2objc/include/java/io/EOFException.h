//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/io/EOFException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoEOFException")
#ifdef RESTRICT_JavaIoEOFException
#define INCLUDE_ALL_JavaIoEOFException 0
#else
#define INCLUDE_ALL_JavaIoEOFException 1
#endif
#undef RESTRICT_JavaIoEOFException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaIoEOFException_) && (INCLUDE_ALL_JavaIoEOFException || defined(INCLUDE_JavaIoEOFException))
#define JavaIoEOFException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;

/*!
 @brief Signals that an end of file or end of stream has been reached
  unexpectedly during input.
 <p>
  This exception is mainly used by data input streams to signal end of
  stream. Note that many other input operations return a special value on
  end of stream rather than throwing an exception.
 @author Frank Yellin
 - seealso: java.io.DataInputStream
 - seealso: java.io.IOException
 @since JDK1.0
 */
@interface JavaIoEOFException : JavaIoIOException

#pragma mark Public

/*!
 @brief Constructs an <code>EOFException</code> with <code>null</code>
  as its error detail message.
 */
- (instancetype __nonnull)init;

/*!
 @brief Constructs an <code>EOFException</code> with the specified detail
  message.The string <code>s</code> may later be retrieved by the 
 <code><code>java.lang.Throwable.getMessage</code></code> method of class 
 <code>java.lang.Throwable</code>.
 @param s the detail message.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)s;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoEOFException)

FOUNDATION_EXPORT void JavaIoEOFException_init(JavaIoEOFException *self);

FOUNDATION_EXPORT JavaIoEOFException *new_JavaIoEOFException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoEOFException *create_JavaIoEOFException_init(void);

FOUNDATION_EXPORT void JavaIoEOFException_initWithNSString_(JavaIoEOFException *self, NSString *s);

FOUNDATION_EXPORT JavaIoEOFException *new_JavaIoEOFException_initWithNSString_(NSString *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoEOFException *create_JavaIoEOFException_initWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoEOFException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaIoEOFException")
