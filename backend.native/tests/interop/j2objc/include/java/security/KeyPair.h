//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/security/KeyPair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecurityKeyPair")
#ifdef RESTRICT_JavaSecurityKeyPair
#define INCLUDE_ALL_JavaSecurityKeyPair 0
#else
#define INCLUDE_ALL_JavaSecurityKeyPair 1
#endif
#undef RESTRICT_JavaSecurityKeyPair

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaSecurityKeyPair_) && (INCLUDE_ALL_JavaSecurityKeyPair || defined(INCLUDE_JavaSecurityKeyPair))
#define JavaSecurityKeyPair_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;

/*!
 @brief This class is a simple holder for a key pair (a public key and a
  private key).It does not enforce any security, and, when initialized,
  should be treated like a PrivateKey.
 - seealso: PublicKey
 - seealso: PrivateKey
 @author Benjamin Renaud
 */
@interface JavaSecurityKeyPair : NSObject < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Constructs a key pair from the given public key and private key.
 <p>Note that this constructor only stores references to the public
  and private key components in the generated key pair. This is safe,
  because <code>Key</code> objects are immutable.
 @param publicKey the public key.
 @param privateKey the private key.
 */
- (instancetype __nonnull)initWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey
                             withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey;

/*!
 @brief Returns a reference to the private key component of this key pair.
 @return a reference to the private key.
 */
- (id<JavaSecurityPrivateKey>)getPrivate;

/*!
 @brief Returns a reference to the public key component of this key pair.
 @return a reference to the public key.
 */
- (id<JavaSecurityPublicKey>)getPublic;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyPair)

FOUNDATION_EXPORT void JavaSecurityKeyPair_initWithJavaSecurityPublicKey_withJavaSecurityPrivateKey_(JavaSecurityKeyPair *self, id<JavaSecurityPublicKey> publicKey, id<JavaSecurityPrivateKey> privateKey);

FOUNDATION_EXPORT JavaSecurityKeyPair *new_JavaSecurityKeyPair_initWithJavaSecurityPublicKey_withJavaSecurityPrivateKey_(id<JavaSecurityPublicKey> publicKey, id<JavaSecurityPrivateKey> privateKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecurityKeyPair *create_JavaSecurityKeyPair_initWithJavaSecurityPublicKey_withJavaSecurityPrivateKey_(id<JavaSecurityPublicKey> publicKey, id<JavaSecurityPrivateKey> privateKey);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyPair)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaSecurityKeyPair")
