//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/security/spec/ECGenParameterSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecuritySpecECGenParameterSpec")
#ifdef RESTRICT_JavaSecuritySpecECGenParameterSpec
#define INCLUDE_ALL_JavaSecuritySpecECGenParameterSpec 0
#else
#define INCLUDE_ALL_JavaSecuritySpecECGenParameterSpec 1
#endif
#undef RESTRICT_JavaSecuritySpecECGenParameterSpec

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaSecuritySpecECGenParameterSpec_) && (INCLUDE_ALL_JavaSecuritySpecECGenParameterSpec || defined(INCLUDE_JavaSecuritySpecECGenParameterSpec))
#define JavaSecuritySpecECGenParameterSpec_

#define RESTRICT_JavaSecuritySpecAlgorithmParameterSpec 1
#define INCLUDE_JavaSecuritySpecAlgorithmParameterSpec 1
#include "java/security/spec/AlgorithmParameterSpec.h"

/*!
 @brief This immutable class specifies the set of parameters used for
  generating elliptic curve (EC) domain parameters.
 - seealso: AlgorithmParameterSpec
 @author Valerie Peng
 @since 1.5
 */
@interface JavaSecuritySpecECGenParameterSpec : NSObject < JavaSecuritySpecAlgorithmParameterSpec >

#pragma mark Public

/*!
 @brief Creates a parameter specification for EC parameter
  generation using a standard (or predefined) name 
 <code>stdName</code> in order to generate the corresponding
  (precomputed) elliptic curve domain parameters.For the
  list of supported names, please consult the documentation
  of provider whose implementation will be used.
 @param stdName the standard name of the to-be-generated EC  domain parameters.
 @throw NullPointerExceptionif <code>stdName</code>
  is null.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)stdName;

/*!
 @brief Returns the standard or predefined name of the
  to-be-generated EC domain parameters.
 @return the standard or predefined name.
 */
- (NSString *)getName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecuritySpecECGenParameterSpec)

FOUNDATION_EXPORT void JavaSecuritySpecECGenParameterSpec_initWithNSString_(JavaSecuritySpecECGenParameterSpec *self, NSString *stdName);

FOUNDATION_EXPORT JavaSecuritySpecECGenParameterSpec *new_JavaSecuritySpecECGenParameterSpec_initWithNSString_(NSString *stdName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecuritySpecECGenParameterSpec *create_JavaSecuritySpecECGenParameterSpec_initWithNSString_(NSString *stdName);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecuritySpecECGenParameterSpec)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaSecuritySpecECGenParameterSpec")
