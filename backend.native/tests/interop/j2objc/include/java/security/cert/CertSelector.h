//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/security/cert/CertSelector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecurityCertCertSelector")
#ifdef RESTRICT_JavaSecurityCertCertSelector
#define INCLUDE_ALL_JavaSecurityCertCertSelector 0
#else
#define INCLUDE_ALL_JavaSecurityCertCertSelector 1
#endif
#undef RESTRICT_JavaSecurityCertCertSelector

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaSecurityCertCertSelector_) && (INCLUDE_ALL_JavaSecurityCertCertSelector || defined(INCLUDE_JavaSecurityCertCertSelector))
#define JavaSecurityCertCertSelector_

@class JavaSecurityCertCertificate;

/*!
 @brief A selector that defines a set of criteria for selecting 
 <code>Certificate</code>s.Classes that implement this interface
  are often used to specify which <code>Certificate</code>s should
  be retrieved from a <code>CertStore</code>.
 <p>
  <b>Concurrent Access</b>
  <p>
  Unless otherwise specified, the methods defined in this interface are not
  thread-safe. Multiple threads that need to access a single
  object concurrently should synchronize amongst themselves and
  provide the necessary locking. Multiple threads each manipulating
  separate objects need not synchronize.
 - seealso: Certificate
 - seealso: CertStore
 - seealso: CertStore#getCertificates
 @author Steve Hanna
 @since 1.4
 */
@protocol JavaSecurityCertCertSelector < NSCopying, JavaObject >

/*!
 @brief Decides whether a <code>Certificate</code> should be selected.
 @param cert the <code>Certificate</code>  to be checked
 @return <code>true</code> if the <code>Certificate</code>
  should be selected, <code>false</code> otherwise
 */
- (jboolean)matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

/*!
 @brief Makes a copy of this <code>CertSelector</code>.Changes to the
  copy will not affect the original and vice versa.
 @return a copy of this <code>CertSelector</code>
 */
- (id)clone;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityCertCertSelector)

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityCertCertSelector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaSecurityCertCertSelector")
