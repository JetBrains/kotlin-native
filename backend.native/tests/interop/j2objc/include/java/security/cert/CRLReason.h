//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/security/cert/CRLReason.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecurityCertCRLReason")
#ifdef RESTRICT_JavaSecurityCertCRLReason
#define INCLUDE_ALL_JavaSecurityCertCRLReason 0
#else
#define INCLUDE_ALL_JavaSecurityCertCRLReason 1
#endif
#undef RESTRICT_JavaSecurityCertCRLReason

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaSecurityCertCRLReason_) && (INCLUDE_ALL_JavaSecurityCertCRLReason || defined(INCLUDE_JavaSecurityCertCRLReason))
#define JavaSecurityCertCRLReason_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, JavaSecurityCertCRLReason_Enum) {
  JavaSecurityCertCRLReason_Enum_UNSPECIFIED = 0,
  JavaSecurityCertCRLReason_Enum_KEY_COMPROMISE = 1,
  JavaSecurityCertCRLReason_Enum_CA_COMPROMISE = 2,
  JavaSecurityCertCRLReason_Enum_AFFILIATION_CHANGED = 3,
  JavaSecurityCertCRLReason_Enum_SUPERSEDED = 4,
  JavaSecurityCertCRLReason_Enum_CESSATION_OF_OPERATION = 5,
  JavaSecurityCertCRLReason_Enum_CERTIFICATE_HOLD = 6,
  JavaSecurityCertCRLReason_Enum_UNUSED = 7,
  JavaSecurityCertCRLReason_Enum_REMOVE_FROM_CRL = 8,
  JavaSecurityCertCRLReason_Enum_PRIVILEGE_WITHDRAWN = 9,
  JavaSecurityCertCRLReason_Enum_AA_COMPROMISE = 10,
};

/*!
 @brief The CRLReason enumeration specifies the reason that a certificate
  is revoked, as defined in <a href="http://www.ietf.org/rfc/rfc3280.txt">
  RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL
  Profile</a>.
 @author Sean Mullan
 @since 1.7
 - seealso: X509CRLEntry#getRevocationReason
 - seealso: CertificateRevokedException#getRevocationReason
 */
@interface JavaSecurityCertCRLReason : JavaLangEnum

@property (readonly, class, nonnull) JavaSecurityCertCRLReason *UNSPECIFIED NS_SWIFT_NAME(UNSPECIFIED);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *KEY_COMPROMISE NS_SWIFT_NAME(KEY_COMPROMISE);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *CA_COMPROMISE NS_SWIFT_NAME(CA_COMPROMISE);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *AFFILIATION_CHANGED NS_SWIFT_NAME(AFFILIATION_CHANGED);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *SUPERSEDED NS_SWIFT_NAME(SUPERSEDED);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *CESSATION_OF_OPERATION NS_SWIFT_NAME(CESSATION_OF_OPERATION);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *CERTIFICATE_HOLD NS_SWIFT_NAME(CERTIFICATE_HOLD);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *UNUSED NS_SWIFT_NAME(UNUSED);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *REMOVE_FROM_CRL NS_SWIFT_NAME(REMOVE_FROM_CRL);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *PRIVILEGE_WITHDRAWN NS_SWIFT_NAME(PRIVILEGE_WITHDRAWN);
@property (readonly, class, nonnull) JavaSecurityCertCRLReason *AA_COMPROMISE NS_SWIFT_NAME(AA_COMPROMISE);
+ (JavaSecurityCertCRLReason * __nonnull)UNSPECIFIED;

+ (JavaSecurityCertCRLReason * __nonnull)KEY_COMPROMISE;

+ (JavaSecurityCertCRLReason * __nonnull)CA_COMPROMISE;

+ (JavaSecurityCertCRLReason * __nonnull)AFFILIATION_CHANGED;

+ (JavaSecurityCertCRLReason * __nonnull)SUPERSEDED;

+ (JavaSecurityCertCRLReason * __nonnull)CESSATION_OF_OPERATION;

+ (JavaSecurityCertCRLReason * __nonnull)CERTIFICATE_HOLD;

+ (JavaSecurityCertCRLReason * __nonnull)UNUSED;

+ (JavaSecurityCertCRLReason * __nonnull)REMOVE_FROM_CRL;

+ (JavaSecurityCertCRLReason * __nonnull)PRIVILEGE_WITHDRAWN;

+ (JavaSecurityCertCRLReason * __nonnull)AA_COMPROMISE;

#pragma mark Public

+ (JavaSecurityCertCRLReason *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (JavaSecurityCertCRLReason_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(JavaSecurityCertCRLReason)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_values_[];

/*!
 @brief This reason indicates that it is unspecified as to why the
  certificate has been revoked.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_UNSPECIFIED(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, UNSPECIFIED)

/*!
 @brief This reason indicates that it is known or suspected that the
  certificate subject's private key has been compromised.It applies
  to end-entity certificates only.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_KEY_COMPROMISE(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, KEY_COMPROMISE)

/*!
 @brief This reason indicates that it is known or suspected that the
  certificate subject's private key has been compromised.It applies
  to certificate authority (CA) certificates only.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_CA_COMPROMISE(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, CA_COMPROMISE)

/*!
 @brief This reason indicates that the subject's name or other information
  has changed.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_AFFILIATION_CHANGED(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, AFFILIATION_CHANGED)

/*!
 @brief This reason indicates that the certificate has been superseded.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_SUPERSEDED(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, SUPERSEDED)

/*!
 @brief This reason indicates that the certificate is no longer needed.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_CESSATION_OF_OPERATION(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, CESSATION_OF_OPERATION)

/*!
 @brief This reason indicates that the certificate has been put on hold.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_CERTIFICATE_HOLD(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, CERTIFICATE_HOLD)

/*!
 @brief Unused reason.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_UNUSED(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, UNUSED)

/*!
 @brief This reason indicates that the certificate was previously on hold
  and should be removed from the CRL.It is for use with delta CRLs.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_REMOVE_FROM_CRL(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, REMOVE_FROM_CRL)

/*!
 @brief This reason indicates that the privileges granted to the subject of
  the certificate have been withdrawn.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_PRIVILEGE_WITHDRAWN(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, PRIVILEGE_WITHDRAWN)

/*!
 @brief This reason indicates that it is known or suspected that the
  certificate subject's private key has been compromised.It applies
  to authority attribute (AA) certificates only.
 */
inline JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_get_AA_COMPROMISE(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertCRLReason, AA_COMPROMISE)

FOUNDATION_EXPORT IOSObjectArray *JavaSecurityCertCRLReason_values(void);

FOUNDATION_EXPORT JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaSecurityCertCRLReason *JavaSecurityCertCRLReason_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityCertCRLReason)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaSecurityCertCRLReason")
