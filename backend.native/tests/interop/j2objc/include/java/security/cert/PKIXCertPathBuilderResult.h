//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/security/cert/PKIXCertPathBuilderResult.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecurityCertPKIXCertPathBuilderResult")
#ifdef RESTRICT_JavaSecurityCertPKIXCertPathBuilderResult
#define INCLUDE_ALL_JavaSecurityCertPKIXCertPathBuilderResult 0
#else
#define INCLUDE_ALL_JavaSecurityCertPKIXCertPathBuilderResult 1
#endif
#undef RESTRICT_JavaSecurityCertPKIXCertPathBuilderResult

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaSecurityCertPKIXCertPathBuilderResult_) && (INCLUDE_ALL_JavaSecurityCertPKIXCertPathBuilderResult || defined(INCLUDE_JavaSecurityCertPKIXCertPathBuilderResult))
#define JavaSecurityCertPKIXCertPathBuilderResult_

#define RESTRICT_JavaSecurityCertPKIXCertPathValidatorResult 1
#define INCLUDE_JavaSecurityCertPKIXCertPathValidatorResult 1
#include "java/security/cert/PKIXCertPathValidatorResult.h"

#define RESTRICT_JavaSecurityCertCertPathBuilderResult 1
#define INCLUDE_JavaSecurityCertCertPathBuilderResult 1
#include "java/security/cert/CertPathBuilderResult.h"

@class JavaSecurityCertCertPath;
@class JavaSecurityCertTrustAnchor;
@protocol JavaSecurityCertPolicyNode;
@protocol JavaSecurityPublicKey;

/*!
 @brief This class represents the successful result of the PKIX certification
  path builder algorithm.All certification paths that are built and
  returned using this algorithm are also validated according to the PKIX
  certification path validation algorithm.
 <p>Instances of <code>PKIXCertPathBuilderResult</code> are returned by
  the <code>build</code> method of <code>CertPathBuilder</code>
  objects implementing the PKIX algorithm. 
 <p>All <code>PKIXCertPathBuilderResult</code> objects contain the
  certification path constructed by the build algorithm, the
  valid policy tree and subject public key resulting from the build
  algorithm, and a <code>TrustAnchor</code> describing the certification
  authority (CA) that served as a trust anchor for the certification path. 
 <p>
  <b>Concurrent Access</b>
  <p>
  Unless otherwise specified, the methods defined in this class are not
  thread-safe. Multiple threads that need to access a single
  object concurrently should synchronize amongst themselves and
  provide the necessary locking. Multiple threads each manipulating
  separate objects need not synchronize.
 - seealso: CertPathBuilderResult
 @since 1.4
 @author Anne Anderson
 */
@interface JavaSecurityCertPKIXCertPathBuilderResult : JavaSecurityCertPKIXCertPathValidatorResult < JavaSecurityCertCertPathBuilderResult >

#pragma mark Public

/*!
 @brief Creates an instance of <code>PKIXCertPathBuilderResult</code>
  containing the specified parameters.
 @param certPath the validated <code>CertPath</code>
 @param trustAnchor a <code>TrustAnchor</code>  describing the CA that
   served as a trust anchor for the certification path
 @param policyTree the immutable valid policy tree, or <code>null</code>  if there are no valid policies
 @param subjectPublicKey the public key of the subject
 @throw NullPointerExceptionif the <code>certPath</code>,
  <code>trustAnchor</code> or <code>subjectPublicKey</code> parameters
  are <code>null</code>
 */
- (instancetype __nonnull)initWithJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)certPath
                           withJavaSecurityCertTrustAnchor:(JavaSecurityCertTrustAnchor *)trustAnchor
                            withJavaSecurityCertPolicyNode:(id<JavaSecurityCertPolicyNode>)policyTree
                                 withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)subjectPublicKey;

/*!
 @brief Returns the built and validated certification path.The
  <code>CertPath</code> object does not include the trust anchor.
 Instead, use the <code>getTrustAnchor()</code> method to
  obtain the <code>TrustAnchor</code> that served as the trust anchor
  for the certification path.
 @return the built and validated <code>CertPath</code> (never 
 <code>null</code>)
 */
- (JavaSecurityCertCertPath *)getCertPath;

/*!
 @brief Return a printable representation of this 
 <code>PKIXCertPathBuilderResult</code>.
 @return a <code>String</code> describing the contents of this
          <code>PKIXCertPathBuilderResult</code>
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaSecurityCertTrustAnchor:(JavaSecurityCertTrustAnchor *)arg0
                               withJavaSecurityCertPolicyNode:(id<JavaSecurityCertPolicyNode>)arg1
                                    withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityCertPKIXCertPathBuilderResult)

FOUNDATION_EXPORT void JavaSecurityCertPKIXCertPathBuilderResult_initWithJavaSecurityCertCertPath_withJavaSecurityCertTrustAnchor_withJavaSecurityCertPolicyNode_withJavaSecurityPublicKey_(JavaSecurityCertPKIXCertPathBuilderResult *self, JavaSecurityCertCertPath *certPath, JavaSecurityCertTrustAnchor *trustAnchor, id<JavaSecurityCertPolicyNode> policyTree, id<JavaSecurityPublicKey> subjectPublicKey);

FOUNDATION_EXPORT JavaSecurityCertPKIXCertPathBuilderResult *new_JavaSecurityCertPKIXCertPathBuilderResult_initWithJavaSecurityCertCertPath_withJavaSecurityCertTrustAnchor_withJavaSecurityCertPolicyNode_withJavaSecurityPublicKey_(JavaSecurityCertCertPath *certPath, JavaSecurityCertTrustAnchor *trustAnchor, id<JavaSecurityCertPolicyNode> policyTree, id<JavaSecurityPublicKey> subjectPublicKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecurityCertPKIXCertPathBuilderResult *create_JavaSecurityCertPKIXCertPathBuilderResult_initWithJavaSecurityCertCertPath_withJavaSecurityCertTrustAnchor_withJavaSecurityCertPolicyNode_withJavaSecurityPublicKey_(JavaSecurityCertCertPath *certPath, JavaSecurityCertTrustAnchor *trustAnchor, id<JavaSecurityCertPolicyNode> policyTree, id<JavaSecurityPublicKey> subjectPublicKey);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityCertPKIXCertPathBuilderResult)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaSecurityCertPKIXCertPathBuilderResult")
