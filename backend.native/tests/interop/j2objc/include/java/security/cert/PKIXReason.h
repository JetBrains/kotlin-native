//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/security/cert/PKIXReason.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecurityCertPKIXReason")
#ifdef RESTRICT_JavaSecurityCertPKIXReason
#define INCLUDE_ALL_JavaSecurityCertPKIXReason 0
#else
#define INCLUDE_ALL_JavaSecurityCertPKIXReason 1
#endif
#undef RESTRICT_JavaSecurityCertPKIXReason

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaSecurityCertPKIXReason_) && (INCLUDE_ALL_JavaSecurityCertPKIXReason || defined(INCLUDE_JavaSecurityCertPKIXReason))
#define JavaSecurityCertPKIXReason_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_JavaSecurityCertCertPathValidatorException 1
#define INCLUDE_JavaSecurityCertCertPathValidatorException_Reason 1
#include "java/security/cert/CertPathValidatorException.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, JavaSecurityCertPKIXReason_Enum) {
  JavaSecurityCertPKIXReason_Enum_NAME_CHAINING = 0,
  JavaSecurityCertPKIXReason_Enum_INVALID_KEY_USAGE = 1,
  JavaSecurityCertPKIXReason_Enum_INVALID_POLICY = 2,
  JavaSecurityCertPKIXReason_Enum_NO_TRUST_ANCHOR = 3,
  JavaSecurityCertPKIXReason_Enum_UNRECOGNIZED_CRIT_EXT = 4,
  JavaSecurityCertPKIXReason_Enum_NOT_CA_CERT = 5,
  JavaSecurityCertPKIXReason_Enum_PATH_TOO_LONG = 6,
  JavaSecurityCertPKIXReason_Enum_INVALID_NAME = 7,
};

/*!
 @brief The <code>PKIXReason</code> enumerates the potential PKIX-specific reasons
  that an X.509 certification path may be invalid according to the PKIX
  (RFC 3280) standard.These reasons are in addition to those of the 
 <code>CertPathValidatorException.BasicReason</code> enumeration.
 @since 1.7
 */
@interface JavaSecurityCertPKIXReason : JavaLangEnum < JavaSecurityCertCertPathValidatorException_Reason >

@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *NAME_CHAINING NS_SWIFT_NAME(NAME_CHAINING);
@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *INVALID_KEY_USAGE NS_SWIFT_NAME(INVALID_KEY_USAGE);
@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *INVALID_POLICY NS_SWIFT_NAME(INVALID_POLICY);
@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *NO_TRUST_ANCHOR NS_SWIFT_NAME(NO_TRUST_ANCHOR);
@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *UNRECOGNIZED_CRIT_EXT NS_SWIFT_NAME(UNRECOGNIZED_CRIT_EXT);
@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *NOT_CA_CERT NS_SWIFT_NAME(NOT_CA_CERT);
@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *PATH_TOO_LONG NS_SWIFT_NAME(PATH_TOO_LONG);
@property (readonly, class, nonnull) JavaSecurityCertPKIXReason *INVALID_NAME NS_SWIFT_NAME(INVALID_NAME);
+ (JavaSecurityCertPKIXReason * __nonnull)NAME_CHAINING;

+ (JavaSecurityCertPKIXReason * __nonnull)INVALID_KEY_USAGE;

+ (JavaSecurityCertPKIXReason * __nonnull)INVALID_POLICY;

+ (JavaSecurityCertPKIXReason * __nonnull)NO_TRUST_ANCHOR;

+ (JavaSecurityCertPKIXReason * __nonnull)UNRECOGNIZED_CRIT_EXT;

+ (JavaSecurityCertPKIXReason * __nonnull)NOT_CA_CERT;

+ (JavaSecurityCertPKIXReason * __nonnull)PATH_TOO_LONG;

+ (JavaSecurityCertPKIXReason * __nonnull)INVALID_NAME;

#pragma mark Public

+ (JavaSecurityCertPKIXReason *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (JavaSecurityCertPKIXReason_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(JavaSecurityCertPKIXReason)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_values_[];

/*!
 @brief The certificate does not chain correctly.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_NAME_CHAINING(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, NAME_CHAINING)

/*!
 @brief The certificate's key usage is invalid.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_INVALID_KEY_USAGE(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, INVALID_KEY_USAGE)

/*!
 @brief The policy constraints have been violated.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_INVALID_POLICY(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, INVALID_POLICY)

/*!
 @brief No acceptable trust anchor found.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_NO_TRUST_ANCHOR(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, NO_TRUST_ANCHOR)

/*!
 @brief The certificate contains one or more unrecognized critical
  extensions.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_UNRECOGNIZED_CRIT_EXT(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, UNRECOGNIZED_CRIT_EXT)

/*!
 @brief The certificate is not a CA certificate.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_NOT_CA_CERT(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, NOT_CA_CERT)

/*!
 @brief The path length constraint has been violated.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_PATH_TOO_LONG(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, PATH_TOO_LONG)

/*!
 @brief The name constraints have been violated.
 */
inline JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_get_INVALID_NAME(void);
J2OBJC_ENUM_CONSTANT(JavaSecurityCertPKIXReason, INVALID_NAME)

FOUNDATION_EXPORT IOSObjectArray *JavaSecurityCertPKIXReason_values(void);

FOUNDATION_EXPORT JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaSecurityCertPKIXReason *JavaSecurityCertPKIXReason_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityCertPKIXReason)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaSecurityCertPKIXReason")
