//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/util/LongSummaryStatistics.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaUtilLongSummaryStatistics")
#ifdef RESTRICT_JavaUtilLongSummaryStatistics
#define INCLUDE_ALL_JavaUtilLongSummaryStatistics 0
#else
#define INCLUDE_ALL_JavaUtilLongSummaryStatistics 1
#endif
#undef RESTRICT_JavaUtilLongSummaryStatistics

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaUtilLongSummaryStatistics_) && (INCLUDE_ALL_JavaUtilLongSummaryStatistics || defined(INCLUDE_JavaUtilLongSummaryStatistics))
#define JavaUtilLongSummaryStatistics_

#define RESTRICT_JavaUtilFunctionLongConsumer 1
#define INCLUDE_JavaUtilFunctionLongConsumer 1
#include "java/util/function/LongConsumer.h"

#define RESTRICT_JavaUtilFunctionIntConsumer 1
#define INCLUDE_JavaUtilFunctionIntConsumer 1
#include "java/util/function/IntConsumer.h"

/*!
 @brief A state object for collecting statistics such as count, min, max, sum, and
  average.
 <p>This class is designed to work with (though does not require) 
 streams. For example, you can compute
  summary statistics on a stream of longs with: 
 @code
  LongSummaryStatistics stats = longStream.collect(LongSummaryStatistics::new,
                                                   LongSummaryStatistics::accept,
                                                   LongSummaryStatistics::combine); 
 
@endcode
  
 <p><code>LongSummaryStatistics</code> can be used as a 
 java.util.stream.Stream.collect(Collector) reduction}
  target for a stream. For example: 
 @code
  LongSummaryStatistics stats = people.stream()
                                      .collect(Collectors.summarizingLong(Person::getAge));
 
@endcode
  This computes, in a single pass, the count of people, as well as the minimum,
  maximum, sum, and average of their ages.
 @since 1.8
 */
@interface JavaUtilLongSummaryStatistics : NSObject < JavaUtilFunctionLongConsumer, JavaUtilFunctionIntConsumer >

#pragma mark Public

/*!
 @brief Construct an empty instance with zero count, zero sum, 
 <code>Long.MAX_VALUE</code> min, <code>Long.MIN_VALUE</code> max and zero
  average.
 */
- (instancetype __nonnull)init;

/*!
 @brief Records a new <code>int</code> value into the summary information.
 @param value the input value
 */
- (void)acceptWithInt:(jint)value;

/*!
 @brief Records a new <code>long</code> value into the summary information.
 @param value the input value
 */
- (void)acceptWithLong:(jlong)value;

/*!
 @brief Combines the state of another <code>LongSummaryStatistics</code> into this
  one.
 @param other another <code>LongSummaryStatistics</code>
 @throw NullPointerExceptionif <code>other</code> is null
 */
- (void)combineWithJavaUtilLongSummaryStatistics:(JavaUtilLongSummaryStatistics *)other;

/*!
 @brief Returns the arithmetic mean of values recorded, or zero if no values have been
  recorded.
 @return The arithmetic mean of values, or zero if none
 */
- (jdouble)getAverage;

/*!
 @brief Returns the count of values recorded.
 @return the count of values
 */
- (jlong)getCount;

/*!
 @brief Returns the maximum value recorded, or <code>Long.MIN_VALUE</code> if no
  values have been recorded
 @return the maximum value, or <code>Long.MIN_VALUE</code> if none
 */
- (jlong)getMax;

/*!
 @brief Returns the minimum value recorded, or <code>Long.MAX_VALUE</code> if no
  values have been recorded.
 @return the minimum value, or <code>Long.MAX_VALUE</code> if none
 */
- (jlong)getMin;

/*!
 @brief Returns the sum of values recorded, or zero if no values have been
  recorded.
 @return the sum of values, or zero if none
 */
- (jlong)getSum;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilLongSummaryStatistics)

FOUNDATION_EXPORT void JavaUtilLongSummaryStatistics_init(JavaUtilLongSummaryStatistics *self);

FOUNDATION_EXPORT JavaUtilLongSummaryStatistics *new_JavaUtilLongSummaryStatistics_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaUtilLongSummaryStatistics *create_JavaUtilLongSummaryStatistics_init(void);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilLongSummaryStatistics)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaUtilLongSummaryStatistics")
