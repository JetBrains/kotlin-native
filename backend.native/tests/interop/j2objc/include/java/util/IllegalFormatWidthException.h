//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/util/IllegalFormatWidthException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaUtilIllegalFormatWidthException")
#ifdef RESTRICT_JavaUtilIllegalFormatWidthException
#define INCLUDE_ALL_JavaUtilIllegalFormatWidthException 0
#else
#define INCLUDE_ALL_JavaUtilIllegalFormatWidthException 1
#endif
#undef RESTRICT_JavaUtilIllegalFormatWidthException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaUtilIllegalFormatWidthException_) && (INCLUDE_ALL_JavaUtilIllegalFormatWidthException || defined(INCLUDE_JavaUtilIllegalFormatWidthException))
#define JavaUtilIllegalFormatWidthException_

#define RESTRICT_JavaUtilIllegalFormatException 1
#define INCLUDE_JavaUtilIllegalFormatException 1
#include "java/util/IllegalFormatException.h"

/*!
 @brief Unchecked exception thrown when the format width is a negative value other
  than <tt>-1</tt> or is otherwise unsupported.
 @since 1.5
 */
@interface JavaUtilIllegalFormatWidthException : JavaUtilIllegalFormatException

#pragma mark Public

/*!
 @brief Constructs an instance of this class with the specified width.
 @param w The width
 */
- (instancetype __nonnull)initWithInt:(jint)w;

- (NSString *)getMessage;

/*!
 @brief Returns the width
 @return The width
 */
- (jint)getWidth;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilIllegalFormatWidthException)

FOUNDATION_EXPORT void JavaUtilIllegalFormatWidthException_initWithInt_(JavaUtilIllegalFormatWidthException *self, jint w);

FOUNDATION_EXPORT JavaUtilIllegalFormatWidthException *new_JavaUtilIllegalFormatWidthException_initWithInt_(jint w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaUtilIllegalFormatWidthException *create_JavaUtilIllegalFormatWidthException_initWithInt_(jint w);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilIllegalFormatWidthException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaUtilIllegalFormatWidthException")
