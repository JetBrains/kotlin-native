//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/util/concurrent/CancellationException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaUtilConcurrentCancellationException")
#ifdef RESTRICT_JavaUtilConcurrentCancellationException
#define INCLUDE_ALL_JavaUtilConcurrentCancellationException 0
#else
#define INCLUDE_ALL_JavaUtilConcurrentCancellationException 1
#endif
#undef RESTRICT_JavaUtilConcurrentCancellationException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaUtilConcurrentCancellationException_) && (INCLUDE_ALL_JavaUtilConcurrentCancellationException || defined(INCLUDE_JavaUtilConcurrentCancellationException))
#define JavaUtilConcurrentCancellationException_

#define RESTRICT_JavaLangIllegalStateException 1
#define INCLUDE_JavaLangIllegalStateException 1
#include "java/lang/IllegalStateException.h"

@class JavaLangThrowable;

/*!
 @brief Exception indicating that the result of a value-producing task,
  such as a <code>FutureTask</code>, cannot be retrieved because the task
  was cancelled.
 @since 1.5
 @author Doug Lea
 */
@interface JavaUtilConcurrentCancellationException : JavaLangIllegalStateException

#pragma mark Public

/*!
 @brief Constructs a <code>CancellationException</code> with no detail message.
 */
- (instancetype __nonnull)init;

/*!
 @brief Constructs a <code>CancellationException</code> with the specified detail
  message.
 @param message the detail message
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentCancellationException)

FOUNDATION_EXPORT void JavaUtilConcurrentCancellationException_init(JavaUtilConcurrentCancellationException *self);

FOUNDATION_EXPORT JavaUtilConcurrentCancellationException *new_JavaUtilConcurrentCancellationException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaUtilConcurrentCancellationException *create_JavaUtilConcurrentCancellationException_init(void);

FOUNDATION_EXPORT void JavaUtilConcurrentCancellationException_initWithNSString_(JavaUtilConcurrentCancellationException *self, NSString *message);

FOUNDATION_EXPORT JavaUtilConcurrentCancellationException *new_JavaUtilConcurrentCancellationException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaUtilConcurrentCancellationException *create_JavaUtilConcurrentCancellationException_initWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentCancellationException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaUtilConcurrentCancellationException")
