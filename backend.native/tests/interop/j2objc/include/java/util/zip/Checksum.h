//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/util/zip/Checksum.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaUtilZipChecksum")
#ifdef RESTRICT_JavaUtilZipChecksum
#define INCLUDE_ALL_JavaUtilZipChecksum 0
#else
#define INCLUDE_ALL_JavaUtilZipChecksum 1
#endif
#undef RESTRICT_JavaUtilZipChecksum

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaUtilZipChecksum_) && (INCLUDE_ALL_JavaUtilZipChecksum || defined(INCLUDE_JavaUtilZipChecksum))
#define JavaUtilZipChecksum_

@class IOSByteArray;

/*!
 @brief An interface representing a data checksum.
 @author David Connelly
 */
@protocol JavaUtilZipChecksum < JavaObject >

/*!
 @brief Updates the current checksum with the specified byte.
 @param b the byte to update the checksum with
 */
- (void)updateWithInt:(jint)b;

/*!
 @brief Updates the current checksum with the specified array of bytes.
 @param b the byte array to update the checksum with
 @param off the start offset of the data
 @param len the number of bytes to use for the update
 */
- (void)updateWithByteArray:(IOSByteArray *)b
                    withInt:(jint)off
                    withInt:(jint)len;

/*!
 @brief Returns the current checksum value.
 @return the current checksum value
 */
- (jlong)getValue;

/*!
 @brief Resets the checksum to its initial value.
 */
- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilZipChecksum)

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilZipChecksum)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaUtilZipChecksum")
