//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/lang/Readable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaLangReadable")
#ifdef RESTRICT_JavaLangReadable
#define INCLUDE_ALL_JavaLangReadable 0
#else
#define INCLUDE_ALL_JavaLangReadable 1
#endif
#undef RESTRICT_JavaLangReadable

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaLangReadable_) && (INCLUDE_ALL_JavaLangReadable || defined(INCLUDE_JavaLangReadable))
#define JavaLangReadable_

@class JavaNioCharBuffer;

/*!
 @brief A <tt>Readable</tt> is a source of characters.Characters from
  a <tt>Readable</tt> are made available to callers of the read
  method via a <code>CharBuffer</code>.
 @since 1.5
 */
@protocol JavaLangReadable < JavaObject >

/*!
 @brief Attempts to read characters into the specified character buffer.
 The buffer is used as a repository of characters as-is: the only
  changes made are the results of a put operation. No flipping or
  rewinding of the buffer is performed.
 @param cb the buffer to read characters into
 @return The number of <code>char</code> values added to the buffer,
                  or -1 if this source of characters is at its end
 @throw IOExceptionif an I/O error occurs
 @throw NullPointerExceptionif cb is null
 @throw java.nio.ReadOnlyBufferExceptionif cb is a read only buffer
 */
- (jint)readWithJavaNioCharBuffer:(JavaNioCharBuffer *)cb;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangReadable)

J2OBJC_TYPE_LITERAL_HEADER(JavaLangReadable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaLangReadable")
