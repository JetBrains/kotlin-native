//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/lang/ClassFormatError.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaLangClassFormatError")
#ifdef RESTRICT_JavaLangClassFormatError
#define INCLUDE_ALL_JavaLangClassFormatError 0
#else
#define INCLUDE_ALL_JavaLangClassFormatError 1
#endif
#undef RESTRICT_JavaLangClassFormatError

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaLangClassFormatError_) && (INCLUDE_ALL_JavaLangClassFormatError || defined(INCLUDE_JavaLangClassFormatError))
#define JavaLangClassFormatError_

#define RESTRICT_JavaLangLinkageError 1
#define INCLUDE_JavaLangLinkageError 1
#include "java/lang/LinkageError.h"

@class JavaLangThrowable;

/*!
 @brief Thrown when the Java Virtual Machine attempts to read a class
  file and determines that the file is malformed or otherwise cannot
  be interpreted as a class file.
 @author unascribed
 @since JDK1.0
 */
@interface JavaLangClassFormatError : JavaLangLinkageError

#pragma mark Public

/*!
 @brief Constructs a <code>ClassFormatError</code> with no detail message.
 */
- (instancetype __nonnull)init;

/*!
 @brief Constructs a <code>ClassFormatError</code> with the specified
  detail message.
 @param s the detail message.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)s;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangClassFormatError)

FOUNDATION_EXPORT void JavaLangClassFormatError_init(JavaLangClassFormatError *self);

FOUNDATION_EXPORT JavaLangClassFormatError *new_JavaLangClassFormatError_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangClassFormatError *create_JavaLangClassFormatError_init(void);

FOUNDATION_EXPORT void JavaLangClassFormatError_initWithNSString_(JavaLangClassFormatError *self, NSString *s);

FOUNDATION_EXPORT JavaLangClassFormatError *new_JavaLangClassFormatError_initWithNSString_(NSString *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangClassFormatError *create_JavaLangClassFormatError_initWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(JavaLangClassFormatError)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaLangClassFormatError")
