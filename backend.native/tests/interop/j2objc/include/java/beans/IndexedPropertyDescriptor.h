//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: apache_harmony/classlib/modules/beans/src/main/java/java/beans/IndexedPropertyDescriptor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaBeansIndexedPropertyDescriptor")
#ifdef RESTRICT_JavaBeansIndexedPropertyDescriptor
#define INCLUDE_ALL_JavaBeansIndexedPropertyDescriptor 0
#else
#define INCLUDE_ALL_JavaBeansIndexedPropertyDescriptor 1
#endif
#undef RESTRICT_JavaBeansIndexedPropertyDescriptor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaBeansIndexedPropertyDescriptor_) && (INCLUDE_ALL_JavaBeansIndexedPropertyDescriptor || defined(INCLUDE_JavaBeansIndexedPropertyDescriptor))
#define JavaBeansIndexedPropertyDescriptor_

#define RESTRICT_JavaBeansPropertyDescriptor 1
#define INCLUDE_JavaBeansPropertyDescriptor 1
#include "java/beans/PropertyDescriptor.h"

@class IOSClass;
@class JavaLangReflectMethod;

@interface JavaBeansIndexedPropertyDescriptor : JavaBeansPropertyDescriptor

#pragma mark Public

/*!
 @brief Constructs a new instance of <code>IndexedPropertyDescriptor</code>.
 @param propertyName the specified indexed property's name.
 @param beanClass the bean class.
 @throw IntrospectionException
 */
- (instancetype __nonnull)initWithNSString:(NSString *)propertyName
                              withIOSClass:(IOSClass *)beanClass;

/*!
 @brief Constructs a new instance of <code>IndexedPropertyDescriptor</code>.
 @param propertyName the specified indexed property's name.
 @param beanClass the bean class
 @param getterName the name of the array getter
 @param setterName the name of the array setter
 @param indexedGetterName the name of the indexed getter.
 @param indexedSetterName the name of the indexed setter.
 @throw IntrospectionException
 */
- (instancetype __nonnull)initWithNSString:(NSString *)propertyName
                              withIOSClass:(IOSClass *)beanClass
                              withNSString:(NSString *)getterName
                              withNSString:(NSString *)setterName
                              withNSString:(NSString *)indexedGetterName
                              withNSString:(NSString *)indexedSetterName;

/*!
 @brief Constructs a new instance of <code>IndexedPropertyDescriptor</code>.
 @param propertyName the specified indexed property's name.
 @param getter the array getter
 @param setter the array setter
 @param indexedGetter the indexed getter
 @param indexedSetter the indexed setter
 @throw IntrospectionException
 */
- (instancetype __nonnull)initWithNSString:(NSString *)propertyName
                 withJavaLangReflectMethod:(JavaLangReflectMethod *)getter
                 withJavaLangReflectMethod:(JavaLangReflectMethod *)setter
                 withJavaLangReflectMethod:(JavaLangReflectMethod *)indexedGetter
                 withJavaLangReflectMethod:(JavaLangReflectMethod *)indexedSetter;

/*!
 @brief Determines if this <code>IndexedPropertyDescriptor</code> is equal to
  the specified object.Two <code>IndexedPropertyDescriptor</code> s are
  equal if the reader, indexed reader, writer, indexed writer, property
  types, indexed property type, property editor and flags are equal.
 @param obj
 @return true if this indexed property descriptor is equal to the
          specified object.
 */
- (jboolean)isEqual:(id)obj;

/*!
 @brief Obtains the Class object of the indexed property type.
 @return the Class object of the indexed property type.
 */
- (IOSClass *)getIndexedPropertyType;

/*!
 @brief Obtains the indexed getter.
 @return the indexed getter.
 */
- (JavaLangReflectMethod *)getIndexedReadMethod;

/*!
 @brief Obtains the indexed setter.
 @return the indexed setter.
 */
- (JavaLangReflectMethod *)getIndexedWriteMethod;

/*!
 @brief HashCode of the IndexedPropertyDescriptor
 */
- (NSUInteger)hash;

/*!
 @brief Sets the indexed getter as the specified method.
 @param indexedGetter the specified indexed getter.
 @throw IntrospectionException
 */
- (void)setIndexedReadMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)indexedGetter;

/*!
 @brief Sets the indexed setter as the specified method.
 @param indexedSetter the specified indexed setter.
 @throw IntrospectionException
 */
- (void)setIndexedWriteMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)indexedSetter;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                              withIOSClass:(IOSClass *)arg1
                              withNSString:(NSString *)arg2
                              withNSString:(NSString *)arg3 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                 withJavaLangReflectMethod:(JavaLangReflectMethod *)arg1
                 withJavaLangReflectMethod:(JavaLangReflectMethod *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaBeansIndexedPropertyDescriptor)

FOUNDATION_EXPORT void JavaBeansIndexedPropertyDescriptor_initWithNSString_withIOSClass_withNSString_withNSString_withNSString_withNSString_(JavaBeansIndexedPropertyDescriptor *self, NSString *propertyName, IOSClass *beanClass, NSString *getterName, NSString *setterName, NSString *indexedGetterName, NSString *indexedSetterName);

FOUNDATION_EXPORT JavaBeansIndexedPropertyDescriptor *new_JavaBeansIndexedPropertyDescriptor_initWithNSString_withIOSClass_withNSString_withNSString_withNSString_withNSString_(NSString *propertyName, IOSClass *beanClass, NSString *getterName, NSString *setterName, NSString *indexedGetterName, NSString *indexedSetterName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaBeansIndexedPropertyDescriptor *create_JavaBeansIndexedPropertyDescriptor_initWithNSString_withIOSClass_withNSString_withNSString_withNSString_withNSString_(NSString *propertyName, IOSClass *beanClass, NSString *getterName, NSString *setterName, NSString *indexedGetterName, NSString *indexedSetterName);

FOUNDATION_EXPORT void JavaBeansIndexedPropertyDescriptor_initWithNSString_withJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_(JavaBeansIndexedPropertyDescriptor *self, NSString *propertyName, JavaLangReflectMethod *getter, JavaLangReflectMethod *setter, JavaLangReflectMethod *indexedGetter, JavaLangReflectMethod *indexedSetter);

FOUNDATION_EXPORT JavaBeansIndexedPropertyDescriptor *new_JavaBeansIndexedPropertyDescriptor_initWithNSString_withJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_(NSString *propertyName, JavaLangReflectMethod *getter, JavaLangReflectMethod *setter, JavaLangReflectMethod *indexedGetter, JavaLangReflectMethod *indexedSetter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaBeansIndexedPropertyDescriptor *create_JavaBeansIndexedPropertyDescriptor_initWithNSString_withJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_withJavaLangReflectMethod_(NSString *propertyName, JavaLangReflectMethod *getter, JavaLangReflectMethod *setter, JavaLangReflectMethod *indexedGetter, JavaLangReflectMethod *indexedSetter);

FOUNDATION_EXPORT void JavaBeansIndexedPropertyDescriptor_initWithNSString_withIOSClass_(JavaBeansIndexedPropertyDescriptor *self, NSString *propertyName, IOSClass *beanClass);

FOUNDATION_EXPORT JavaBeansIndexedPropertyDescriptor *new_JavaBeansIndexedPropertyDescriptor_initWithNSString_withIOSClass_(NSString *propertyName, IOSClass *beanClass) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaBeansIndexedPropertyDescriptor *create_JavaBeansIndexedPropertyDescriptor_initWithNSString_withIOSClass_(NSString *propertyName, IOSClass *beanClass);

J2OBJC_TYPE_LITERAL_HEADER(JavaBeansIndexedPropertyDescriptor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaBeansIndexedPropertyDescriptor")
