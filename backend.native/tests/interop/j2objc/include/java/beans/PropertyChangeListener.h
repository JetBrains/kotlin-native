//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/beans/PropertyChangeListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaBeansPropertyChangeListener")
#ifdef RESTRICT_JavaBeansPropertyChangeListener
#define INCLUDE_ALL_JavaBeansPropertyChangeListener 0
#else
#define INCLUDE_ALL_JavaBeansPropertyChangeListener 1
#endif
#undef RESTRICT_JavaBeansPropertyChangeListener

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaBeansPropertyChangeListener_) && (INCLUDE_ALL_JavaBeansPropertyChangeListener || defined(INCLUDE_JavaBeansPropertyChangeListener))
#define JavaBeansPropertyChangeListener_

#define RESTRICT_JavaUtilEventListener 1
#define INCLUDE_JavaUtilEventListener 1
#include "java/util/EventListener.h"

@class JavaBeansPropertyChangeEvent;

/*!
 @brief A "PropertyChange" event gets fired whenever a bean changes a "bound"
  property.You can register a PropertyChangeListener with a source
  bean so as to be notified of any bound property updates.
 */
@protocol JavaBeansPropertyChangeListener < JavaUtilEventListener, JavaObject >

/*!
 @brief This method gets called when a bound property is changed.
 @param evt A PropertyChangeEvent object describing the event source           and the property that has changed.
 */
- (void)propertyChangeWithJavaBeansPropertyChangeEvent:(JavaBeansPropertyChangeEvent *)evt;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaBeansPropertyChangeListener)

J2OBJC_TYPE_LITERAL_HEADER(JavaBeansPropertyChangeListener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JavaBeansPropertyChangeListener")
