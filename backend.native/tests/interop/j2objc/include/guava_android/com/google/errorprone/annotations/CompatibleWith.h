//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/errorprone/annotations/CompatibleWith.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith")
#ifdef RESTRICT_ComGoogleErrorproneAnnotationsCompatibleWith
#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith 0
#else
#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith 1
#endif
#undef RESTRICT_ComGoogleErrorproneAnnotationsCompatibleWith

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleErrorproneAnnotationsCompatibleWith_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith || defined(INCLUDE_ComGoogleErrorproneAnnotationsCompatibleWith))
#define ComGoogleErrorproneAnnotationsCompatibleWith_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Declares that a parameter to a method must be "compatible with" one of the type parameters in the
  method's enclosing class, or on the method itself."
 Compatible with" means that there can exist a
  "reference casting conversion" from one type to the other (JLS 5.5.1). 
 <p>For example, <code>Collection.contains</code> would be annotated as follows: 
 @code
 interface Collection<E> {
    boolean contains(@@CompatibleWith("E") Object o);
  } 
 
@endcode
  To indicate that invocations of <code>Collection.contains</code> must be passed an argument whose type
  is compatible with the generic type argument of the Collection instance. 
 <p>Note: currently, this annotation can't be used with varargs method parameters, or if the
  method overrides another method with <code>@@CompatibleWith</code> already present.
 */
@protocol ComGoogleErrorproneAnnotationsCompatibleWith < JavaLangAnnotationAnnotation >

@property (readonly) NSString *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComGoogleErrorproneAnnotationsCompatibleWith : NSObject < ComGoogleErrorproneAnnotationsCompatibleWith > {
 @public
  NSString *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsCompatibleWith)

FOUNDATION_EXPORT id<ComGoogleErrorproneAnnotationsCompatibleWith> create_ComGoogleErrorproneAnnotationsCompatibleWith(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsCompatibleWith)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsCompatibleWith")
