//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/ForwardingMultimap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectForwardingMultimap")
#ifdef RESTRICT_ComGoogleCommonCollectForwardingMultimap
#define INCLUDE_ALL_ComGoogleCommonCollectForwardingMultimap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectForwardingMultimap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectForwardingMultimap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectForwardingMultimap_) && (INCLUDE_ALL_ComGoogleCommonCollectForwardingMultimap || defined(INCLUDE_ComGoogleCommonCollectForwardingMultimap))
#define ComGoogleCommonCollectForwardingMultimap_

#define RESTRICT_ComGoogleCommonCollectForwardingObject 1
#define INCLUDE_ComGoogleCommonCollectForwardingObject 1
#include "com/google/common/collect/ForwardingObject.h"

#define RESTRICT_ComGoogleCommonCollectMultimap 1
#define INCLUDE_ComGoogleCommonCollectMultimap 1
#include "com/google/common/collect/Multimap.h"

@protocol ComGoogleCommonCollectMultiset;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief A multimap which forwards all its method calls to another multimap.Subclasses should override
  one or more methods to modify the behavior of the backing multimap as desired per the <a href="http://en.wikipedia.org/wiki/Decorator_pattern">
 decorator pattern</a>.
 <p><b><code>default</code> method warning:</b> This class does <i>not</i> forward calls to <code>default</code>
  methods. Instead, it inherits their default implementations. When those implementations
  invoke methods, they invoke methods on the <code>ForwardingMultimap</code>.
 @author Robert Konigsberg
 @since 2.0
 */
@interface ComGoogleCommonCollectForwardingMultimap : ComGoogleCommonCollectForwardingObject < ComGoogleCommonCollectMultimap >

#pragma mark Public

- (id<JavaUtilMap>)asMap;

- (void)clear;

- (jboolean)containsEntryWithId:(id __nullable)key
                         withId:(id __nullable)value;

- (jboolean)containsKeyWithId:(id __nullable)key;

- (jboolean)containsValueWithId:(id __nullable)value;

- (id<JavaUtilCollection>)entries;

- (jboolean)isEqual:(id __nullable)object;

- (id<JavaUtilCollection>)getWithId:(id __nullable)key;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<ComGoogleCommonCollectMultiset>)keys;

- (id<JavaUtilSet>)keySet;

- (jboolean)putWithId:(id __nonnull)key
               withId:(id __nonnull)value;

- (jboolean)putAllWithId:(id __nonnull)key
    withJavaLangIterable:(id<JavaLangIterable> __nonnull)values;

- (jboolean)putAllWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap> __nonnull)multimap;

- (jboolean)removeWithId:(id __nullable)key
                  withId:(id __nullable)value;

- (id<JavaUtilCollection>)removeAllWithId:(id __nullable)key;

- (id<JavaUtilCollection>)replaceValuesWithId:(id __nonnull)key
                         withJavaLangIterable:(id<JavaLangIterable> __nonnull)values;

- (jint)size;

- (id<JavaUtilCollection>)values;

#pragma mark Protected

/*!
 @brief Constructor for use by subclasses.
 */
- (instancetype __nonnull)init;

- (id<ComGoogleCommonCollectMultimap>)delegate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectForwardingMultimap)

FOUNDATION_EXPORT void ComGoogleCommonCollectForwardingMultimap_init(ComGoogleCommonCollectForwardingMultimap *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectForwardingMultimap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectForwardingMultimap")
