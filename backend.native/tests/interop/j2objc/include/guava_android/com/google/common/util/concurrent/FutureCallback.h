//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/util/concurrent/FutureCallback.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutureCallback")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentFutureCallback
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutureCallback 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutureCallback 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentFutureCallback

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentFutureCallback_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutureCallback || defined(INCLUDE_ComGoogleCommonUtilConcurrentFutureCallback))
#define ComGoogleCommonUtilConcurrentFutureCallback_

@class JavaLangThrowable;

/*!
 @brief A callback for accepting the results of a <code>java.util.concurrent.Future</code> computation
  asynchronously.
 <p>To attach to a <code>ListenableFuture</code> use <code>Futures.addCallback</code>.
 @author Anthony Zana
 @since 10.0
 */
@protocol ComGoogleCommonUtilConcurrentFutureCallback < JavaObject >

/*!
 @brief Invoked with the result of the <code>Future</code> computation when it is successful.
 */
- (void)onSuccessWithId:(id __nullable)result;

/*!
 @brief Invoked when a <code>Future</code> computation fails or is canceled.
 <p>If the future's <code>get</code> method throws an <code>ExecutionException</code>, then
  the cause is passed to this method. Any other thrown object is passed unaltered.
 */
- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable * __nonnull)t;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutureCallback)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentFutureCallback)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutureCallback")
