//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/ContiguousSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectContiguousSet")
#ifdef RESTRICT_ComGoogleCommonCollectContiguousSet
#define INCLUDE_ALL_ComGoogleCommonCollectContiguousSet 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectContiguousSet 1
#endif
#undef RESTRICT_ComGoogleCommonCollectContiguousSet

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectContiguousSet_) && (INCLUDE_ALL_ComGoogleCommonCollectContiguousSet || defined(INCLUDE_ComGoogleCommonCollectContiguousSet))
#define ComGoogleCommonCollectContiguousSet_

#define RESTRICT_ComGoogleCommonCollectImmutableSortedSet 1
#define INCLUDE_ComGoogleCommonCollectImmutableSortedSet 1
#include "com/google/common/collect/ImmutableSortedSet.h"

@class ComGoogleCommonCollectBoundType;
@class ComGoogleCommonCollectDiscreteDomain;
@class ComGoogleCommonCollectImmutableSortedSet_Builder;
@class ComGoogleCommonCollectRange;
@protocol JavaLangComparable;
@protocol JavaUtilComparator;

/*!
 @brief A sorted set of contiguous values in a given <code>DiscreteDomain</code>.Example:
  
 @code
 ContiguousSet.create(Range.closed(5, 42), DiscreteDomain.integers()) 
 
@endcode
  
 <p>Note that because bounded ranges over <code>int</code> and <code>long</code> values are so common, this
  particular example can be written as just: 
 @code
 ContiguousSet.closed(5, 42) 
 
@endcode
  
 <p><b>Warning:</b> Be extremely careful what you do with conceptually large instances (such as 
 <code>ContiguousSet.create(Range.greaterThan(0), DiscreteDomain.integers()</code>).
 Certain operations
  on such a set can be performed efficiently, but others (such as <code>Set.hashCode</code> or <code>Collections.frequency</code>
 ) can cause major performance problems.
 @author Gregory Kick
 @since 10.0
 */
@interface ComGoogleCommonCollectContiguousSet : ComGoogleCommonCollectImmutableSortedSet {
 @public
  ComGoogleCommonCollectDiscreteDomain *domain_;
}

#pragma mark Public

/*!
 @brief Not supported.
 <code>ContiguousSet</code> instances are constructed with <code>create</code>. This
  method exists only to hide <code>ImmutableSet.builder</code> from consumers of <code>ContiguousSet</code>
 .
 @throw UnsupportedOperationExceptionalways
 */
+ (ComGoogleCommonCollectImmutableSortedSet_Builder *)builder __attribute__((deprecated));

- (id<JavaLangComparable>)ceilingWithId:(id<JavaLangComparable> __nonnull)arg0;

/*!
 @brief Returns a nonempty contiguous set containing all <code>int</code> values from <code>lower</code>
  (inclusive) to <code>upper</code> (inclusive).
 (These are the same values contained in <code>Range.closed(lower, upper)</code>
 .)
 @throw IllegalArgumentExceptionif <code>lower</code> is greater than <code>upper</code>
 @since 23.0
 */
+ (ComGoogleCommonCollectContiguousSet *)closedWithInt:(jint)lower
                                               withInt:(jint)upper;

/*!
 @brief Returns a nonempty contiguous set containing all <code>long</code> values from <code>lower</code>
  (inclusive) to <code>upper</code> (inclusive).
 (These are the same values contained in <code>Range.closed(lower, upper)</code>
 .)
 @throw IllegalArgumentExceptionif <code>lower</code> is greater than <code>upper</code>
 @since 23.0
 */
+ (ComGoogleCommonCollectContiguousSet *)closedWithLong:(jlong)lower
                                               withLong:(jlong)upper;

/*!
 @brief Returns a contiguous set containing all <code>int</code> values from <code>lower</code> (inclusive) to 
 <code>upper</code> (exclusive).If the endpoints are equal, an empty set is returned.
 (These are the
  same values contained in <code>Range.closedOpen(lower, upper)</code>.)
 @throw IllegalArgumentExceptionif <code>lower</code> is greater than <code>upper</code>
 @since 23.0
 */
+ (ComGoogleCommonCollectContiguousSet *)closedOpenWithInt:(jint)lower
                                                   withInt:(jint)upper;

/*!
 @brief Returns a contiguous set containing all <code>long</code> values from <code>lower</code> (inclusive) to 
 <code>upper</code> (exclusive).If the endpoints are equal, an empty set is returned.
 (These are the
  same values contained in <code>Range.closedOpen(lower, upper)</code>.)
 @throw IllegalArgumentExceptionif <code>lower</code> is greater than <code>upper</code>
 @since 23.0
 */
+ (ComGoogleCommonCollectContiguousSet *)closedOpenWithLong:(jlong)lower
                                                   withLong:(jlong)upper;

/*!
 @brief Returns a <code>ContiguousSet</code> containing the same values in the given domain contained
  by the range.
 @throw IllegalArgumentExceptionif neither range nor the domain has a lower bound, or if
      neither has an upper bound
 @since 13.0
 */
+ (ComGoogleCommonCollectContiguousSet *)createWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange * __nonnull)range
                                      withComGoogleCommonCollectDiscreteDomain:(ComGoogleCommonCollectDiscreteDomain * __nonnull)domain;

- (id<JavaLangComparable>)first;

- (id<JavaLangComparable>)floorWithId:(id<JavaLangComparable> __nonnull)arg0;

- (ComGoogleCommonCollectContiguousSet *)headSetWithId:(id<JavaLangComparable> __nonnull)toElement;

/*!
 @since 12.0
 */
- (ComGoogleCommonCollectContiguousSet *)headSetWithId:(id<JavaLangComparable> __nonnull)toElement
                                           withBoolean:(jboolean)inclusive;

- (id<JavaLangComparable>)higherWithId:(id<JavaLangComparable> __nonnull)arg0;

/*!
 @brief Returns the set of values that are contained in both this set and the other.
 <p>This method should always be used instead of <code>Sets.intersection</code> for <code>ContiguousSet</code>
  instances.
 */
- (ComGoogleCommonCollectContiguousSet *)intersectionWithComGoogleCommonCollectContiguousSet:(ComGoogleCommonCollectContiguousSet * __nonnull)other;

- (id<JavaLangComparable>)last;

- (id<JavaLangComparable>)lowerWithId:(id<JavaLangComparable> __nonnull)arg0;

- (id<JavaLangComparable>)pollFirst;

- (id<JavaLangComparable>)pollLast;

/*!
 @brief Returns a range, closed on both ends, whose endpoints are the minimum and maximum values
  contained in this set.This is equivalent to <code>range(CLOSED, CLOSED)</code>.
 @throw NoSuchElementExceptionif this set is empty
 */
- (ComGoogleCommonCollectRange *)range;

/*!
 @brief Returns the minimal range with the given boundary types for which all values in this set are 
 contained within the range.
 <p>Note that this method will return ranges with unbounded endpoints if <code>BoundType.OPEN</code>
  is requested for a domain minimum or maximum. For example, if <code>set</code> was created from the
  range <code>[1..Integer.MAX_VALUE]</code> then <code>set.range(CLOSED, OPEN)</code> must return <code>[1..âˆž)</code>
 .
 @throw NoSuchElementExceptionif this set is empty
 */
- (ComGoogleCommonCollectRange *)rangeWithComGoogleCommonCollectBoundType:(ComGoogleCommonCollectBoundType * __nonnull)lowerBoundType
                                      withComGoogleCommonCollectBoundType:(ComGoogleCommonCollectBoundType * __nonnull)upperBoundType;

/*!
 @since 12.0
 */
- (ComGoogleCommonCollectContiguousSet *)subSetWithId:(id<JavaLangComparable> __nonnull)fromElement
                                          withBoolean:(jboolean)fromInclusive
                                               withId:(id<JavaLangComparable> __nonnull)toElement
                                          withBoolean:(jboolean)toInclusive;

- (ComGoogleCommonCollectContiguousSet *)subSetWithId:(id<JavaLangComparable> __nonnull)fromElement
                                               withId:(id<JavaLangComparable> __nonnull)toElement;

- (ComGoogleCommonCollectContiguousSet *)tailSetWithId:(id<JavaLangComparable> __nonnull)fromElement;

/*!
 @since 12.0
 */
- (ComGoogleCommonCollectContiguousSet *)tailSetWithId:(id<JavaLangComparable> __nonnull)fromElement
                                           withBoolean:(jboolean)inclusive;

/*!
 @brief Returns a short-hand representation of the contents such as <code>"[1..100]"</code>.
 */
- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectDiscreteDomain:(ComGoogleCommonCollectDiscreteDomain * __nonnull)domain;

- (ComGoogleCommonCollectImmutableSortedSet *)createDescendingSet;

- (ComGoogleCommonCollectContiguousSet *)headSetImplWithId:(id<JavaLangComparable> __nonnull)toElement
                                               withBoolean:(jboolean)inclusive;

- (ComGoogleCommonCollectContiguousSet *)subSetImplWithId:(id<JavaLangComparable> __nonnull)fromElement
                                              withBoolean:(jboolean)fromInclusive
                                                   withId:(id<JavaLangComparable> __nonnull)toElement
                                              withBoolean:(jboolean)toInclusive;

- (ComGoogleCommonCollectContiguousSet *)tailSetImplWithId:(id<JavaLangComparable> __nonnull)fromElement
                                               withBoolean:(jboolean)inclusive;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilComparator:(id<JavaUtilComparator> __nonnull)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectContiguousSet)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectContiguousSet, domain_, ComGoogleCommonCollectDiscreteDomain *)

FOUNDATION_EXPORT ComGoogleCommonCollectContiguousSet *ComGoogleCommonCollectContiguousSet_createWithComGoogleCommonCollectRange_withComGoogleCommonCollectDiscreteDomain_(ComGoogleCommonCollectRange *range, ComGoogleCommonCollectDiscreteDomain *domain);

FOUNDATION_EXPORT ComGoogleCommonCollectContiguousSet *ComGoogleCommonCollectContiguousSet_closedWithInt_withInt_(jint lower, jint upper);

FOUNDATION_EXPORT ComGoogleCommonCollectContiguousSet *ComGoogleCommonCollectContiguousSet_closedWithLong_withLong_(jlong lower, jlong upper);

FOUNDATION_EXPORT ComGoogleCommonCollectContiguousSet *ComGoogleCommonCollectContiguousSet_closedOpenWithInt_withInt_(jint lower, jint upper);

FOUNDATION_EXPORT ComGoogleCommonCollectContiguousSet *ComGoogleCommonCollectContiguousSet_closedOpenWithLong_withLong_(jlong lower, jlong upper);

FOUNDATION_EXPORT void ComGoogleCommonCollectContiguousSet_initWithComGoogleCommonCollectDiscreteDomain_(ComGoogleCommonCollectContiguousSet *self, ComGoogleCommonCollectDiscreteDomain *domain);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableSortedSet_Builder *ComGoogleCommonCollectContiguousSet_builder(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectContiguousSet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectContiguousSet")
