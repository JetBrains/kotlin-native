//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/AbstractListMultimap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectAbstractListMultimap")
#ifdef RESTRICT_ComGoogleCommonCollectAbstractListMultimap
#define INCLUDE_ALL_ComGoogleCommonCollectAbstractListMultimap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectAbstractListMultimap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectAbstractListMultimap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectAbstractListMultimap_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractListMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractListMultimap))
#define ComGoogleCommonCollectAbstractListMultimap_

#define RESTRICT_ComGoogleCommonCollectAbstractMapBasedMultimap 1
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap 1
#include "com/google/common/collect/AbstractMapBasedMultimap.h"

#define RESTRICT_ComGoogleCommonCollectListMultimap 1
#define INCLUDE_ComGoogleCommonCollectListMultimap 1
#include "com/google/common/collect/ListMultimap.h"

@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol JavaUtilMap;

/*!
 @brief Basic implementation of the <code>ListMultimap</code> interface.It's a wrapper around <code>AbstractMapBasedMultimap</code>
  that converts the returned collections into <code>Lists</code>.
 The <code>createCollection</code>
  method must return a <code>List</code>.
 @author Jared Levy
 @since 2.0
 */
@interface ComGoogleCommonCollectAbstractListMultimap : ComGoogleCommonCollectAbstractMapBasedMultimap < ComGoogleCommonCollectListMultimap >

#pragma mark Public

/*!
 @brief <p>Though the method signature doesn't say so explicitly, the returned map has <code>List</code>
  values.
 */
- (id<JavaUtilMap>)asMap;

/*!
 @brief Compares the specified object to this multimap for equality.
 <p>Two <code>ListMultimap</code> instances are equal if, for each key, they contain the same values
  in the same order. If the value orderings disagree, the multimaps will not be considered equal.
 */
- (jboolean)isEqual:(id __nullable)object;

/*!
 @brief <p>Because the values for a given key may have duplicates and follow the insertion ordering,
  this method returns a <code>List</code>, instead of the <code>Collection</code> specified in the <code>Multimap</code>
  interface.
 */
- (id<JavaUtilList>)getWithId:(id __nullable)key;

/*!
 @brief Stores a key-value pair in the multimap.
 @param key key to store in the multimap
 @param value value to store in the multimap
 @return <code>true</code> always
 */
- (jboolean)putWithId:(id __nullable)key
               withId:(id __nullable)value;

/*!
 @brief <p>Because the values for a given key may have duplicates and follow the insertion ordering,
  this method returns a <code>List</code>, instead of the <code>Collection</code> specified in the <code>Multimap</code>
  interface.
 */
- (id<JavaUtilList>)removeAllWithId:(id __nullable)key;

/*!
 @brief <p>Because the values for a given key may have duplicates and follow the insertion ordering,
  this method returns a <code>List</code>, instead of the <code>Collection</code> specified in the <code>Multimap</code>
  interface.
 */
- (id<JavaUtilList>)replaceValuesWithId:(id __nullable)key
                   withJavaLangIterable:(id<JavaLangIterable> __nonnull)values;

#pragma mark Protected

/*!
 @brief Creates a new multimap that uses the provided map.
 @param map place to store the mapping from each key to its corresponding values
 */
- (instancetype __nonnull)initPackagePrivateWithJavaUtilMap:(id<JavaUtilMap> __nonnull)map;

#pragma mark Package-Private

- (id<JavaUtilList>)createCollection;

- (id<JavaUtilList>)createUnmodifiableEmptyCollection;

- (id<JavaUtilCollection>)unmodifiableCollectionSubclassWithJavaUtilCollection:(id<JavaUtilCollection> __nonnull)collection;

- (id<JavaUtilCollection>)wrapCollectionWithId:(id __nonnull)key
                        withJavaUtilCollection:(id<JavaUtilCollection> __nonnull)collection;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractListMultimap)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractListMultimap_initPackagePrivateWithJavaUtilMap_(ComGoogleCommonCollectAbstractListMultimap *self, id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractListMultimap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectAbstractListMultimap")
