//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/EnumBiMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectEnumBiMap")
#ifdef RESTRICT_ComGoogleCommonCollectEnumBiMap
#define INCLUDE_ALL_ComGoogleCommonCollectEnumBiMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectEnumBiMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectEnumBiMap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectEnumBiMap_) && (INCLUDE_ALL_ComGoogleCommonCollectEnumBiMap || defined(INCLUDE_ComGoogleCommonCollectEnumBiMap))
#define ComGoogleCommonCollectEnumBiMap_

#define RESTRICT_ComGoogleCommonCollectAbstractBiMap 1
#define INCLUDE_ComGoogleCommonCollectAbstractBiMap 1
#include "com/google/common/collect/AbstractBiMap.h"

@class IOSClass;
@class JavaLangEnum;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilMap;

/*!
 @brief A <code>BiMap</code> backed by two <code>EnumMap</code> instances.Null keys and values are not permitted.
 An <code>EnumBiMap</code> and its inverse are both serializable. 
 <p>See the Guava User Guide article on <a href="https://github.com/google/guava/wiki/NewCollectionTypesExplained#bimap">
  <code>BiMap</code></a>.
 @author Mike Bostock
 @since 2.0
 */
@interface ComGoogleCommonCollectEnumBiMap : ComGoogleCommonCollectAbstractBiMap

#pragma mark Public

- (JavaLangEnum *)computeIfAbsentWithId:(JavaLangEnum * __nonnull)arg0
           withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction> __nonnull)arg1;

- (JavaLangEnum *)computeIfPresentWithId:(JavaLangEnum * __nonnull)arg0
          withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction> __nonnull)arg1;

- (JavaLangEnum *)computeWithId:(JavaLangEnum * __nonnull)arg0
 withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction> __nonnull)arg1;

/*!
 @brief Returns a new, empty <code>EnumBiMap</code> using the specified key and value types.
 @param keyType the key type
 @param valueType the value type
 */
+ (ComGoogleCommonCollectEnumBiMap *)createWithIOSClass:(IOSClass * __nonnull)keyType
                                           withIOSClass:(IOSClass * __nonnull)valueType;

/*!
 @brief Returns a new bimap with the same mappings as the specified map.If the specified map is an 
 <code>EnumBiMap</code>, the new bimap has the same types as the provided map.
 Otherwise, the
  specified map must contain at least one mapping, in order to determine the key and value types.
 @param map the map whose mappings are to be placed in this map
 @throw IllegalArgumentExceptionif map is not an <code>EnumBiMap</code> instance and contains no
      mappings
 */
+ (ComGoogleCommonCollectEnumBiMap *)createWithJavaUtilMap:(id<JavaUtilMap> __nonnull)map;

- (JavaLangEnum *)forcePutWithId:(JavaLangEnum * __nonnull)arg0
                          withId:(JavaLangEnum * __nonnull)arg1;

- (JavaLangEnum *)getOrDefaultWithId:(id __nonnull)arg0
                              withId:(JavaLangEnum * __nonnull)arg1;

- (JavaLangEnum *)getWithId:(id __nonnull)arg0;

/*!
 @brief Returns the associated key type.
 */
- (IOSClass *)keyType;

- (JavaLangEnum *)mergeWithId:(JavaLangEnum * __nonnull)arg0
                       withId:(JavaLangEnum * __nonnull)arg1
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction> __nonnull)arg2;

- (JavaLangEnum *)putIfAbsentWithId:(JavaLangEnum * __nonnull)arg0
                             withId:(JavaLangEnum * __nonnull)arg1;

- (JavaLangEnum *)putWithId:(JavaLangEnum * __nonnull)arg0
                     withId:(JavaLangEnum * __nonnull)arg1;

- (JavaLangEnum *)removeWithId:(id __nonnull)arg0;

- (JavaLangEnum *)replaceWithId:(JavaLangEnum * __nonnull)arg0
                         withId:(JavaLangEnum * __nonnull)arg1;

/*!
 @brief Returns the associated value type.
 */
- (IOSClass *)valueType;

#pragma mark Protected

- (JavaLangEnum *)standardRemoveWithId:(id __nonnull)arg0;

#pragma mark Package-Private

- (JavaLangEnum *)checkKeyWithId:(JavaLangEnum * __nonnull)key;

- (JavaLangEnum *)checkValueWithId:(JavaLangEnum * __nonnull)value;

+ (IOSClass *)inferKeyTypeWithJavaUtilMap:(id<JavaUtilMap> __nonnull)map;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivateWithJavaUtilMap:(id<JavaUtilMap> __nonnull)arg0
                                            withJavaUtilMap:(id<JavaUtilMap> __nonnull)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectEnumBiMap)

FOUNDATION_EXPORT ComGoogleCommonCollectEnumBiMap *ComGoogleCommonCollectEnumBiMap_createWithIOSClass_withIOSClass_(IOSClass *keyType, IOSClass *valueType);

FOUNDATION_EXPORT ComGoogleCommonCollectEnumBiMap *ComGoogleCommonCollectEnumBiMap_createWithJavaUtilMap_(id<JavaUtilMap> map);

FOUNDATION_EXPORT IOSClass *ComGoogleCommonCollectEnumBiMap_inferKeyTypeWithJavaUtilMap_(id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectEnumBiMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectEnumBiMap")
