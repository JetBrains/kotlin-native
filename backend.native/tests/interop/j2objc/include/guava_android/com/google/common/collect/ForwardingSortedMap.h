//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/ForwardingSortedMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectForwardingSortedMap")
#ifdef RESTRICT_ComGoogleCommonCollectForwardingSortedMap
#define INCLUDE_ALL_ComGoogleCommonCollectForwardingSortedMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectForwardingSortedMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectForwardingSortedMap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectForwardingSortedMap_) && (INCLUDE_ALL_ComGoogleCommonCollectForwardingSortedMap || defined(INCLUDE_ComGoogleCommonCollectForwardingSortedMap))
#define ComGoogleCommonCollectForwardingSortedMap_

#define RESTRICT_ComGoogleCommonCollectForwardingMap 1
#define INCLUDE_ComGoogleCommonCollectForwardingMap 1
#include "com/google/common/collect/ForwardingMap.h"

#define RESTRICT_JavaUtilSortedMap 1
#define INCLUDE_JavaUtilSortedMap 1
#include "java/util/SortedMap.h"

@protocol JavaUtilComparator;

/*!
 @brief A sorted map which forwards all its method calls to another sorted map.Subclasses should
  override one or more methods to modify the behavior of the backing sorted map as desired per the 
 <a href="http://en.wikipedia.org/wiki/Decorator_pattern">decorator pattern</a>.
 <p><b>Warning:</b> The methods of <code>ForwardingSortedMap</code> forward <i>indiscriminately</i> to
  the methods of the delegate. For example, overriding <code>put</code> alone <i>will not</i> change
  the behavior of <code>putAll</code>, which can lead to unexpected behavior. In this case, you should
  override <code>putAll</code> as well, either providing your own implementation, or delegating to the
  provided <code>standardPutAll</code> method. 
 <p><b><code>default</code> method warning:</b> This class does <i>not</i> forward calls to <code>default</code>
  methods. Instead, it inherits their default implementations. When those implementations
  invoke methods, they invoke methods on the <code>ForwardingSortedMap</code>.
  
 <p>Each of the <code>standard</code> methods, where appropriate, use the comparator of the map to test
  equality for both keys and values, unlike <code>ForwardingMap</code>.
  
 <p>The <code>standard</code> methods and the collection views they return are not guaranteed to be
  thread-safe, even when all of the methods that they depend on are thread-safe.
 @author Mike Bostock
 @author Louis Wasserman
 @since 2.0
 */
@interface ComGoogleCommonCollectForwardingSortedMap : ComGoogleCommonCollectForwardingMap < JavaUtilSortedMap >

#pragma mark Public

- (id<JavaUtilComparator>)comparator;

- (id)firstKey;

- (id<JavaUtilSortedMap>)headMapWithId:(id __nonnull)toKey;

- (id)lastKey;

- (id<JavaUtilSortedMap>)subMapWithId:(id __nonnull)fromKey
                               withId:(id __nonnull)toKey;

- (id<JavaUtilSortedMap>)tailMapWithId:(id __nonnull)fromKey;

#pragma mark Protected

/*!
 @brief Constructor for use by subclasses.
 */
- (instancetype __nonnull)init;

- (id<JavaUtilSortedMap>)delegate;

/*!
 @brief A sensible definition of <code>containsKey</code> in terms of the <code>firstKey()</code> method of 
 <code>tailMap</code>.If you override <code>tailMap</code>, you may wish to override <code>containsKey</code>
  to forward to this implementation.
 @since 7.0
 */
- (jboolean)standardContainsKeyWithId:(id __nullable)key;

/*!
 @brief A sensible default implementation of <code>subMap(Object, Object)</code> in terms of <code>headMap(Object)</code>
  and <code>tailMap(Object)</code>.In some situations, you may wish to override 
 <code>subMap(Object, Object)</code> to forward to this implementation.
 @since 7.0
 */
- (id<JavaUtilSortedMap>)standardSubMapWithId:(id __nonnull)fromKey
                                       withId:(id __nonnull)toKey;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectForwardingSortedMap)

FOUNDATION_EXPORT void ComGoogleCommonCollectForwardingSortedMap_init(ComGoogleCommonCollectForwardingSortedMap *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectForwardingSortedMap)

#endif

#if !defined (ComGoogleCommonCollectForwardingSortedMap_StandardKeySet_) && (INCLUDE_ALL_ComGoogleCommonCollectForwardingSortedMap || defined(INCLUDE_ComGoogleCommonCollectForwardingSortedMap_StandardKeySet))
#define ComGoogleCommonCollectForwardingSortedMap_StandardKeySet_

#define RESTRICT_ComGoogleCommonCollectMaps 1
#define INCLUDE_ComGoogleCommonCollectMaps_SortedKeySet 1
#include "com/google/common/collect/Maps.h"

@class ComGoogleCommonCollectForwardingSortedMap;
@protocol JavaUtilSortedMap;

/*!
 @brief A sensible implementation of <code>SortedMap.keySet</code> in terms of the methods of <code>ForwardingSortedMap</code>
 .In many cases, you may wish to override <code>ForwardingSortedMap.keySet</code>
  to forward to this implementation or a subclass thereof.
 @since 15.0
 */
@interface ComGoogleCommonCollectForwardingSortedMap_StandardKeySet : ComGoogleCommonCollectMaps_SortedKeySet

#pragma mark Public

/*!
 @brief Constructor for use by subclasses.
 */
- (instancetype __nonnull)initWithComGoogleCommonCollectForwardingSortedMap:(ComGoogleCommonCollectForwardingSortedMap * __nonnull)outer$;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilSortedMap:(id<JavaUtilSortedMap> __nonnull)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectForwardingSortedMap_StandardKeySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectForwardingSortedMap_StandardKeySet_initWithComGoogleCommonCollectForwardingSortedMap_(ComGoogleCommonCollectForwardingSortedMap_StandardKeySet *self, ComGoogleCommonCollectForwardingSortedMap *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectForwardingSortedMap_StandardKeySet *new_ComGoogleCommonCollectForwardingSortedMap_StandardKeySet_initWithComGoogleCommonCollectForwardingSortedMap_(ComGoogleCommonCollectForwardingSortedMap *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectForwardingSortedMap_StandardKeySet *create_ComGoogleCommonCollectForwardingSortedMap_StandardKeySet_initWithComGoogleCommonCollectForwardingSortedMap_(ComGoogleCommonCollectForwardingSortedMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectForwardingSortedMap_StandardKeySet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectForwardingSortedMap")
