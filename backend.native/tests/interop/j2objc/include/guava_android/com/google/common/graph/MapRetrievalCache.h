//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/graph/MapRetrievalCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache")
#ifdef RESTRICT_ComGoogleCommonGraphMapRetrievalCache
#define INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache 1
#endif
#undef RESTRICT_ComGoogleCommonGraphMapRetrievalCache

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphMapRetrievalCache_) && (INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache || defined(INCLUDE_ComGoogleCommonGraphMapRetrievalCache))
#define ComGoogleCommonGraphMapRetrievalCache_

#define RESTRICT_ComGoogleCommonGraphMapIteratorCache 1
#define INCLUDE_ComGoogleCommonGraphMapIteratorCache 1
#include "com/google/common/graph/MapIteratorCache.h"

@protocol JavaUtilMap;

/*!
 @brief A <code>MapIteratorCache</code> that adds additional caching.In addition to the caching provided by 
 <code>MapIteratorCache</code>, this structure caches values for the two most recently retrieved keys.
 @author James Sexton
 */
@interface ComGoogleCommonGraphMapRetrievalCache : ComGoogleCommonGraphMapIteratorCache

#pragma mark Public

- (id)getWithId:(id __nullable)key;

#pragma mark Protected

- (void)clearCache;

- (id)getIfCachedWithId:(id __nullable)key;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivateWithJavaUtilMap:(id<JavaUtilMap> __nonnull)backingMap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphMapRetrievalCache)

FOUNDATION_EXPORT void ComGoogleCommonGraphMapRetrievalCache_initPackagePrivateWithJavaUtilMap_(ComGoogleCommonGraphMapRetrievalCache *self, id<JavaUtilMap> backingMap);

FOUNDATION_EXPORT ComGoogleCommonGraphMapRetrievalCache *new_ComGoogleCommonGraphMapRetrievalCache_initPackagePrivateWithJavaUtilMap_(id<JavaUtilMap> backingMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonGraphMapRetrievalCache *create_ComGoogleCommonGraphMapRetrievalCache_initPackagePrivateWithJavaUtilMap_(id<JavaUtilMap> backingMap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphMapRetrievalCache)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache")
