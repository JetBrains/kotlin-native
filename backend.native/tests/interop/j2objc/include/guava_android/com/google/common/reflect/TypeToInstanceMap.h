//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/reflect/TypeToInstanceMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonReflectTypeToInstanceMap")
#ifdef RESTRICT_ComGoogleCommonReflectTypeToInstanceMap
#define INCLUDE_ALL_ComGoogleCommonReflectTypeToInstanceMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonReflectTypeToInstanceMap 1
#endif
#undef RESTRICT_ComGoogleCommonReflectTypeToInstanceMap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonReflectTypeToInstanceMap_) && (INCLUDE_ALL_ComGoogleCommonReflectTypeToInstanceMap || defined(INCLUDE_ComGoogleCommonReflectTypeToInstanceMap))
#define ComGoogleCommonReflectTypeToInstanceMap_

#define RESTRICT_JavaUtilMap 1
#define INCLUDE_JavaUtilMap 1
#include "java/util/Map.h"

@class ComGoogleCommonReflectTypeToken;
@class IOSClass;

/*!
 @brief A map, each entry of which maps a <code>TypeToken</code> to an instance of that type.In addition to
  implementing <code>Map</code>, the additional type-safe operations <code>putInstance</code> and <code>getInstance</code>
  are available.
 <p>Generally, implementations don't support <code>put</code> and <code>putAll</code> because there is no
  way to check an object at runtime to be an instance of a <code>TypeToken</code>. Instead, caller
  should use the type safe <code>putInstance</code>.
  
 <p>Also, if caller suppresses unchecked warnings and passes in an <code>Iterable<String></code> for
  type <code>Iterable<Integer></code>, the map won't be able to detect and throw type error. 
 <p>Like any other <code>Map<Class, Object></code>, this map may contain entries for primitive types,
  and a primitive type and its corresponding wrapper type may map to different values.
 @author Ben Yu
 @since 13.0
 */
@protocol ComGoogleCommonReflectTypeToInstanceMap < JavaUtilMap, JavaObject >

/*!
 @brief Returns the value the specified class is mapped to, or <code>null</code> if no entry for this class
  is present.This will only return a value that was bound to this specific class, not a value
  that may have been bound to a subtype.
 <p><code>getInstance(Foo.class)</code> is equivalent to <code>getInstance(TypeToken.of(Foo.class))</code>
 .
 */
- (id __nullable)getInstanceWithIOSClass:(IOSClass * __nonnull)type;

/*!
 @brief Returns the value the specified type is mapped to, or <code>null</code> if no entry for this type is
  present.This will only return a value that was bound to this specific type, not a value that
  may have been bound to a subtype.
 */
- (id __nullable)getInstanceWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken * __nonnull)type;

/*!
 @brief Maps the specified class to the specified value.Does <i>not</i> associate this value with any
  of the class's supertypes.
 <p><code>putInstance(Foo.class, foo)</code> is equivalent to <code>putInstance(TypeToken.of(Foo.class), foo)</code>
 .
 @return the value previously associated with this class (possibly <code>null</code>), or <code>null</code>
  if there was no previous entry.
 */
- (id __nullable)putInstanceWithIOSClass:(IOSClass * __nonnull)type
                                  withId:(id __nullable)value;

/*!
 @brief Maps the specified type to the specified value.Does <i>not</i> associate this value with any
  of the type's supertypes.
 @return the value previously associated with this type (possibly <code>null</code>), or <code>null</code>
      if there was no previous entry.
 */
- (id __nullable)putInstanceWithComGoogleCommonReflectTypeToken:(ComGoogleCommonReflectTypeToken * __nonnull)type
                                                         withId:(id __nullable)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectTypeToInstanceMap)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectTypeToInstanceMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonReflectTypeToInstanceMap")
