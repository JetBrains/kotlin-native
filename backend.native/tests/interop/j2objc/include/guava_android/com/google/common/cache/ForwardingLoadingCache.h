//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/cache/ForwardingLoadingCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCacheForwardingLoadingCache")
#ifdef RESTRICT_ComGoogleCommonCacheForwardingLoadingCache
#define INCLUDE_ALL_ComGoogleCommonCacheForwardingLoadingCache 0
#else
#define INCLUDE_ALL_ComGoogleCommonCacheForwardingLoadingCache 1
#endif
#undef RESTRICT_ComGoogleCommonCacheForwardingLoadingCache
#ifdef INCLUDE_ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache
#define INCLUDE_ComGoogleCommonCacheForwardingLoadingCache 1
#endif

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCacheForwardingLoadingCache_) && (INCLUDE_ALL_ComGoogleCommonCacheForwardingLoadingCache || defined(INCLUDE_ComGoogleCommonCacheForwardingLoadingCache))
#define ComGoogleCommonCacheForwardingLoadingCache_

#define RESTRICT_ComGoogleCommonCacheForwardingCache 1
#define INCLUDE_ComGoogleCommonCacheForwardingCache 1
#include "com/google/common/cache/ForwardingCache.h"

#define RESTRICT_ComGoogleCommonCacheLoadingCache 1
#define INCLUDE_ComGoogleCommonCacheLoadingCache 1
#include "com/google/common/cache/LoadingCache.h"

@class ComGoogleCommonCollectImmutableMap;
@protocol JavaLangIterable;

/*!
 @brief A cache which forwards all its method calls to another cache.Subclasses should override one or
  more methods to modify the behavior of the backing cache as desired per the <a href="http://en.wikipedia.org/wiki/Decorator_pattern">
 decorator pattern</a>.
 <p>Note that <code>get</code>, <code>getUnchecked</code>, and <code>apply</code> all expose the same
  underlying functionality, so should probably be overridden as a group.
 @author Charles Fry
 @since 11.0
 */
@interface ComGoogleCommonCacheForwardingLoadingCache : ComGoogleCommonCacheForwardingCache < ComGoogleCommonCacheLoadingCache >

#pragma mark Public

- (id)applyWithId:(id __nonnull)key;

- (id)getWithId:(id __nonnull)key;

- (ComGoogleCommonCollectImmutableMap *)getAllWithJavaLangIterable:(id<JavaLangIterable> __nonnull)keys;

- (id)getUncheckedWithId:(id __nonnull)key;

- (void)refreshWithId:(id __nonnull)key;

#pragma mark Protected

/*!
 @brief Constructor for use by subclasses.
 */
- (instancetype __nonnull)init;

- (id<ComGoogleCommonCacheLoadingCache>)delegate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheForwardingLoadingCache)

FOUNDATION_EXPORT void ComGoogleCommonCacheForwardingLoadingCache_init(ComGoogleCommonCacheForwardingLoadingCache *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheForwardingLoadingCache)

#endif

#if !defined (ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache_) && (INCLUDE_ALL_ComGoogleCommonCacheForwardingLoadingCache || defined(INCLUDE_ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache))
#define ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache_

@protocol ComGoogleCommonCacheLoadingCache;

/*!
 @brief A simplified version of <code>ForwardingLoadingCache</code> where subclasses can pass in an already
  constructed <code>LoadingCache</code> as the delegate.
 @since 10.0
 */
@interface ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache : ComGoogleCommonCacheForwardingLoadingCache

#pragma mark Protected

- (instancetype __nonnull)initWithComGoogleCommonCacheLoadingCache:(id<ComGoogleCommonCacheLoadingCache> __nonnull)delegate;

- (id<ComGoogleCommonCacheLoadingCache>)delegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache)

FOUNDATION_EXPORT void ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache_initWithComGoogleCommonCacheLoadingCache_(ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache *self, id<ComGoogleCommonCacheLoadingCache> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheForwardingLoadingCache_SimpleForwardingLoadingCache)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCacheForwardingLoadingCache")
