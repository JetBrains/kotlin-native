//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/package-info.java
//

/*!
 @brief This package contains generic collection interfaces and implementations, and other utilities for
  working with collections.It is a part of the open-source <a href="http://github.com/google/guava">
 Guava</a> library.
 <h2>Collection Types</h2>
  
 <dl>
    <dt><code>com.google.common.collect.BiMap</code>
    <dd>An extension of <code>java.util.Map</code> that guarantees the uniqueness of its values as well
        as that of its keys. This is sometimes called an "invertible map," since the restriction on
        values enables it to support an inverse
        view
  -- which is another instance of <code>BiMap</code>.
    <dt><code>com.google.common.collect.Multiset</code>
    <dd>An extension of <code>java.util.Collection</code> that may contain duplicate values like a
        <code>java.util.List</code>, yet has order-independent equality like a <code>java.util.Set</code>.
        One typical use for a multiset is to represent a histogram.   
 <dt><code>com.google.common.collect.Multimap</code>
    <dd>A new type, which is similar to <code>java.util.Map</code>, but may contain multiple entries
        with the same key. Some behaviors of <code>com.google.common.collect.Multimap</code> are left
        unspecified and are provided only by the subtypes mentioned below.   
 <dt><code>com.google.common.collect.ListMultimap</code>
    <dd>An extension of <code>com.google.common.collect.Multimap</code> which permits duplicate entries,
        supports random access of values for a particular key, and has <i>partially order-dependent
        equality</i> as defined by <code>com.google.common.collect.ListMultimap.equals(Object)</code>.
        <code>ListMultimap</code> takes its name from the fact that the collection of values
  associated with a given
        key fulfills the <code>java.util.List</code> contract.
    <dt><code>com.google.common.collect.SetMultimap</code>
    <dd>An extension of <code>com.google.common.collect.Multimap</code> which has order-independent
        equality and does not allow duplicate entries; that is, while a key may appear twice in a       
 <code>SetMultimap</code>, each must map to a different value. <code>SetMultimap</code> takes its name
        from the fact that the collection of
        values
  associated with a given key fulfills the <code>java.util.Set</code> contract.
    <dt><code>com.google.common.collect.SortedSetMultimap</code>
    <dd>An extension of <code>com.google.common.collect.SetMultimap</code> for which the collection values
  associated with a given
        key is a <code>java.util.SortedSet</code>.
    <dt><code>com.google.common.collect.Table</code>
    <dd>A new type, which is similar to <code>java.util.Map</code>, but which indexes its values by an
        ordered pair of keys, a row key and column key.   
 <dt><code>com.google.common.collect.ClassToInstanceMap</code>
    <dd>An extension of <code>java.util.Map</code> that associates a raw type with an instance of that
        type. 
 </dl>
  
 <h2>Collection Implementations</h2>
  
 <h3>of <code>java.util.List</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableList</code>
  </ul>
  
 <h3>of <code>java.util.Set</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableSet</code>
    <li><code>com.google.common.collect.ImmutableSortedSet</code>
    <li><code>com.google.common.collect.ContiguousSet</code> (see <code>Range</code>)
  </ul>
  
 <h3>of <code>java.util.Map</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableMap</code>
    <li><code>com.google.common.collect.ImmutableSortedMap</code>
    <li><code>com.google.common.collect.MapMaker</code>
  </ul>
  
 <h3>of <code>com.google.common.collect.BiMap</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableBiMap</code>
    <li><code>com.google.common.collect.HashBiMap</code>
    <li><code>com.google.common.collect.EnumBiMap</code>
    <li><code>com.google.common.collect.EnumHashBiMap</code>
  </ul>
  
 <h3>of <code>com.google.common.collect.Multiset</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableMultiset</code>
    <li><code>com.google.common.collect.HashMultiset</code>
    <li><code>com.google.common.collect.LinkedHashMultiset</code>
    <li><code>com.google.common.collect.TreeMultiset</code>
    <li><code>com.google.common.collect.EnumMultiset</code>
    <li><code>com.google.common.collect.ConcurrentHashMultiset</code>
  </ul>
  
 <h3>of <code>com.google.common.collect.Multimap</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableMultimap</code>
    <li><code>com.google.common.collect.ImmutableListMultimap</code>
    <li><code>com.google.common.collect.ImmutableSetMultimap</code>
    <li><code>com.google.common.collect.ArrayListMultimap</code>
    <li><code>com.google.common.collect.HashMultimap</code>
    <li><code>com.google.common.collect.TreeMultimap</code>
    <li><code>com.google.common.collect.LinkedHashMultimap</code>
    <li><code>com.google.common.collect.LinkedListMultimap</code>
  </ul>
  
 <h3>of <code>com.google.common.collect.Table</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableTable</code>
    <li><code>com.google.common.collect.ArrayTable</code>
    <li><code>com.google.common.collect.HashBasedTable</code>
    <li><code>com.google.common.collect.TreeBasedTable</code>
  </ul>
  
 <h3>of <code>com.google.common.collect.ClassToInstanceMap</code></h3>
  
 <ul>
    <li><code>com.google.common.collect.ImmutableClassToInstanceMap</code>
    <li><code>com.google.common.collect.MutableClassToInstanceMap</code>
  </ul>
  
 <h2>Classes of static utility methods</h2>
  
 <ul>
    <li><code>com.google.common.collect.Collections2</code>
    <li><code>com.google.common.collect.Iterators</code>
    <li><code>com.google.common.collect.Iterables</code>
    <li><code>com.google.common.collect.Lists</code>
    <li><code>com.google.common.collect.Maps</code>
    <li><code>com.google.common.collect.Queues</code>
    <li><code>com.google.common.collect.Sets</code>
    <li><code>com.google.common.collect.Multisets</code>
    <li><code>com.google.common.collect.Multimaps</code>
    <li><code>com.google.common.collect.Tables</code>
    <li><code>com.google.common.collect.ObjectArrays</code>
  </ul>
  
 <h2>Comparison</h2>
  
 <ul>
    <li><code>com.google.common.collect.Ordering</code>
    <li><code>com.google.common.collect.ComparisonChain</code>
  </ul>
  
 <h2>Abstract implementations</h2>
  
 <ul>
    <li><code>com.google.common.collect.AbstractIterator</code>
    <li><code>com.google.common.collect.AbstractSequentialIterator</code>
    <li><code>com.google.common.collect.ImmutableCollection</code>
    <li><code>com.google.common.collect.UnmodifiableIterator</code>
    <li><code>com.google.common.collect.UnmodifiableListIterator</code>
  </ul>
  
 <h2>Ranges</h2>
  
 <ul>
    <li><code>com.google.common.collect.Range</code>
    <li><code>com.google.common.collect.RangeMap</code>
    <li><code>com.google.common.collect.DiscreteDomain</code>
    <li><code>com.google.common.collect.ContiguousSet</code>
  </ul>
  
 <h2>Other</h2>
  
 <ul>
    <li><code>com.google.common.collect.Interner</code>, <code>com.google.common.collect.Interners</code>
    <li><code>com.google.common.collect.MapDifference</code>, <code>com.google.common.collect.SortedMapDifference</code>
    <li><code>com.google.common.collect.MinMaxPriorityQueue</code>
    <li><code>com.google.common.collect.PeekingIterator</code>
  </ul>
  
 <h2>Forwarding collections</h2>
  
 <ul>
    <li><code>com.google.common.collect.ForwardingCollection</code>
    <li><code>com.google.common.collect.ForwardingConcurrentMap</code>
    <li><code>com.google.common.collect.ForwardingIterator</code>
    <li><code>com.google.common.collect.ForwardingList</code>
    <li><code>com.google.common.collect.ForwardingListIterator</code>
    <li><code>com.google.common.collect.ForwardingListMultimap</code>
    <li><code>com.google.common.collect.ForwardingMap</code>
    <li><code>com.google.common.collect.ForwardingMapEntry</code>
    <li><code>com.google.common.collect.ForwardingMultimap</code>
    <li><code>com.google.common.collect.ForwardingMultiset</code>
    <li><code>com.google.common.collect.ForwardingNavigableMap</code>
    <li><code>com.google.common.collect.ForwardingNavigableSet</code>
    <li><code>com.google.common.collect.ForwardingObject</code>
    <li><code>com.google.common.collect.ForwardingQueue</code>
    <li><code>com.google.common.collect.ForwardingSet</code>
    <li><code>com.google.common.collect.ForwardingSetMultimap</code>
    <li><code>com.google.common.collect.ForwardingSortedMap</code>
    <li><code>com.google.common.collect.ForwardingSortedMultiset</code>
    <li><code>com.google.common.collect.ForwardingSortedSet</code>
    <li><code>com.google.common.collect.ForwardingSortedSetMultimap</code>
    <li><code>com.google.common.collect.ForwardingTable</code>
  </ul>
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectPackage_info")
#ifdef RESTRICT_ComGoogleCommonCollectPackage_info
#define INCLUDE_ALL_ComGoogleCommonCollectPackage_info 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectPackage_info 1
#endif
#undef RESTRICT_ComGoogleCommonCollectPackage_info

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectPackage_info")
