//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/escape/ArrayBasedEscaperMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedEscaperMap")
#ifdef RESTRICT_ComGoogleCommonEscapeArrayBasedEscaperMap
#define INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedEscaperMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedEscaperMap 1
#endif
#undef RESTRICT_ComGoogleCommonEscapeArrayBasedEscaperMap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonEscapeArrayBasedEscaperMap_) && (INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedEscaperMap || defined(INCLUDE_ComGoogleCommonEscapeArrayBasedEscaperMap))
#define ComGoogleCommonEscapeArrayBasedEscaperMap_

@class IOSObjectArray;
@protocol JavaUtilMap;

/*!
 @brief An implementation-specific parameter class suitable for initializing <code>ArrayBasedCharEscaper</code>
  or <code>ArrayBasedUnicodeEscaper</code> instances.This class should be used
  when more than one escaper is created using the same character replacement mapping to allow the
  underlying (implementation specific) data structures to be shared.
 <p>The size of the data structure used by ArrayBasedCharEscaper and ArrayBasedUnicodeEscaper is
  proportional to the highest valued character that has a replacement. For example a replacement
  map containing the single character '\u1000' will require approximately 16K of memory.
  As such sharing this data structure between escaper instances is the primary goal of this class.
 @author David Beaumont
 @since 15.0
 */
@interface ComGoogleCommonEscapeArrayBasedEscaperMap : NSObject

#pragma mark Public

/*!
 @brief Returns a new ArrayBasedEscaperMap for creating ArrayBasedCharEscaper or
  ArrayBasedUnicodeEscaper instances.
 @param replacements a map of characters to their escaped representations
 */
+ (ComGoogleCommonEscapeArrayBasedEscaperMap *)createWithJavaUtilMap:(id<JavaUtilMap> __nonnull)replacements;

#pragma mark Package-Private

+ (IOSObjectArray *)createReplacementArrayWithJavaUtilMap:(id<JavaUtilMap> __nonnull)map;

- (IOSObjectArray *)getReplacementArray;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonEscapeArrayBasedEscaperMap)

FOUNDATION_EXPORT ComGoogleCommonEscapeArrayBasedEscaperMap *ComGoogleCommonEscapeArrayBasedEscaperMap_createWithJavaUtilMap_(id<JavaUtilMap> replacements);

FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonEscapeArrayBasedEscaperMap_createReplacementArrayWithJavaUtilMap_(id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonEscapeArrayBasedEscaperMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonEscapeArrayBasedEscaperMap")
