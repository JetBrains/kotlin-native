//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/cache/ForwardingCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCacheForwardingCache")
#ifdef RESTRICT_ComGoogleCommonCacheForwardingCache
#define INCLUDE_ALL_ComGoogleCommonCacheForwardingCache 0
#else
#define INCLUDE_ALL_ComGoogleCommonCacheForwardingCache 1
#endif
#undef RESTRICT_ComGoogleCommonCacheForwardingCache
#ifdef INCLUDE_ComGoogleCommonCacheForwardingCache_SimpleForwardingCache
#define INCLUDE_ComGoogleCommonCacheForwardingCache 1
#endif

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCacheForwardingCache_) && (INCLUDE_ALL_ComGoogleCommonCacheForwardingCache || defined(INCLUDE_ComGoogleCommonCacheForwardingCache))
#define ComGoogleCommonCacheForwardingCache_

#define RESTRICT_ComGoogleCommonCollectForwardingObject 1
#define INCLUDE_ComGoogleCommonCollectForwardingObject 1
#include "com/google/common/collect/ForwardingObject.h"

#define RESTRICT_ComGoogleCommonCacheCache 1
#define INCLUDE_ComGoogleCommonCacheCache 1
#include "com/google/common/cache/Cache.h"

@class ComGoogleCommonCacheCacheStats;
@class ComGoogleCommonCollectImmutableMap;
@protocol JavaLangIterable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentConcurrentMap;
@protocol JavaUtilMap;

/*!
 @brief A cache which forwards all its method calls to another cache.Subclasses should override one or
  more methods to modify the behavior of the backing cache as desired per the <a href="http://en.wikipedia.org/wiki/Decorator_pattern">
 decorator pattern</a>.
 @author Charles Fry
 @since 10.0
 */
@interface ComGoogleCommonCacheForwardingCache : ComGoogleCommonCollectForwardingObject < ComGoogleCommonCacheCache >

#pragma mark Public

- (id<JavaUtilConcurrentConcurrentMap>)asMap;

- (void)cleanUp;

/*!
 @since 11.0
 */
- (id)getWithId:(id __nonnull)key
withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable> __nonnull)valueLoader;

/*!
 @since 11.0
 */
- (ComGoogleCommonCollectImmutableMap *)getAllPresentWithJavaLangIterable:(id<JavaLangIterable> __nonnull)keys;

/*!
 @since 11.0
 */
- (id __nullable)getIfPresentWithId:(id __nonnull)key;

- (void)invalidateWithId:(id __nonnull)key;

- (void)invalidateAll;

/*!
 @since 11.0
 */
- (void)invalidateAllWithJavaLangIterable:(id<JavaLangIterable> __nonnull)keys;

/*!
 @since 11.0
 */
- (void)putWithId:(id __nonnull)key
           withId:(id __nonnull)value;

/*!
 @since 12.0
 */
- (void)putAllWithJavaUtilMap:(id<JavaUtilMap> __nonnull)m;

- (jlong)size;

- (ComGoogleCommonCacheCacheStats *)stats;

#pragma mark Protected

/*!
 @brief Constructor for use by subclasses.
 */
- (instancetype __nonnull)init;

- (id<ComGoogleCommonCacheCache>)delegate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheForwardingCache)

FOUNDATION_EXPORT void ComGoogleCommonCacheForwardingCache_init(ComGoogleCommonCacheForwardingCache *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheForwardingCache)

#endif

#if !defined (ComGoogleCommonCacheForwardingCache_SimpleForwardingCache_) && (INCLUDE_ALL_ComGoogleCommonCacheForwardingCache || defined(INCLUDE_ComGoogleCommonCacheForwardingCache_SimpleForwardingCache))
#define ComGoogleCommonCacheForwardingCache_SimpleForwardingCache_

@protocol ComGoogleCommonCacheCache;

/*!
 @brief A simplified version of <code>ForwardingCache</code> where subclasses can pass in an already
  constructed <code>Cache</code> as the delegate.
 @since 10.0
 */
@interface ComGoogleCommonCacheForwardingCache_SimpleForwardingCache : ComGoogleCommonCacheForwardingCache

#pragma mark Protected

- (instancetype __nonnull)initWithComGoogleCommonCacheCache:(id<ComGoogleCommonCacheCache> __nonnull)delegate;

- (id<ComGoogleCommonCacheCache>)delegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheForwardingCache_SimpleForwardingCache)

FOUNDATION_EXPORT void ComGoogleCommonCacheForwardingCache_SimpleForwardingCache_initWithComGoogleCommonCacheCache_(ComGoogleCommonCacheForwardingCache_SimpleForwardingCache *self, id<ComGoogleCommonCacheCache> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheForwardingCache_SimpleForwardingCache)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCacheForwardingCache")
