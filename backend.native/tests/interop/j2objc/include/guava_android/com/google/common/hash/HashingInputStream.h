//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/hash/HashingInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonHashHashingInputStream")
#ifdef RESTRICT_ComGoogleCommonHashHashingInputStream
#define INCLUDE_ALL_ComGoogleCommonHashHashingInputStream 0
#else
#define INCLUDE_ALL_ComGoogleCommonHashHashingInputStream 1
#endif
#undef RESTRICT_ComGoogleCommonHashHashingInputStream

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonHashHashingInputStream_) && (INCLUDE_ALL_ComGoogleCommonHashHashingInputStream || defined(INCLUDE_ComGoogleCommonHashHashingInputStream))
#define ComGoogleCommonHashHashingInputStream_

#define RESTRICT_JavaIoFilterInputStream 1
#define INCLUDE_JavaIoFilterInputStream 1
#include "java/io/FilterInputStream.h"

@class ComGoogleCommonHashHashCode;
@class IOSByteArray;
@class JavaIoInputStream;
@protocol ComGoogleCommonHashHashFunction;

/*!
 @brief An <code>InputStream</code> that maintains a hash of the data read from it.
 @author Qian Huang
 @since 16.0
 */
@interface ComGoogleCommonHashHashingInputStream : JavaIoFilterInputStream

#pragma mark Public

/*!
 @brief Creates an input stream that hashes using the given <code>HashFunction</code> and delegates all data
  read from it to the underlying <code>InputStream</code>.
 <p>The <code>InputStream</code> should not be read from before or after the hand-off.
 */
- (instancetype __nonnull)initWithComGoogleCommonHashHashFunction:(id<ComGoogleCommonHashHashFunction> __nonnull)hashFunction
                                            withJavaIoInputStream:(JavaIoInputStream * __nonnull)inArg;

/*!
 @brief Returns the <code>HashCode</code> based on the data read from this stream.The result is unspecified
  if this method is called more than once on the same instance.
 */
- (ComGoogleCommonHashHashCode *)hash__;

/*!
 @brief mark() is not supported for HashingInputStream
 */
- (void)markWithInt:(jint)readlimit;

/*!
 @brief mark() is not supported for HashingInputStream
 @return <code>false</code> always
 */
- (jboolean)markSupported;

/*!
 @brief Reads the next byte of data from the underlying input stream and updates the hasher with the
  byte read.
 */
- (jint)read;

/*!
 @brief Reads the specified bytes of data from the underlying input stream and updates the hasher with
  the bytes read.
 */
- (jint)readWithByteArray:(IOSByteArray * __nonnull)bytes
                  withInt:(jint)off
                  withInt:(jint)len;

/*!
 @brief reset() is not supported for HashingInputStream.
 @throw IOExceptionthis operation is not supported
 */
- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream * __nonnull)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashHashingInputStream)

FOUNDATION_EXPORT void ComGoogleCommonHashHashingInputStream_initWithComGoogleCommonHashHashFunction_withJavaIoInputStream_(ComGoogleCommonHashHashingInputStream *self, id<ComGoogleCommonHashHashFunction> hashFunction, JavaIoInputStream *inArg);

FOUNDATION_EXPORT ComGoogleCommonHashHashingInputStream *new_ComGoogleCommonHashHashingInputStream_initWithComGoogleCommonHashHashFunction_withJavaIoInputStream_(id<ComGoogleCommonHashHashFunction> hashFunction, JavaIoInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonHashHashingInputStream *create_ComGoogleCommonHashHashingInputStream_initWithComGoogleCommonHashHashFunction_withJavaIoInputStream_(id<ComGoogleCommonHashHashFunction> hashFunction, JavaIoInputStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashHashingInputStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonHashHashingInputStream")
