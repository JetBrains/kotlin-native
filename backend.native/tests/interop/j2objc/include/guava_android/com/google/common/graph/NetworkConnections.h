//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/graph/NetworkConnections.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphNetworkConnections")
#ifdef RESTRICT_ComGoogleCommonGraphNetworkConnections
#define INCLUDE_ALL_ComGoogleCommonGraphNetworkConnections 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphNetworkConnections 1
#endif
#undef RESTRICT_ComGoogleCommonGraphNetworkConnections

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphNetworkConnections_) && (INCLUDE_ALL_ComGoogleCommonGraphNetworkConnections || defined(INCLUDE_ComGoogleCommonGraphNetworkConnections))
#define ComGoogleCommonGraphNetworkConnections_

@protocol JavaUtilSet;

/*!
 @brief An interface for representing and manipulating an origin node's adjacent nodes and incident edges
  in a <code>Network</code>.
 @author James Sexton
 */
@protocol ComGoogleCommonGraphNetworkConnections < JavaObject >

- (id<JavaUtilSet>)adjacentNodes;

- (id<JavaUtilSet>)predecessors;

- (id<JavaUtilSet>)successors;

- (id<JavaUtilSet>)incidentEdges;

- (id<JavaUtilSet>)inEdges;

- (id<JavaUtilSet>)outEdges;

/*!
 @brief Returns the set of edges connecting the origin node to <code>node</code>.For networks without
  parallel edges, this set cannot be of size greater than one.
 */
- (id<JavaUtilSet>)edgesConnectingWithId:(id __nonnull)node;

/*!
 @brief Returns the node that is adjacent to the origin node along <code>edge</code>.
 <p>In the directed case, <code>edge</code> is assumed to be an outgoing edge.
 */
- (id)adjacentNodeWithId:(id __nonnull)edge;

/*!
 @brief Remove <code>edge</code> from the set of incoming edges.Returns the former predecessor node.
 <p>In the undirected case, returns <code>null</code> if <code>isSelfLoop</code> is true.
 */
- (id)removeInEdgeWithId:(id __nonnull)edge
             withBoolean:(jboolean)isSelfLoop;

/*!
 @brief Remove <code>edge</code> from the set of outgoing edges.Returns the former successor node.
 */
- (id)removeOutEdgeWithId:(id __nonnull)edge;

/*!
 @brief Add <code>edge</code> to the set of incoming edges.Implicitly adds <code>node</code> as a predecessor.
 */
- (void)addInEdgeWithId:(id __nonnull)edge
                 withId:(id __nonnull)node
            withBoolean:(jboolean)isSelfLoop;

/*!
 @brief Add <code>edge</code> to the set of outgoing edges.Implicitly adds <code>node</code> as a successor.
 */
- (void)addOutEdgeWithId:(id __nonnull)edge
                  withId:(id __nonnull)node;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphNetworkConnections)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphNetworkConnections)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphNetworkConnections")
