//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/RegularImmutableMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap")
#ifdef RESTRICT_ComGoogleCommonCollectRegularImmutableMap
#define INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectRegularImmutableMap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectRegularImmutableMap_) && (INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap || defined(INCLUDE_ComGoogleCommonCollectRegularImmutableMap))
#define ComGoogleCommonCollectRegularImmutableMap_

#define RESTRICT_ComGoogleCommonCollectImmutableMap 1
#define INCLUDE_ComGoogleCommonCollectImmutableMap 1
#include "com/google/common/collect/ImmutableMap.h"

@class ComGoogleCommonCollectImmutableCollection;
@class ComGoogleCommonCollectImmutableSet;
@class IOSIntArray;
@class IOSObjectArray;

/*!
 @brief A hash-based implementation of <code>ImmutableMap</code>.
 @author Louis Wasserman
 */
@interface ComGoogleCommonCollectRegularImmutableMap : ComGoogleCommonCollectImmutableMap {
 @public
  IOSObjectArray *alternatingKeysAndValues_;
}
@property (readonly, class, strong) ComGoogleCommonCollectImmutableMap *EMPTY NS_SWIFT_NAME(EMPTY);

+ (ComGoogleCommonCollectImmutableMap *)EMPTY;

#pragma mark Public

- (id __nullable)getWithId:(id __nullable)key;

- (jint)size;

#pragma mark Package-Private

+ (ComGoogleCommonCollectRegularImmutableMap *)createWithInt:(jint)n
                                           withNSObjectArray:(IOSObjectArray * __nonnull)alternatingKeysAndValues;

- (ComGoogleCommonCollectImmutableSet *)createEntrySet;

/*!
 @brief Returns a hash table for the specified keys and values, and ensures that neither keys nor
  values are null.
 */
+ (IOSIntArray *)createHashTableWithNSObjectArray:(IOSObjectArray * __nonnull)alternatingKeysAndValues
                                          withInt:(jint)n
                                          withInt:(jint)tableSize
                                          withInt:(jint)keyOffset;

- (ComGoogleCommonCollectImmutableSet *)createKeySet;

- (ComGoogleCommonCollectImmutableCollection *)createValues;

+ (id)getWithIntArray:(IOSIntArray * __nullable)hashTable
    withNSObjectArray:(IOSObjectArray * __nullable)alternatingKeysAndValues
              withInt:(jint)size
              withInt:(jint)keyOffset
               withId:(id __nullable)key;

- (jboolean)isPartialView;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonCollectRegularImmutableMap)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectRegularImmutableMap, alternatingKeysAndValues_, IOSObjectArray *)

inline ComGoogleCommonCollectImmutableMap *ComGoogleCommonCollectRegularImmutableMap_get_EMPTY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComGoogleCommonCollectImmutableMap *ComGoogleCommonCollectRegularImmutableMap_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonCollectRegularImmutableMap, EMPTY, ComGoogleCommonCollectImmutableMap *)

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableMap *ComGoogleCommonCollectRegularImmutableMap_createWithInt_withNSObjectArray_(jint n, IOSObjectArray *alternatingKeysAndValues);

FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonCollectRegularImmutableMap_createHashTableWithNSObjectArray_withInt_withInt_withInt_(IOSObjectArray *alternatingKeysAndValues, jint n, jint tableSize, jint keyOffset);

FOUNDATION_EXPORT id ComGoogleCommonCollectRegularImmutableMap_getWithIntArray_withNSObjectArray_withInt_withInt_withId_(IOSIntArray *hashTable, IOSObjectArray *alternatingKeysAndValues, jint size, jint keyOffset, id key);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableMap)

#endif

#if !defined (ComGoogleCommonCollectRegularImmutableMap_EntrySet_) && (INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap || defined(INCLUDE_ComGoogleCommonCollectRegularImmutableMap_EntrySet))
#define ComGoogleCommonCollectRegularImmutableMap_EntrySet_

#define RESTRICT_ComGoogleCommonCollectImmutableSet 1
#define INCLUDE_ComGoogleCommonCollectImmutableSet 1
#include "com/google/common/collect/ImmutableSet.h"

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonCollectImmutableMap;
@class ComGoogleCommonCollectUnmodifiableIterator;
@class IOSObjectArray;

@interface ComGoogleCommonCollectRegularImmutableMap_EntrySet : ComGoogleCommonCollectImmutableSet

#pragma mark Public

- (jboolean)containsWithId:(id __nonnull)object;

- (ComGoogleCommonCollectUnmodifiableIterator *)iterator;

- (jint)size;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectImmutableMap:(ComGoogleCommonCollectImmutableMap * __nonnull)map
                                                   withNSObjectArray:(IOSObjectArray * __nonnull)alternatingKeysAndValues
                                                             withInt:(jint)keyOffset
                                                             withInt:(jint)size;

- (jint)copyIntoArrayWithNSObjectArray:(IOSObjectArray * __nonnull)dst
                               withInt:(jint)offset OBJC_METHOD_FAMILY_NONE;

- (ComGoogleCommonCollectImmutableList *)createAsList;

- (jboolean)isPartialView;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectRegularImmutableMap_EntrySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectRegularImmutableMap_EntrySet_initWithComGoogleCommonCollectImmutableMap_withNSObjectArray_withInt_withInt_(ComGoogleCommonCollectRegularImmutableMap_EntrySet *self, ComGoogleCommonCollectImmutableMap *map, IOSObjectArray *alternatingKeysAndValues, jint keyOffset, jint size);

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableMap_EntrySet *new_ComGoogleCommonCollectRegularImmutableMap_EntrySet_initWithComGoogleCommonCollectImmutableMap_withNSObjectArray_withInt_withInt_(ComGoogleCommonCollectImmutableMap *map, IOSObjectArray *alternatingKeysAndValues, jint keyOffset, jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableMap_EntrySet *create_ComGoogleCommonCollectRegularImmutableMap_EntrySet_initWithComGoogleCommonCollectImmutableMap_withNSObjectArray_withInt_withInt_(ComGoogleCommonCollectImmutableMap *map, IOSObjectArray *alternatingKeysAndValues, jint keyOffset, jint size);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableMap_EntrySet)

#endif

#if !defined (ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList_) && (INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap || defined(INCLUDE_ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList))
#define ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList_

#define RESTRICT_ComGoogleCommonCollectImmutableList 1
#define INCLUDE_ComGoogleCommonCollectImmutableList 1
#include "com/google/common/collect/ImmutableList.h"

@class IOSObjectArray;

@interface ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList : ComGoogleCommonCollectImmutableList

#pragma mark Public

- (id)getWithInt:(jint)index;

- (jint)size;

#pragma mark Package-Private

- (instancetype __nonnull)initWithNSObjectArray:(IOSObjectArray * __nonnull)alternatingKeysAndValues
                                        withInt:(jint)offset
                                        withInt:(jint)size;

- (jboolean)isPartialView;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList)

FOUNDATION_EXPORT void ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList_initWithNSObjectArray_withInt_withInt_(ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList *self, IOSObjectArray *alternatingKeysAndValues, jint offset, jint size);

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList *new_ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList_initWithNSObjectArray_withInt_withInt_(IOSObjectArray *alternatingKeysAndValues, jint offset, jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList *create_ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList_initWithNSObjectArray_withInt_withInt_(IOSObjectArray *alternatingKeysAndValues, jint offset, jint size);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableMap_KeysOrValuesAsList)

#endif

#if !defined (ComGoogleCommonCollectRegularImmutableMap_KeySet_) && (INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap || defined(INCLUDE_ComGoogleCommonCollectRegularImmutableMap_KeySet))
#define ComGoogleCommonCollectRegularImmutableMap_KeySet_

#define RESTRICT_ComGoogleCommonCollectImmutableSet 1
#define INCLUDE_ComGoogleCommonCollectImmutableSet 1
#include "com/google/common/collect/ImmutableSet.h"

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonCollectImmutableMap;
@class ComGoogleCommonCollectUnmodifiableIterator;
@class IOSObjectArray;

@interface ComGoogleCommonCollectRegularImmutableMap_KeySet : ComGoogleCommonCollectImmutableSet

#pragma mark Public

- (ComGoogleCommonCollectImmutableList *)asList;

- (jboolean)containsWithId:(id __nullable)object;

- (ComGoogleCommonCollectUnmodifiableIterator *)iterator;

- (jint)size;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectImmutableMap:(ComGoogleCommonCollectImmutableMap * __nonnull)map
                             withComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList * __nonnull)list;

- (jint)copyIntoArrayWithNSObjectArray:(IOSObjectArray * __nonnull)dst
                               withInt:(jint)offset OBJC_METHOD_FAMILY_NONE;

- (jboolean)isPartialView;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectRegularImmutableMap_KeySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectRegularImmutableMap_KeySet_initWithComGoogleCommonCollectImmutableMap_withComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectRegularImmutableMap_KeySet *self, ComGoogleCommonCollectImmutableMap *map, ComGoogleCommonCollectImmutableList *list);

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableMap_KeySet *new_ComGoogleCommonCollectRegularImmutableMap_KeySet_initWithComGoogleCommonCollectImmutableMap_withComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectImmutableMap *map, ComGoogleCommonCollectImmutableList *list) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectRegularImmutableMap_KeySet *create_ComGoogleCommonCollectRegularImmutableMap_KeySet_initWithComGoogleCommonCollectImmutableMap_withComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectImmutableMap *map, ComGoogleCommonCollectImmutableList *list);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectRegularImmutableMap_KeySet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectRegularImmutableMap")
