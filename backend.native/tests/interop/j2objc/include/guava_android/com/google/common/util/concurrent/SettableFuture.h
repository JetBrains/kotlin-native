//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/util/concurrent/SettableFuture.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentSettableFuture")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentSettableFuture
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentSettableFuture 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentSettableFuture 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentSettableFuture

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentSettableFuture_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentSettableFuture || defined(INCLUDE_ComGoogleCommonUtilConcurrentSettableFuture))
#define ComGoogleCommonUtilConcurrentSettableFuture_

#define RESTRICT_ComGoogleCommonUtilConcurrentAbstractFuture 1
#define INCLUDE_ComGoogleCommonUtilConcurrentAbstractFuture_TrustedFuture 1
#include "com/google/common/util/concurrent/AbstractFuture.h"

@class JavaLangThrowable;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

/*!
 @brief A <code>ListenableFuture</code> whose result can be set by a <code>set(Object)</code>, <code>setException(Throwable)</code>
  or <code>setFuture(ListenableFuture)</code> call.It can also, like any
  other <code>Future</code>, be cancelled.
 <p><code>SettableFuture</code> is the recommended <code>ListenableFuture</code> implementation when your
  task cannot be implemented with <code>ListeningExecutorService</code>, the various <code>Futures</code>
  utility methods, or <code>ListenableFutureTask</code>. Those APIs have less opportunity for developer
  error. If your needs are more complex than <code>SettableFuture</code> supports, use <code>AbstractFuture</code>
 , which offers an extensible version of the API.
 @author Sven Mawson
 @since 9.0 (in 1.0 as <code>ValueFuture</code>)
 */
@interface ComGoogleCommonUtilConcurrentSettableFuture : ComGoogleCommonUtilConcurrentAbstractFuture_TrustedFuture

#pragma mark Public

/*!
 @brief Creates a new <code>SettableFuture</code> that can be completed or cancelled by a later method call.
 */
+ (ComGoogleCommonUtilConcurrentSettableFuture *)create;

- (jboolean)setWithId:(id __nullable)value;

- (jboolean)setExceptionWithJavaLangThrowable:(JavaLangThrowable * __nonnull)throwable;

- (jboolean)setFutureWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture> __nonnull)future;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentSettableFuture)

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentSettableFuture *ComGoogleCommonUtilConcurrentSettableFuture_create(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentSettableFuture)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentSettableFuture")
