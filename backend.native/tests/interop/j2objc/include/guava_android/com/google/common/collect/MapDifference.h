//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/collect/MapDifference.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectMapDifference")
#ifdef RESTRICT_ComGoogleCommonCollectMapDifference
#define INCLUDE_ALL_ComGoogleCommonCollectMapDifference 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectMapDifference 1
#endif
#undef RESTRICT_ComGoogleCommonCollectMapDifference

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectMapDifference_) && (INCLUDE_ALL_ComGoogleCommonCollectMapDifference || defined(INCLUDE_ComGoogleCommonCollectMapDifference))
#define ComGoogleCommonCollectMapDifference_

@protocol JavaUtilMap;

/*!
 @brief An object representing the differences between two maps.
 @author Kevin Bourrillion
 @since 2.0
 */
@protocol ComGoogleCommonCollectMapDifference < JavaObject >

/*!
 @brief Returns <code>true</code> if there are no differences between the two maps; that is, if the maps are
  equal.
 */
- (jboolean)areEqual;

/*!
 @brief Returns an unmodifiable map containing the entries from the left map whose keys are not present
  in the right map.
 */
- (id<JavaUtilMap>)entriesOnlyOnLeft;

/*!
 @brief Returns an unmodifiable map containing the entries from the right map whose keys are not
  present in the left map.
 */
- (id<JavaUtilMap>)entriesOnlyOnRight;

/*!
 @brief Returns an unmodifiable map containing the entries that appear in both maps; that is, the
  intersection of the two maps.
 */
- (id<JavaUtilMap>)entriesInCommon;

/*!
 @brief Returns an unmodifiable map describing keys that appear in both maps, but with different
  values.
 */
- (id<JavaUtilMap>)entriesDiffering;

/*!
 @brief Compares the specified object with this instance for equality.Returns <code>true</code> if the
  given object is also a <code>MapDifference</code> and the values returned by the <code>entriesOnlyOnLeft()</code>
 , <code>entriesOnlyOnRight()</code>, <code>entriesInCommon()</code> and <code>entriesDiffering()</code>
  of the two instances are equal.
 */
- (jboolean)isEqual:(id __nullable)object;

/*!
 @brief Returns the hash code for this instance.This is defined as the hash code of 
 @code
 Arrays.asList(entriesOnlyOnLeft(), entriesOnlyOnRight(),
      entriesInCommon(), entriesDiffering()) 
 
@endcode
 */
- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectMapDifference)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectMapDifference)

#endif

#if !defined (ComGoogleCommonCollectMapDifference_ValueDifference_) && (INCLUDE_ALL_ComGoogleCommonCollectMapDifference || defined(INCLUDE_ComGoogleCommonCollectMapDifference_ValueDifference))
#define ComGoogleCommonCollectMapDifference_ValueDifference_

/*!
 @brief A difference between the mappings from two maps with the same key.The <code>leftValue</code> and 
 <code>rightValue</code> are not equal, and one but not both of them may be null.
 @since 2.0
 */
@protocol ComGoogleCommonCollectMapDifference_ValueDifference < JavaObject >

/*!
 @brief Returns the value from the left map (possibly null).
 */
- (id)leftValue;

/*!
 @brief Returns the value from the right map (possibly null).
 */
- (id)rightValue;

/*!
 @brief Two instances are considered equal if their <code>leftValue()</code> values are equal and their 
 <code>rightValue()</code> values are also equal.
 */
- (jboolean)isEqual:(id __nullable)other;

/*!
 @brief The hash code equals the value <code>Arrays.asList(leftValue(), rightValue()).hashCode()</code>.
 */
- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectMapDifference_ValueDifference)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectMapDifference_ValueDifference)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectMapDifference")
