//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/com/google/common/io/LittleEndianDataOutputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonIoLittleEndianDataOutputStream")
#ifdef RESTRICT_ComGoogleCommonIoLittleEndianDataOutputStream
#define INCLUDE_ALL_ComGoogleCommonIoLittleEndianDataOutputStream 0
#else
#define INCLUDE_ALL_ComGoogleCommonIoLittleEndianDataOutputStream 1
#endif
#undef RESTRICT_ComGoogleCommonIoLittleEndianDataOutputStream

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonIoLittleEndianDataOutputStream_) && (INCLUDE_ALL_ComGoogleCommonIoLittleEndianDataOutputStream || defined(INCLUDE_ComGoogleCommonIoLittleEndianDataOutputStream))
#define ComGoogleCommonIoLittleEndianDataOutputStream_

#define RESTRICT_JavaIoFilterOutputStream 1
#define INCLUDE_JavaIoFilterOutputStream 1
#include "java/io/FilterOutputStream.h"

#define RESTRICT_JavaIoDataOutput 1
#define INCLUDE_JavaIoDataOutput 1
#include "java/io/DataOutput.h"

@class IOSByteArray;
@class JavaIoOutputStream;

/*!
 @brief An implementation of <code>DataOutput</code> that uses little-endian byte ordering for writing <code>char</code>
 , <code>short</code>, <code>int</code>, <code>float</code>, <code>double</code>, and <code>long</code> values.
 <p><b>Note:</b> This class intentionally violates the specification of its supertype <code>DataOutput</code>
 , which explicitly requires big-endian byte order.
 @author Chris Nokleberg
 @author Keith Bottner
 @since 8.0
 */
@interface ComGoogleCommonIoLittleEndianDataOutputStream : JavaIoFilterOutputStream < JavaIoDataOutput >

#pragma mark Public

/*!
 @brief Creates a <code>LittleEndianDataOutputStream</code> that wraps the given stream.
 @param outArg the stream to delegate to
 */
- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream * __nonnull)outArg;

- (void)close;

- (void)writeWithByteArray:(IOSByteArray * __nonnull)b
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeBooleanWithBoolean:(jboolean)v;

- (void)writeByteWithInt:(jint)v;

/*!
 */
- (void)writeBytesWithNSString:(NSString * __nonnull)s __attribute__((deprecated));

/*!
 @brief Writes a char as specified by <code>DataOutputStream.writeChar(int)</code>, except using
  little-endian byte order.
 @throw IOExceptionif an I/O error occurs
 */
- (void)writeCharWithInt:(jint)v;

/*!
 @brief Writes a <code>String</code> as specified by <code>DataOutputStream.writeChars(String)</code>, except
  each character is written using little-endian byte order.
 @throw IOExceptionif an I/O error occurs
 */
- (void)writeCharsWithNSString:(NSString * __nonnull)s;

/*!
 @brief Writes a <code>double</code> as specified by <code>DataOutputStream.writeDouble(double)</code>, except
  using little-endian byte order.
 @throw IOExceptionif an I/O error occurs
 */
- (void)writeDoubleWithDouble:(jdouble)v;

/*!
 @brief Writes a <code>float</code> as specified by <code>DataOutputStream.writeFloat(float)</code>, except using
  little-endian byte order.
 @throw IOExceptionif an I/O error occurs
 */
- (void)writeFloatWithFloat:(jfloat)v;

/*!
 @brief Writes an <code>int</code> as specified by <code>DataOutputStream.writeInt(int)</code>, except using
  little-endian byte order.
 @throw IOExceptionif an I/O error occurs
 */
- (void)writeIntWithInt:(jint)v;

/*!
 @brief Writes a <code>long</code> as specified by <code>DataOutputStream.writeLong(long)</code>, except using
  little-endian byte order.
 @throw IOExceptionif an I/O error occurs
 */
- (void)writeLongWithLong:(jlong)v;

/*!
 @brief Writes a <code>short</code> as specified by <code>DataOutputStream.writeShort(int)</code>, except using
  little-endian byte order.
 @throw IOExceptionif an I/O error occurs
 */
- (void)writeShortWithInt:(jint)v;

- (void)writeUTFWithNSString:(NSString * __nonnull)str;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoLittleEndianDataOutputStream)

FOUNDATION_EXPORT void ComGoogleCommonIoLittleEndianDataOutputStream_initWithJavaIoOutputStream_(ComGoogleCommonIoLittleEndianDataOutputStream *self, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT ComGoogleCommonIoLittleEndianDataOutputStream *new_ComGoogleCommonIoLittleEndianDataOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonIoLittleEndianDataOutputStream *create_ComGoogleCommonIoLittleEndianDataOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoLittleEndianDataOutputStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonIoLittleEndianDataOutputStream")
