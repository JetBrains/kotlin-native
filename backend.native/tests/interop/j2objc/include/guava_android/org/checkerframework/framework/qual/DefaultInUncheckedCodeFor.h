//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/android/build_result/java/org/checkerframework/framework/qual/DefaultInUncheckedCodeFor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor")
#ifdef RESTRICT_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor
#define INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor 0
#else
#define INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor 1
#endif
#undef RESTRICT_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor_) && (INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor || defined(INCLUDE_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor))
#define OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief Applied to the declaration of a type qualifier, specifies that
  the given annotation should be the default for unannotated type uses
  (in bytecode or source code) at the given location(s).
 <p>
  Unchecked code defaults are only applied if they are enabled via the
  -AuseDefaultsForUncheckedCode command-line option.  They can be enabled for
  source and bytecode separately.  If the unchecked code defaults are enabled for
  source code, they will only be applied to source code not annotated with 
 <code>AnnotatedFor</code> for the checker being executed. 
 <p>
  Note, this annotation is analogous to <code>DefaultFor</code> but for
  unannotated type uses in code that has not been type-checked.
  This qualifier is for type system developers, not end-users.
 - seealso: AnnotatedFor
 - seealso: DefaultQualifier
 - seealso: DefaultQualifierInHierarchyInUncheckedCode
 - seealso: ImplicitFor
 */
@protocol OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor < JavaLangAnnotationAnnotation >

@property (readonly) IOSObjectArray *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor : NSObject < OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor > {
 @public
  IOSObjectArray *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor)

FOUNDATION_EXPORT id<OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor> create_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor(IOSObjectArray *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultInUncheckedCodeFor")
