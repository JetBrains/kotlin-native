//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/org/checkerframework/framework/qual/TypeUseLocation.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCheckerframeworkFrameworkQualTypeUseLocation")
#ifdef RESTRICT_OrgCheckerframeworkFrameworkQualTypeUseLocation
#define INCLUDE_ALL_OrgCheckerframeworkFrameworkQualTypeUseLocation 0
#else
#define INCLUDE_ALL_OrgCheckerframeworkFrameworkQualTypeUseLocation 1
#endif
#undef RESTRICT_OrgCheckerframeworkFrameworkQualTypeUseLocation

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCheckerframeworkFrameworkQualTypeUseLocation_) && (INCLUDE_ALL_OrgCheckerframeworkFrameworkQualTypeUseLocation || defined(INCLUDE_OrgCheckerframeworkFrameworkQualTypeUseLocation))
#define OrgCheckerframeworkFrameworkQualTypeUseLocation_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum) {
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_FIELD = 0,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_LOCAL_VARIABLE = 1,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_RESOURCE_VARIABLE = 2,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_EXCEPTION_PARAMETER = 3,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_RECEIVER = 4,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_PARAMETER = 5,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_RETURN = 6,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_LOWER_BOUND = 7,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_EXPLICIT_LOWER_BOUND = 8,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_IMPLICIT_LOWER_BOUND = 9,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_UPPER_BOUND = 10,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_EXPLICIT_UPPER_BOUND = 11,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_IMPLICIT_UPPER_BOUND = 12,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_OTHERWISE = 13,
  OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum_ALL = 14,
};

/*!
 @brief Specifies the locations to which a <code>DefaultQualifier</code> annotation applies.
 The order of enums is important. Defaults are applied in this order.
  In particular, this means that OTHERWISE and ALL should be last.
 - seealso: DefaultQualifier
 - seealso: javax.lang.model.element.ElementKind
 */
@interface OrgCheckerframeworkFrameworkQualTypeUseLocation : JavaLangEnum

@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *FIELD NS_SWIFT_NAME(FIELD);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *LOCAL_VARIABLE NS_SWIFT_NAME(LOCAL_VARIABLE);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *RESOURCE_VARIABLE NS_SWIFT_NAME(RESOURCE_VARIABLE);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *EXCEPTION_PARAMETER NS_SWIFT_NAME(EXCEPTION_PARAMETER);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *RECEIVER NS_SWIFT_NAME(RECEIVER);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *PARAMETER NS_SWIFT_NAME(PARAMETER);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *RETURN NS_SWIFT_NAME(RETURN);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *LOWER_BOUND NS_SWIFT_NAME(LOWER_BOUND);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *EXPLICIT_LOWER_BOUND NS_SWIFT_NAME(EXPLICIT_LOWER_BOUND);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *IMPLICIT_LOWER_BOUND NS_SWIFT_NAME(IMPLICIT_LOWER_BOUND);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *UPPER_BOUND NS_SWIFT_NAME(UPPER_BOUND);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *EXPLICIT_UPPER_BOUND NS_SWIFT_NAME(EXPLICIT_UPPER_BOUND);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *IMPLICIT_UPPER_BOUND NS_SWIFT_NAME(IMPLICIT_UPPER_BOUND);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *OTHERWISE NS_SWIFT_NAME(OTHERWISE);
@property (readonly, class, nonnull) OrgCheckerframeworkFrameworkQualTypeUseLocation *ALL NS_SWIFT_NAME(ALL);
+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)FIELD;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)LOCAL_VARIABLE;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)RESOURCE_VARIABLE;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)EXCEPTION_PARAMETER;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)RECEIVER;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)PARAMETER;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)RETURN;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)LOWER_BOUND;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)EXPLICIT_LOWER_BOUND;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)IMPLICIT_LOWER_BOUND;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)UPPER_BOUND;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)EXPLICIT_UPPER_BOUND;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)IMPLICIT_UPPER_BOUND;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)OTHERWISE;

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation * __nonnull)ALL;

#pragma mark Public

+ (OrgCheckerframeworkFrameworkQualTypeUseLocation *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgCheckerframeworkFrameworkQualTypeUseLocation_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgCheckerframeworkFrameworkQualTypeUseLocation)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_values_[];

/*!
 @brief Apply default annotations to all unannotated raw types
  of fields.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_FIELD(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, FIELD)

/*!
 @brief Apply default annotations to all unannotated raw types
  of local variables, casts, and instanceof.
 <p>
  TODO: should cast/instanceof be separated?
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_LOCAL_VARIABLE(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, LOCAL_VARIABLE)

/*!
 @brief Apply default annotations to all unannotated raw types
  of resource variables.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_RESOURCE_VARIABLE(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, RESOURCE_VARIABLE)

/*!
 @brief Apply default annotations to all unannotated raw types
  of exception parameters.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_EXCEPTION_PARAMETER(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, EXCEPTION_PARAMETER)

/*!
 @brief Apply default annotations to all unannotated raw types
  of receiver types.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_RECEIVER(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, RECEIVER)

/*!
 @brief Apply default annotations to all unannotated raw types
  of formal parameter types.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_PARAMETER(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, PARAMETER)

/*!
 @brief Apply default annotations to all unannotated raw types
  of return types.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_RETURN(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, RETURN)

/*!
 @brief Apply default annotations to unannotated lower bounds
  for type variables and wildcards both explicit ones in 
 <code>extends</code> clauses, and implicit upper bounds
  when no explicit <code>extends</code> or <code>super</code>
  clause is present
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_LOWER_BOUND(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, LOWER_BOUND)

/*!
 @brief Apply default annotations to unannotated, but explicit lower bounds: 
 <code>&lt;?
 super Object&gt;</code>
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_EXPLICIT_LOWER_BOUND(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, EXPLICIT_LOWER_BOUND)

/*!
 @brief Apply default annotations to unannotated, but implicit lower bounds: 
 <code>&lt;T&gt;</code>
  <code>&lt;?
 &gt;</code>
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_IMPLICIT_LOWER_BOUND(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, IMPLICIT_LOWER_BOUND)

/*!
 @brief Apply default annotations to unannotated upper bounds:  both
  explicit ones in <code>extends</code> clauses, and implicit upper bounds
  when no explicit <code>extends</code> or <code>super</code> clause is
  present.
 Especially useful for parametrized classes that provide a lot of
  static methods with the same generic parameters as the class.
  TODO: more doc, relation to other UPPER_BOUND
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_UPPER_BOUND(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, UPPER_BOUND)

/*!
 @brief Apply default annotations to unannotated, but explicit upper bounds: 
 <code>&lt;T extends Object&gt;</code>
  TODO: more doc, relation to other UPPER_BOUND
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_EXPLICIT_UPPER_BOUND(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, EXPLICIT_UPPER_BOUND)

/*!
 @brief Apply default annotations to unannotated type variables: 
 <code>&lt;T&gt;</code>
  TODO: more doc, relation to other UPPER_BOUND
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_IMPLICIT_UPPER_BOUND(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, IMPLICIT_UPPER_BOUND)

/*!
 @brief Apply if nothing more concrete is provided.
 TODO: clarify relation to ALL.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_OTHERWISE(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, OTHERWISE)

/*!
 @brief Apply default annotations to all type uses other than uses of type parameters.
 Does not allow any of the other constants. Usually you want OTHERWISE.
 */
inline OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_get_ALL(void);
J2OBJC_ENUM_CONSTANT(OrgCheckerframeworkFrameworkQualTypeUseLocation, ALL)

FOUNDATION_EXPORT IOSObjectArray *OrgCheckerframeworkFrameworkQualTypeUseLocation_values(void);

FOUNDATION_EXPORT OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgCheckerframeworkFrameworkQualTypeUseLocation *OrgCheckerframeworkFrameworkQualTypeUseLocation_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgCheckerframeworkFrameworkQualTypeUseLocation)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgCheckerframeworkFrameworkQualTypeUseLocation")
