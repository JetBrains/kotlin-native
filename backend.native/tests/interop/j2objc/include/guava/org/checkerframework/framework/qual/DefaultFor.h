//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/org/checkerframework/framework/qual/DefaultFor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultFor")
#ifdef RESTRICT_OrgCheckerframeworkFrameworkQualDefaultFor
#define INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultFor 0
#else
#define INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultFor 1
#endif
#undef RESTRICT_OrgCheckerframeworkFrameworkQualDefaultFor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCheckerframeworkFrameworkQualDefaultFor_) && (INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultFor || defined(INCLUDE_OrgCheckerframeworkFrameworkQualDefaultFor))
#define OrgCheckerframeworkFrameworkQualDefaultFor_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief Applied to the declaration of a type qualifier specifies that
  the given annotation should be the default for a particular location.
 TODO: Document use relative to the other annotations.
  This qualifier is for type system developers, not end-users.
 - seealso: TypeUseLocation
 - seealso: DefaultQualifier
 - seealso: DefaultQualifierInHierarchy
 - seealso: ImplicitFor
 */
@protocol OrgCheckerframeworkFrameworkQualDefaultFor < JavaLangAnnotationAnnotation >

@property (readonly) IOSObjectArray *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgCheckerframeworkFrameworkQualDefaultFor : NSObject < OrgCheckerframeworkFrameworkQualDefaultFor > {
 @public
  IOSObjectArray *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCheckerframeworkFrameworkQualDefaultFor)

FOUNDATION_EXPORT id<OrgCheckerframeworkFrameworkQualDefaultFor> create_OrgCheckerframeworkFrameworkQualDefaultFor(IOSObjectArray *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgCheckerframeworkFrameworkQualDefaultFor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgCheckerframeworkFrameworkQualDefaultFor")
