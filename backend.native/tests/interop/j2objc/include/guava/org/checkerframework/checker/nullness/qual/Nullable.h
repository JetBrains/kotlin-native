//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/org/checkerframework/checker/nullness/qual/Nullable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgCheckerframeworkCheckerNullnessQualNullable")
#ifdef RESTRICT_OrgCheckerframeworkCheckerNullnessQualNullable
#define INCLUDE_ALL_OrgCheckerframeworkCheckerNullnessQualNullable 0
#else
#define INCLUDE_ALL_OrgCheckerframeworkCheckerNullnessQualNullable 1
#endif
#undef RESTRICT_OrgCheckerframeworkCheckerNullnessQualNullable

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgCheckerframeworkCheckerNullnessQualNullable_) && (INCLUDE_ALL_OrgCheckerframeworkCheckerNullnessQualNullable || defined(INCLUDE_OrgCheckerframeworkCheckerNullnessQualNullable))
#define OrgCheckerframeworkCheckerNullnessQualNullable_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief <code>Nullable</code> is a type annotation that indicates that the value is not
  known to be non-null (see <code>NonNull</code>).Only if an expression has a 
 <code>Nullable</code> type may it be assigned <code>null</code>.
 <p>
  This annotation is associated with the <code>AbstractNullnessChecker</code>.
 - seealso: NonNull
 - seealso: MonotonicNonNull
 - seealso: AbstractNullnessChecker
 */
@protocol OrgCheckerframeworkCheckerNullnessQualNullable < JavaLangAnnotationAnnotation >

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgCheckerframeworkCheckerNullnessQualNullable : NSObject < OrgCheckerframeworkCheckerNullnessQualNullable >

@end

J2OBJC_EMPTY_STATIC_INIT(OrgCheckerframeworkCheckerNullnessQualNullable)

FOUNDATION_EXPORT id<OrgCheckerframeworkCheckerNullnessQualNullable> create_OrgCheckerframeworkCheckerNullnessQualNullable(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgCheckerframeworkCheckerNullnessQualNullable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgCheckerframeworkCheckerNullnessQualNullable")
