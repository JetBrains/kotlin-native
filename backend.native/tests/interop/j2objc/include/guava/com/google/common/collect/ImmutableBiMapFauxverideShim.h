//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/collect/ImmutableBiMapFauxverideShim.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMapFauxverideShim")
#ifdef RESTRICT_ComGoogleCommonCollectImmutableBiMapFauxverideShim
#define INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMapFauxverideShim 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMapFauxverideShim 1
#endif
#undef RESTRICT_ComGoogleCommonCollectImmutableBiMapFauxverideShim

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectImmutableBiMapFauxverideShim_) && (INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMapFauxverideShim || defined(INCLUDE_ComGoogleCommonCollectImmutableBiMapFauxverideShim))
#define ComGoogleCommonCollectImmutableBiMapFauxverideShim_

#define RESTRICT_ComGoogleCommonCollectImmutableMap 1
#define INCLUDE_ComGoogleCommonCollectImmutableMap 1
#include "com/google/common/collect/ImmutableMap.h"

@protocol JavaUtilFunctionBinaryOperator;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilStreamCollector;

/*!
 @brief "Overrides" the <code>ImmutableMap</code> static methods that lack <code>ImmutableBiMap</code> equivalents
  with deprecated, exception-throwing versions.See <code>ImmutableSortedSetFauxverideShim</code> for
  details.
 @author Louis Wasserman
 */
@interface ComGoogleCommonCollectImmutableBiMapFauxverideShim : ComGoogleCommonCollectImmutableMap

#pragma mark Public

/*!
 @brief Not supported.Use <code>ImmutableBiMap.toImmutableBiMap</code> instead.
 This method exists only to
  hide <code>ImmutableMap.toImmutableMap(Function, Function)</code> from consumers of <code>ImmutableBiMap</code>
 .
 @throw UnsupportedOperationExceptionalways
 */
+ (id<JavaUtilStreamCollector>)toImmutableMapWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)keyFunction
                                             withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)valueFunction __attribute__((deprecated));

/*!
 @brief Not supported.This method does not make sense for <code>BiMap</code>.
 This method exists only to
  hide <code>ImmutableMap.toImmutableMap(Function, Function, BinaryOperator)</code> from consumers of 
 <code>ImmutableBiMap</code>.
 @throw UnsupportedOperationExceptionalways
 */
+ (id<JavaUtilStreamCollector>)toImmutableMapWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)keyFunction
                                             withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)valueFunction
                                       withJavaUtilFunctionBinaryOperator:(id<JavaUtilFunctionBinaryOperator>)mergeFunction __attribute__((deprecated));

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectImmutableBiMapFauxverideShim)

FOUNDATION_EXPORT void ComGoogleCommonCollectImmutableBiMapFauxverideShim_initPackagePrivate(ComGoogleCommonCollectImmutableBiMapFauxverideShim *self);

FOUNDATION_EXPORT id<JavaUtilStreamCollector> ComGoogleCommonCollectImmutableBiMapFauxverideShim_toImmutableMapWithJavaUtilFunctionFunction_withJavaUtilFunctionFunction_(id<JavaUtilFunctionFunction> keyFunction, id<JavaUtilFunctionFunction> valueFunction);

FOUNDATION_EXPORT id<JavaUtilStreamCollector> ComGoogleCommonCollectImmutableBiMapFauxverideShim_toImmutableMapWithJavaUtilFunctionFunction_withJavaUtilFunctionFunction_withJavaUtilFunctionBinaryOperator_(id<JavaUtilFunctionFunction> keyFunction, id<JavaUtilFunctionFunction> valueFunction, id<JavaUtilFunctionBinaryOperator> mergeFunction);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectImmutableBiMapFauxverideShim)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectImmutableBiMapFauxverideShim")
