//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/collect/AbstractMapBasedMultimap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap")
#ifdef RESTRICT_ComGoogleCommonCollectAbstractMapBasedMultimap
#define INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectAbstractMapBasedMultimap
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap 1
#endif
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap 1
#endif
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet 1
#endif
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet 1
#endif
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection 1
#endif
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet 1
#endif
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection 1
#endif
#ifdef INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet
#define INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection 1
#endif

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_

#define RESTRICT_ComGoogleCommonCollectAbstractMultimap 1
#define INCLUDE_ComGoogleCommonCollectAbstractMultimap 1
#include "com/google/common/collect/AbstractMultimap.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection;
@protocol ComGoogleCommonCollectMultiset;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionBiConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;
@protocol JavaUtilSpliterator;

/*!
 @brief Basic implementation of the <code>Multimap</code> interface.This class represents a multimap as a map
  that associates each key with a collection of values.
 All methods of <code>Multimap</code> are
  supported, including those specified as optional in the interface. 
 <p>To implement a multimap, a subclass must define the method <code>createCollection()</code>, which
  creates an empty collection of values for a key. 
 <p>The multimap constructor takes a map that has a single entry for each distinct key. When you
  insert a key-value pair with a key that isn't already in the multimap, <code>AbstractMapBasedMultimap</code>
  calls <code>createCollection()</code> to create the collection of values
  for that key. The subclass should not call <code>createCollection()</code> directly, and a new
  instance should be created every time the method is called. 
 <p>For example, the subclass could pass a <code>java.util.TreeMap</code> during construction, and 
 <code>createCollection()</code> could return a <code>java.util.TreeSet</code>, in which case the
  multimap's iterators would propagate through the keys and values in sorted order. 
 <p>Keys and values may be null, as long as the underlying collection classes support null
  elements. 
 <p>The collections created by <code>createCollection()</code> may or may not allow duplicates. If the
  collection, such as a <code>Set</code>, does not support duplicates, an added key-value pair will
  replace an existing pair with the same key and value, if such a pair is present. With collections
  like <code>List</code> that allow duplicates, the collection will keep the existing key-value pairs
  while adding a new pair. 
 <p>This class is not threadsafe when any concurrent operations update the multimap, even if the
  underlying map and <code>createCollection()</code> method return threadsafe classes. Concurrent read
  operations will work correctly. To allow concurrent update operations, wrap your multimap with a
  call to <code>Multimaps.synchronizedMultimap</code>.
  
 <p>For serialization to work, the subclass must specify explicit <code>readObject</code> and <code>writeObject</code>
  methods.
 @author Jared Levy
 @author Louis Wasserman
 */
@interface ComGoogleCommonCollectAbstractMapBasedMultimap : ComGoogleCommonCollectAbstractMultimap < JavaIoSerializable >

#pragma mark Public

- (void)clear;

- (jboolean)containsKeyWithId:(id __nullable)key;

/*!
 @brief <p>The iterator generated by the returned collection traverses the values for one key, followed
  by the values of a second key, and so on.
 <p>Each entry is an immutable snapshot of a key-value mapping in the multimap, taken at the
  time the entry is returned by a method call to the collection or its iterator.
 */
- (id<JavaUtilCollection>)entries;

- (void)forEachWithJavaUtilFunctionBiConsumer:(id<JavaUtilFunctionBiConsumer>)action;

/*!
 @brief <p>The returned collection is not serializable.
 */
- (id<JavaUtilCollection>)getWithId:(id)key;

- (jboolean)putWithId:(id)key
               withId:(id)value;

/*!
 @brief <p>The returned collection is immutable.
 */
- (id<JavaUtilCollection>)removeAllWithId:(id __nullable)key;

/*!
 @brief <p>The returned collection is immutable.
 */
- (id<JavaUtilCollection>)replaceValuesWithId:(id)key
                         withJavaLangIterable:(id<JavaLangIterable>)values;

- (jint)size;

/*!
 @brief <p>The iterator generated by the returned collection traverses the values for one key, followed
  by the values of a second key, and so on.
 */
- (id<JavaUtilCollection>)values;

#pragma mark Protected

/*!
 @brief Creates a new multimap that uses the provided map.
 @param map place to store the mapping from each key to its corresponding values
 @throw IllegalArgumentExceptionif <code>map</code> is not empty
 */
- (instancetype __nonnull)initPackagePrivateWithJavaUtilMap:(id<JavaUtilMap>)map;

#pragma mark Package-Private

- (id<JavaUtilMap>)backingMap;

- (id<JavaUtilMap>)createAsMap;

/*!
 @brief Creates the collection of values for a single key.
 <p>Collections with weak, soft, or phantom references are not supported. Each call to <code>createCollection</code>
  should create a new instance. 
 <p>The returned collection class determines whether duplicate key-value pairs are allowed.
 @return an empty collection of values
 */
- (id<JavaUtilCollection>)createCollection;

/*!
 @brief Creates the collection of values for an explicitly provided key.By default, it simply calls 
 <code>createCollection()</code>, which is the correct behavior for most implementations.
 The <code>LinkedHashMultimap</code>
  class overrides it.
 @param key key to associate with values in the collection
 @return an empty collection of values
 */
- (id<JavaUtilCollection>)createCollectionWithId:(id)key;

- (id<JavaUtilCollection>)createEntries;

- (id<ComGoogleCommonCollectMultiset>)createKeys;

- (id<JavaUtilSet>)createKeySet;

- (id<JavaUtilMap>)createMaybeNavigableAsMap;

- (id<JavaUtilSet>)createMaybeNavigableKeySet;

/*!
 @brief Creates an unmodifiable, empty collection of values.
 <p>This is used in <code>removeAll</code> on an empty key.
 */
- (id<JavaUtilCollection>)createUnmodifiableEmptyCollection;

- (id<JavaUtilCollection>)createValues;

/*!
 @brief Returns an iterator across all key-value map entries, used by <code>entries().iterator()</code> and 
 <code>values().iterator()</code>.The default behavior, which traverses the values for one key, the
  values for a second key, and so on, suffices for most <code>AbstractMapBasedMultimap</code>
  implementations.
 @return an iterator across map entries
 */
- (id<JavaUtilIterator>)entryIterator;

- (id<JavaUtilSpliterator>)entrySpliterator;

/*!
 @brief Used during deserialization only.
 */
- (void)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilCollection>)unmodifiableCollectionSubclassWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (id<JavaUtilIterator>)valueIterator;

- (id<JavaUtilSpliterator>)valueSpliterator;

/*!
 @brief Generates a decorated collection that remains consistent with the values in the multimap for
  the provided key.Changes to the multimap may alter the returned collection, and vice versa.
 */
- (id<JavaUtilCollection>)wrapCollectionWithId:(id)key
                        withJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (id<JavaUtilList>)wrapListWithId:(id)key
                  withJavaUtilList:(id<JavaUtilList>)list
withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)ancestor;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_initPackagePrivateWithJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *self, id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_

#define RESTRICT_JavaUtilAbstractCollection 1
#define INCLUDE_JavaUtilAbstractCollection 1
#include "java/util/AbstractCollection.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

/*!
 @brief Collection decorator that stays in sync with the multimap values for a key.There are two kinds
  of wrapped collections: full and subcollections.
 Both have a delegate pointing to the
  underlying collection class. 
 <p>Full collections, identified by a null ancestor field, contain all multimap values for a
  given key. Its delegate is a value in <code>AbstractMapBasedMultimap.map</code> whenever the
  delegate is non-empty. The <code>refreshIfEmpty</code>, <code>removeIfEmpty</code>, and <code>addToMap</code>
  methods ensure that the <code>WrappedCollection</code> and map remain consistent. 
 <p>A subcollection, such as a sublist, contains some of the values for a given key. Its
  ancestor field points to the full wrapped collection with all values for the key. The
  subcollection <code>refreshIfEmpty</code>, <code>removeIfEmpty</code>, and <code>addToMap</code> methods call
  the corresponding methods of the full wrapped collection.
 */
@interface ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection : JavaUtilAbstractCollection {
 @public
  id key_;
  id<JavaUtilCollection> delegate_;
  ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor_;
  id<JavaUtilCollection> ancestorDelegate_;
}

#pragma mark Public

- (jboolean)addWithId:(id)value;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (void)clear;

- (jboolean)containsWithId:(id)o;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)isEqual:(id __nullable)object;

- (NSUInteger)hash;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)o;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)size;

- (id<JavaUtilSpliterator>)spliterator;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)key
                                                          withJavaUtilCollection:(id<JavaUtilCollection>)delegate
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)ancestor;

/*!
 @brief Add the delegate to the map.Other <code>WrappedCollection</code> methods should call this method
  after adding elements to a previously empty collection.
 <p>Subcollection add the ancestor's delegate instead.
 */
- (void)addToMap;

- (ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *)getAncestor;

- (id<JavaUtilCollection>)getDelegate;

- (id)getKey;

/*!
 @brief If the delegate collection is empty, but the multimap has values for the key, replace the
  delegate with the new collection for the key.
 <p>For a subcollection, refresh its ancestor and validate that the ancestor delegate hasn't
  changed.
 */
- (void)refreshIfEmpty;

/*!
 @brief If collection is empty, remove it from <code>AbstractMapBasedMultimap.this.map</code>.For
  subcollections, check whether the ancestor collection is empty.
 */
- (void)removeIfEmpty;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection, key_, id)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection, delegate_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection, ancestor_, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection, ancestorDelegate_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilCollection_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilCollection> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *new_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilCollection_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilCollection> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *create_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilCollection_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilCollection> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionConsumer;

/*!
 @brief Collection iterator for <code>WrappedCollection</code>.
 */
@interface ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator : NSObject < JavaUtilIterator > {
 @public
  id<JavaUtilIterator> delegateIterator_;
  id<JavaUtilCollection> originalDelegate_;
}

#pragma mark Public

- (jboolean)hasNext;

- (id)next;

- (void)remove;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *)outer$;

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *)outer$
                                                                              withJavaUtilIterator:(id<JavaUtilIterator>)delegateIterator;

- (id<JavaUtilIterator>)getDelegateIterator;

/*!
 @brief If the delegate changed since the iterator was created, the iterator is no longer valid.
 */
- (void)validateIterator;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator, delegateIterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator, originalDelegate_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator *self, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *outer$);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator *new_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator *create_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *outer$);

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator *self, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *outer$, id<JavaUtilIterator> delegateIterator);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator *new_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *outer$, id<JavaUtilIterator> delegateIterator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator *create_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator_initWithComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_withJavaUtilIterator_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *outer$, id<JavaUtilIterator> delegateIterator);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_WrappedIterator)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet_

#define RESTRICT_JavaUtilSet 1
#define INCLUDE_JavaUtilSet 1
#include "java/util/Set.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@class ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection;
@protocol JavaUtilCollection;

/*!
 @brief Set decorator that stays in sync with the multimap values for a key.
 */
@interface ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet : ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection < JavaUtilSet >

#pragma mark Public

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)key
                                                                 withJavaUtilSet:(id<JavaUtilSet>)delegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)arg0
                                                          withJavaUtilCollection:(id<JavaUtilCollection>)arg1
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilSet_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilSet> delegate);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet *new_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilSet_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilSet> delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet *create_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilSet_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilSet> delegate);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSet)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet_

#define RESTRICT_JavaUtilSortedSet 1
#define INCLUDE_JavaUtilSortedSet 1
#include "java/util/SortedSet.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@class ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;

/*!
 @brief SortedSet decorator that stays in sync with the multimap values for a key.
 */
@interface ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet : ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection < JavaUtilSortedSet >

#pragma mark Public

- (id<JavaUtilComparator>)comparator;

- (id)first;

- (id<JavaUtilSortedSet>)headSetWithId:(id)toElement;

- (id)last;

- (id<JavaUtilSortedSet>)subSetWithId:(id)fromElement
                               withId:(id)toElement;

- (id<JavaUtilSortedSet>)tailSetWithId:(id)fromElement;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)key
                                                           withJavaUtilSortedSet:(id<JavaUtilSortedSet>)delegate
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)ancestor;

- (id<JavaUtilSortedSet>)getSortedSetDelegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)arg0
                                                          withJavaUtilCollection:(id<JavaUtilCollection>)arg1
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilSortedSet_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilSortedSet> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet *new_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilSortedSet_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilSortedSet> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet *create_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilSortedSet_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilSortedSet> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet_

#define RESTRICT_JavaUtilNavigableSet 1
#define INCLUDE_JavaUtilNavigableSet 1
#include "java/util/NavigableSet.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@class ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilSortedSet;

@interface ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet : ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedSortedSet < JavaUtilNavigableSet >

#pragma mark Public

- (id)ceilingWithId:(id)v;

- (id<JavaUtilIterator>)descendingIterator;

- (id<JavaUtilNavigableSet>)descendingSet;

- (id)floorWithId:(id)v;

- (id<JavaUtilNavigableSet>)headSetWithId:(id)toElement
                              withBoolean:(jboolean)inclusive;

- (id)higherWithId:(id)v;

- (id)lowerWithId:(id)v;

- (id)pollFirst;

- (id)pollLast;

- (id<JavaUtilNavigableSet>)subSetWithId:(id)fromElement
                             withBoolean:(jboolean)fromInclusive
                                  withId:(id)toElement
                             withBoolean:(jboolean)toInclusive;

- (id<JavaUtilNavigableSet>)tailSetWithId:(id)fromElement
                              withBoolean:(jboolean)inclusive;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)key
                                                        withJavaUtilNavigableSet:(id<JavaUtilNavigableSet>)delegate
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)ancestor;

- (id<JavaUtilNavigableSet>)getSortedSetDelegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)arg0
                                                           withJavaUtilSortedSet:(id<JavaUtilSortedSet>)arg1
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilNavigableSet_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilNavigableSet> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet *new_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilNavigableSet_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilNavigableSet> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet *create_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilNavigableSet_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilNavigableSet> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedNavigableSet)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList_

#define RESTRICT_JavaUtilList 1
#define INCLUDE_JavaUtilList 1
#include "java/util/List.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@class ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilFunctionUnaryOperator;
@protocol JavaUtilListIterator;

/*!
 @brief List decorator that stays in sync with the multimap values for a key.
 */
@interface ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList : ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection < JavaUtilList >

#pragma mark Public

- (void)addWithInt:(jint)index
            withId:(id)element;

- (jboolean)addAllWithInt:(jint)index
   withJavaUtilCollection:(id<JavaUtilCollection>)c;

- (id)getWithInt:(jint)index;

- (jint)indexOfWithId:(id)o;

- (jint)lastIndexOfWithId:(id)o;

- (id<JavaUtilListIterator>)listIterator;

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)index;

- (id)removeWithInt:(jint)index;

- (id)setWithInt:(jint)index
          withId:(id)element;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)key
                                                                withJavaUtilList:(id<JavaUtilList>)delegate
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)ancestor;

- (id<JavaUtilList>)getListDelegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                          withId:(id)arg0
                                                          withJavaUtilCollection:(id<JavaUtilCollection>)arg1
            withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection:(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection * __nullable)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilList_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilList> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList *new_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilList_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilList> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList *create_ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withId_withJavaUtilList_withComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id key, id<JavaUtilList> delegate, ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedCollection *ancestor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_WrappedList)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet_

#define RESTRICT_ComGoogleCommonCollectMaps 1
#define INCLUDE_ComGoogleCommonCollectMaps_KeySet 1
#include "com/google/common/collect/Maps.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol JavaUtilSpliterator;

@interface ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet : ComGoogleCommonCollectMaps_KeySet

#pragma mark Public

- (void)clear;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)isEqual:(id __nullable)object;

- (NSUInteger)hash;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)key;

- (id<JavaUtilSpliterator>)spliterator;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                 withJavaUtilMap:(id<JavaUtilMap>)subMap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilMap> subMap);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet *new_ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilMap> subMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet *create_ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilMap> subMap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet_

#define RESTRICT_JavaUtilSortedSet 1
#define INCLUDE_JavaUtilSortedSet 1
#include "java/util/SortedSet.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@protocol JavaUtilComparator;
@protocol JavaUtilSortedMap;

@interface ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet : ComGoogleCommonCollectAbstractMapBasedMultimap_KeySet < JavaUtilSortedSet >

#pragma mark Public

- (id<JavaUtilComparator>)comparator;

- (id)first;

- (id<JavaUtilSortedSet>)headSetWithId:(id)toElement;

- (id)last;

- (id<JavaUtilSortedSet>)subSetWithId:(id)fromElement
                               withId:(id)toElement;

- (id<JavaUtilSortedSet>)tailSetWithId:(id)fromElement;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                           withJavaUtilSortedMap:(id<JavaUtilSortedMap>)subMap;

- (id<JavaUtilSortedMap>)sortedMap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilSortedMap_(ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilSortedMap> subMap);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet *new_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilSortedMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilSortedMap> subMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet *create_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilSortedMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilSortedMap> subMap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet_

#define RESTRICT_JavaUtilNavigableSet 1
#define INCLUDE_JavaUtilNavigableSet 1
#include "java/util/NavigableSet.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@protocol JavaUtilIterator;
@protocol JavaUtilNavigableMap;
@protocol JavaUtilSortedMap;

@interface ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet : ComGoogleCommonCollectAbstractMapBasedMultimap_SortedKeySet < JavaUtilNavigableSet >

#pragma mark Public

- (id)ceilingWithId:(id)k;

- (id<JavaUtilIterator>)descendingIterator;

- (id<JavaUtilNavigableSet>)descendingSet;

- (id)floorWithId:(id)k;

- (id<JavaUtilNavigableSet>)headSetWithId:(id)toElement;

- (id<JavaUtilNavigableSet>)headSetWithId:(id)toElement
                              withBoolean:(jboolean)inclusive;

- (id)higherWithId:(id)k;

- (id)lowerWithId:(id)k;

- (id)pollFirst;

- (id)pollLast;

- (id<JavaUtilNavigableSet>)subSetWithId:(id)fromElement
                             withBoolean:(jboolean)fromInclusive
                                  withId:(id)toElement
                             withBoolean:(jboolean)toInclusive;

- (id<JavaUtilNavigableSet>)subSetWithId:(id)fromElement
                                  withId:(id)toElement;

- (id<JavaUtilNavigableSet>)tailSetWithId:(id)fromElement;

- (id<JavaUtilNavigableSet>)tailSetWithId:(id)fromElement
                              withBoolean:(jboolean)inclusive;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                        withJavaUtilNavigableMap:(id<JavaUtilNavigableMap>)subMap;

- (id<JavaUtilNavigableMap>)sortedMap;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                           withJavaUtilSortedMap:(id<JavaUtilSortedMap>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilNavigableMap_(ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilNavigableMap> subMap);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet *new_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilNavigableMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilNavigableMap> subMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet *create_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilNavigableMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilNavigableMap> subMap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableKeySet)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap_

#define RESTRICT_ComGoogleCommonCollectMaps 1
#define INCLUDE_ComGoogleCommonCollectMaps_ViewCachingAbstractMap 1
#include "com/google/common/collect/Maps.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilMap;
@protocol JavaUtilMap_Entry;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap : ComGoogleCommonCollectMaps_ViewCachingAbstractMap {
 @public
  /*!
   @brief Usually the same as map, but smaller for the headMap(), tailMap(), or subMap() of a
  SortedAsMap.
   */
  id<JavaUtilMap> submap_;
}

#pragma mark Public

- (void)clear;

- (id<JavaUtilCollection>)computeIfAbsentWithId:(id)arg0
                   withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (id<JavaUtilCollection>)computeIfPresentWithId:(id)arg0
                  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilCollection>)computeWithId:(id)arg0
         withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)isEqual:(id __nullable)object;

- (id<JavaUtilCollection>)getWithId:(id)key;

- (id<JavaUtilCollection>)getOrDefaultWithId:(id)arg0
                                      withId:(id<JavaUtilCollection>)arg1;

- (NSUInteger)hash;

- (id<JavaUtilSet>)keySet;

- (id<JavaUtilCollection>)mergeWithId:(id)arg0
                               withId:(id<JavaUtilCollection>)arg1
       withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (id<JavaUtilCollection>)putIfAbsentWithId:(id)arg0
                                     withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)putWithId:(id)arg0
                             withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)removeWithId:(id)key;

- (id<JavaUtilCollection>)replaceWithId:(id)arg0
                                 withId:(id<JavaUtilCollection>)arg1;

- (jint)size;

- (NSString *)description;

#pragma mark Protected

- (id<JavaUtilSet>)createEntrySet;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                                 withJavaUtilMap:(id<JavaUtilMap>)submap;

- (id<JavaUtilMap_Entry>)wrapEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap, submap_, id<JavaUtilMap>)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilMap> submap);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap *new_ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilMap> submap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap *create_ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilMap> submap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap_

#define RESTRICT_JavaUtilSortedMap 1
#define INCLUDE_JavaUtilSortedMap 1
#include "java/util/SortedMap.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilSortedSet;

@interface ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap : ComGoogleCommonCollectAbstractMapBasedMultimap_AsMap < JavaUtilSortedMap > {
 @public
  id<JavaUtilSortedSet> sortedKeySet_;
}

#pragma mark Public

- (id<JavaUtilComparator>)comparator;

- (id<JavaUtilCollection>)computeIfAbsentWithId:(id)arg0
                   withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (id<JavaUtilCollection>)computeIfPresentWithId:(id)arg0
                  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilCollection>)computeWithId:(id)arg0
         withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id)firstKey;

- (id<JavaUtilCollection>)getOrDefaultWithId:(id)arg0
                                      withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)getWithId:(id)arg0;

- (id<JavaUtilSortedMap>)headMapWithId:(id)toKey;

- (id<JavaUtilSortedSet>)keySet;

- (id)lastKey;

- (id<JavaUtilCollection>)mergeWithId:(id)arg0
                               withId:(id<JavaUtilCollection>)arg1
       withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (id<JavaUtilCollection>)putIfAbsentWithId:(id)arg0
                                     withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)putWithId:(id)arg0
                             withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)removeWithId:(id)arg0;

- (id<JavaUtilCollection>)replaceWithId:(id)arg0
                                 withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilSortedMap>)subMapWithId:(id)fromKey
                               withId:(id)toKey;

- (id<JavaUtilSortedMap>)tailMapWithId:(id)fromKey;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                           withJavaUtilSortedMap:(id<JavaUtilSortedMap>)submap;

- (id<JavaUtilSortedSet>)createKeySet;

- (id<JavaUtilSortedMap>)sortedMap;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap, sortedKeySet_, id<JavaUtilSortedSet>)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilSortedMap_(ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilSortedMap> submap);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap *new_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilSortedMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilSortedMap> submap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap *create_ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilSortedMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilSortedMap> submap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap)

#endif

#if !defined (ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap_) && (INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap || defined(INCLUDE_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap))
#define ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap_

#define RESTRICT_JavaUtilNavigableMap 1
#define INCLUDE_JavaUtilNavigableMap 1
#include "java/util/NavigableMap.h"

@class ComGoogleCommonCollectAbstractMapBasedMultimap;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilIterator;
@protocol JavaUtilMap_Entry;
@protocol JavaUtilNavigableSet;
@protocol JavaUtilSortedMap;

@interface ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap : ComGoogleCommonCollectAbstractMapBasedMultimap_SortedAsMap < JavaUtilNavigableMap >

#pragma mark Public

- (id<JavaUtilMap_Entry>)ceilingEntryWithId:(id)key;

- (id)ceilingKeyWithId:(id)key;

- (id<JavaUtilCollection>)computeIfAbsentWithId:(id)arg0
                   withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (id<JavaUtilCollection>)computeIfPresentWithId:(id)arg0
                  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilCollection>)computeWithId:(id)arg0
         withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (id<JavaUtilNavigableSet>)descendingKeySet;

- (id<JavaUtilNavigableMap>)descendingMap;

- (id<JavaUtilMap_Entry>)firstEntry;

- (id<JavaUtilMap_Entry>)floorEntryWithId:(id)key;

- (id)floorKeyWithId:(id)key;

- (id<JavaUtilCollection>)getOrDefaultWithId:(id)arg0
                                      withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)getWithId:(id)arg0;

- (id<JavaUtilNavigableMap>)headMapWithId:(id)toKey;

- (id<JavaUtilNavigableMap>)headMapWithId:(id)toKey
                              withBoolean:(jboolean)inclusive;

- (id<JavaUtilMap_Entry>)higherEntryWithId:(id)key;

- (id)higherKeyWithId:(id)key;

- (id<JavaUtilNavigableSet>)keySet;

- (id<JavaUtilMap_Entry>)lastEntry;

- (id<JavaUtilMap_Entry>)lowerEntryWithId:(id)key;

- (id)lowerKeyWithId:(id)key;

- (id<JavaUtilCollection>)mergeWithId:(id)arg0
                               withId:(id<JavaUtilCollection>)arg1
       withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (id<JavaUtilNavigableSet>)navigableKeySet;

- (id<JavaUtilMap_Entry>)pollFirstEntry;

- (id<JavaUtilMap_Entry>)pollLastEntry;

- (id<JavaUtilCollection>)putIfAbsentWithId:(id)arg0
                                     withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)putWithId:(id)arg0
                             withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilCollection>)removeWithId:(id)arg0;

- (id<JavaUtilCollection>)replaceWithId:(id)arg0
                                 withId:(id<JavaUtilCollection>)arg1;

- (id<JavaUtilNavigableMap>)subMapWithId:(id)fromKey
                             withBoolean:(jboolean)fromInclusive
                                  withId:(id)toKey
                             withBoolean:(jboolean)toInclusive;

- (id<JavaUtilNavigableMap>)subMapWithId:(id)fromKey
                                  withId:(id)toKey;

- (id<JavaUtilNavigableMap>)tailMapWithId:(id)fromKey;

- (id<JavaUtilNavigableMap>)tailMapWithId:(id)fromKey
                              withBoolean:(jboolean)inclusive;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                        withJavaUtilNavigableMap:(id<JavaUtilNavigableMap>)submap;

- (id<JavaUtilNavigableSet>)createKeySet;

- (id<JavaUtilMap_Entry>)pollAsMapEntryWithJavaUtilIterator:(id<JavaUtilIterator>)entryIterator;

- (id<JavaUtilNavigableMap>)sortedMap;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComGoogleCommonCollectAbstractMapBasedMultimap:(ComGoogleCommonCollectAbstractMapBasedMultimap *)outer$
                                                           withJavaUtilSortedMap:(id<JavaUtilSortedMap>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap)

FOUNDATION_EXPORT void ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilNavigableMap_(ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap *self, ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilNavigableMap> submap);

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap *new_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilNavigableMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilNavigableMap> submap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap *create_ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap_initWithComGoogleCommonCollectAbstractMapBasedMultimap_withJavaUtilNavigableMap_(ComGoogleCommonCollectAbstractMapBasedMultimap *outer$, id<JavaUtilNavigableMap> submap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectAbstractMapBasedMultimap_NavigableAsMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectAbstractMapBasedMultimap")
