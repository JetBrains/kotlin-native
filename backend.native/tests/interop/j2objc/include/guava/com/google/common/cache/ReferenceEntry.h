//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/cache/ReferenceEntry.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCacheReferenceEntry")
#ifdef RESTRICT_ComGoogleCommonCacheReferenceEntry
#define INCLUDE_ALL_ComGoogleCommonCacheReferenceEntry 0
#else
#define INCLUDE_ALL_ComGoogleCommonCacheReferenceEntry 1
#endif
#undef RESTRICT_ComGoogleCommonCacheReferenceEntry

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCacheReferenceEntry_) && (INCLUDE_ALL_ComGoogleCommonCacheReferenceEntry || defined(INCLUDE_ComGoogleCommonCacheReferenceEntry))
#define ComGoogleCommonCacheReferenceEntry_

@protocol ComGoogleCommonCacheLocalCache_ValueReference;

/*!
 @brief An entry in a reference map.
 <p>Entries in the map can be in the following states: 
 <p>Valid:
  
 <ul>
    <li>Live: valid key/value are set
    <li>Loading: loading is pending 
 </ul>
  
 <p>Invalid:
  
 <ul>
    <li>Expired: time expired (key/value may still be set)
    <li>Collected: key/value was partially collected, but not yet cleaned up
    <li>Unset: marked as unset, awaiting cleanup or reuse 
 </ul>
 */
@protocol ComGoogleCommonCacheReferenceEntry < JavaObject >

/*!
 @brief Returns the value reference from this entry.
 */
- (id<ComGoogleCommonCacheLocalCache_ValueReference>)getValueReference;

/*!
 @brief Sets the value reference for this entry.
 */
- (void)setValueReferenceWithComGoogleCommonCacheLocalCache_ValueReference:(id<ComGoogleCommonCacheLocalCache_ValueReference>)valueReference;

/*!
 @brief Returns the next entry in the chain.
 */
- (id<ComGoogleCommonCacheReferenceEntry> __nullable)getNext;

/*!
 @brief Returns the entry's hash.
 */
- (jint)getHash;

/*!
 @brief Returns the key for this entry.
 */
- (id)getKey;

/*!
 @brief Returns the time that this entry was last accessed, in ns.
 */
- (jlong)getAccessTime;

/*!
 @brief Sets the entry access time in ns.
 */
- (void)setAccessTimeWithLong:(jlong)time;

/*!
 @brief Returns the next entry in the access queue.
 */
- (id<ComGoogleCommonCacheReferenceEntry>)getNextInAccessQueue;

/*!
 @brief Sets the next entry in the access queue.
 */
- (void)setNextInAccessQueueWithComGoogleCommonCacheReferenceEntry:(id<ComGoogleCommonCacheReferenceEntry>)next;

/*!
 @brief Returns the previous entry in the access queue.
 */
- (id<ComGoogleCommonCacheReferenceEntry>)getPreviousInAccessQueue;

/*!
 @brief Sets the previous entry in the access queue.
 */
- (void)setPreviousInAccessQueueWithComGoogleCommonCacheReferenceEntry:(id<ComGoogleCommonCacheReferenceEntry>)previous;

/*!
 @brief Returns the time that this entry was last written, in ns.
 */
- (jlong)getWriteTime;

/*!
 @brief Sets the entry write time in ns.
 */
- (void)setWriteTimeWithLong:(jlong)time;

/*!
 @brief Returns the next entry in the write queue.
 */
- (id<ComGoogleCommonCacheReferenceEntry>)getNextInWriteQueue;

/*!
 @brief Sets the next entry in the write queue.
 */
- (void)setNextInWriteQueueWithComGoogleCommonCacheReferenceEntry:(id<ComGoogleCommonCacheReferenceEntry>)next;

/*!
 @brief Returns the previous entry in the write queue.
 */
- (id<ComGoogleCommonCacheReferenceEntry>)getPreviousInWriteQueue;

/*!
 @brief Sets the previous entry in the write queue.
 */
- (void)setPreviousInWriteQueueWithComGoogleCommonCacheReferenceEntry:(id<ComGoogleCommonCacheReferenceEntry>)previous;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCacheReferenceEntry)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheReferenceEntry)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCacheReferenceEntry")
