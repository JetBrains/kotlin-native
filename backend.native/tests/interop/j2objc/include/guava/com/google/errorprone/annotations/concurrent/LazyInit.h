//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/errorprone/annotations/concurrent/LazyInit.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit")
#ifdef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentLazyInit
#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit 0
#else
#define INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit 1
#endif
#undef RESTRICT_ComGoogleErrorproneAnnotationsConcurrentLazyInit

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleErrorproneAnnotationsConcurrentLazyInit_) && (INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit || defined(INCLUDE_ComGoogleErrorproneAnnotationsConcurrentLazyInit))
#define ComGoogleErrorproneAnnotationsConcurrentLazyInit_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Use this annotation on any static or field that will be initialized lazily, where races yield no
  semantic difference in the code.The canonical example of this is String.hashCode(): 
 @code
 public int hashCode() {
    int h = hash;
    if (h == 0 && value.length > 0) {
      char val[] = value;
      for (int i = 0; i < value.length; i++) {
        h = 31 * h + val[i];
      }
      hash = h;
    }
    return h;
  } 
 
@endcode
 */
@protocol ComGoogleErrorproneAnnotationsConcurrentLazyInit < JavaLangAnnotationAnnotation >

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComGoogleErrorproneAnnotationsConcurrentLazyInit : NSObject < ComGoogleErrorproneAnnotationsConcurrentLazyInit >

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleErrorproneAnnotationsConcurrentLazyInit)

FOUNDATION_EXPORT id<ComGoogleErrorproneAnnotationsConcurrentLazyInit> create_ComGoogleErrorproneAnnotationsConcurrentLazyInit(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleErrorproneAnnotationsConcurrentLazyInit)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleErrorproneAnnotationsConcurrentLazyInit")
