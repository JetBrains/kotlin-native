//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/cache/RemovalCause.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCacheRemovalCause")
#ifdef RESTRICT_ComGoogleCommonCacheRemovalCause
#define INCLUDE_ALL_ComGoogleCommonCacheRemovalCause 0
#else
#define INCLUDE_ALL_ComGoogleCommonCacheRemovalCause 1
#endif
#undef RESTRICT_ComGoogleCommonCacheRemovalCause

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCacheRemovalCause_) && (INCLUDE_ALL_ComGoogleCommonCacheRemovalCause || defined(INCLUDE_ComGoogleCommonCacheRemovalCause))
#define ComGoogleCommonCacheRemovalCause_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComGoogleCommonCacheRemovalCause_Enum) {
  ComGoogleCommonCacheRemovalCause_Enum_EXPLICIT = 0,
  ComGoogleCommonCacheRemovalCause_Enum_REPLACED = 1,
  ComGoogleCommonCacheRemovalCause_Enum_COLLECTED = 2,
  ComGoogleCommonCacheRemovalCause_Enum_EXPIRED = 3,
  ComGoogleCommonCacheRemovalCause_Enum_SIZE = 4,
};

/*!
 @brief The reason why a cached entry was removed.
 @author Charles Fry
 @since 10.0
 */
@interface ComGoogleCommonCacheRemovalCause : JavaLangEnum

@property (readonly, class, nonnull) ComGoogleCommonCacheRemovalCause *EXPLICIT NS_SWIFT_NAME(EXPLICIT);
@property (readonly, class, nonnull) ComGoogleCommonCacheRemovalCause *REPLACED NS_SWIFT_NAME(REPLACED);
@property (readonly, class, nonnull) ComGoogleCommonCacheRemovalCause *COLLECTED NS_SWIFT_NAME(COLLECTED);
@property (readonly, class, nonnull) ComGoogleCommonCacheRemovalCause *EXPIRED NS_SWIFT_NAME(EXPIRED);
@property (readonly, class, nonnull) ComGoogleCommonCacheRemovalCause *SIZE NS_SWIFT_NAME(SIZE);
+ (ComGoogleCommonCacheRemovalCause * __nonnull)EXPLICIT;

+ (ComGoogleCommonCacheRemovalCause * __nonnull)REPLACED;

+ (ComGoogleCommonCacheRemovalCause * __nonnull)COLLECTED;

+ (ComGoogleCommonCacheRemovalCause * __nonnull)EXPIRED;

+ (ComGoogleCommonCacheRemovalCause * __nonnull)SIZE;

#pragma mark Public

+ (ComGoogleCommonCacheRemovalCause *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

/*!
 @brief Returns <code>true</code> if there was an automatic removal due to eviction (the cause is neither 
 <code>EXPLICIT</code> nor <code>REPLACED</code>).
 */
- (jboolean)wasEvicted;

- (ComGoogleCommonCacheRemovalCause_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonCacheRemovalCause)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_values_[];

/*!
 @brief The entry was manually removed by the user.This can result from the user invoking <code>Cache.invalidate</code>
 , <code>Cache.invalidateAll(Iterable)</code>, <code>Cache.invalidateAll()</code>, <code>Map.remove</code>
 , <code>ConcurrentMap.remove</code>, or <code>Iterator.remove</code>.
 */
inline ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_get_EXPLICIT(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonCacheRemovalCause, EXPLICIT)

/*!
 @brief The entry itself was not actually removed, but its value was replaced by the user.This can
  result from the user invoking <code>Cache.put</code>, <code>LoadingCache.refresh</code>, <code>Map.put</code>,
  <code>Map.putAll</code>, <code>ConcurrentMap.replace(Object, Object)</code>, or <code>ConcurrentMap.replace(Object, Object, Object)</code>
 .
 */
inline ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_get_REPLACED(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonCacheRemovalCause, REPLACED)

/*!
 @brief The entry was removed automatically because its key or value was garbage-collected.This can
  occur when using <code>CacheBuilder.weakKeys</code>, <code>CacheBuilder.weakValues</code>, or <code>CacheBuilder.softValues</code>
 .
 */
inline ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_get_COLLECTED(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonCacheRemovalCause, COLLECTED)

/*!
 @brief The entry's expiration timestamp has passed.This can occur when using <code>CacheBuilder.expireAfterWrite</code>
  or <code>CacheBuilder.expireAfterAccess</code>.
 */
inline ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_get_EXPIRED(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonCacheRemovalCause, EXPIRED)

/*!
 @brief The entry was evicted due to size constraints.This can occur when using <code>CacheBuilder.maximumSize</code>
  or <code>CacheBuilder.maximumWeight</code>.
 */
inline ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_get_SIZE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonCacheRemovalCause, SIZE)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonCacheRemovalCause_values(void);

FOUNDATION_EXPORT ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonCacheRemovalCause *ComGoogleCommonCacheRemovalCause_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCacheRemovalCause)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCacheRemovalCause")
