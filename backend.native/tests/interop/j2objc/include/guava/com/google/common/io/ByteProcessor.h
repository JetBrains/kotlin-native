//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/io/ByteProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonIoByteProcessor")
#ifdef RESTRICT_ComGoogleCommonIoByteProcessor
#define INCLUDE_ALL_ComGoogleCommonIoByteProcessor 0
#else
#define INCLUDE_ALL_ComGoogleCommonIoByteProcessor 1
#endif
#undef RESTRICT_ComGoogleCommonIoByteProcessor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonIoByteProcessor_) && (INCLUDE_ALL_ComGoogleCommonIoByteProcessor || defined(INCLUDE_ComGoogleCommonIoByteProcessor))
#define ComGoogleCommonIoByteProcessor_

@class IOSByteArray;

/*!
 @brief A callback interface to process bytes from a stream.
 <p><code>processBytes</code> will be called for each chunk of data that is read, and should return 
 <code>false</code> when you want to stop processing.
 @author Chris Nokleberg
 @since 1.0
 */
@protocol ComGoogleCommonIoByteProcessor < JavaObject >

/*!
 @brief This method will be called for each chunk of bytes in an input stream.The implementation
  should process the bytes from <code>buf[off]</code> through <code>buf[off + len - 1]</code> (inclusive).
 @param buf the byte array containing the data to process
 @param off the initial offset into the array
 @param len the length of data to be processed
 @return true to continue processing, false to stop
 */
- (jboolean)processBytesWithByteArray:(IOSByteArray * __nonnull)buf
                              withInt:(jint)off
                              withInt:(jint)len;

/*!
 @brief Return the result of processing all the bytes.
 */
- (id)getResult;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonIoByteProcessor)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonIoByteProcessor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonIoByteProcessor")
