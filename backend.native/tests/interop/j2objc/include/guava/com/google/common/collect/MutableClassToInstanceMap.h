//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/collect/MutableClassToInstanceMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectMutableClassToInstanceMap")
#ifdef RESTRICT_ComGoogleCommonCollectMutableClassToInstanceMap
#define INCLUDE_ALL_ComGoogleCommonCollectMutableClassToInstanceMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectMutableClassToInstanceMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectMutableClassToInstanceMap

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectMutableClassToInstanceMap_) && (INCLUDE_ALL_ComGoogleCommonCollectMutableClassToInstanceMap || defined(INCLUDE_ComGoogleCommonCollectMutableClassToInstanceMap))
#define ComGoogleCommonCollectMutableClassToInstanceMap_

#define RESTRICT_ComGoogleCommonCollectForwardingMap 1
#define INCLUDE_ComGoogleCommonCollectForwardingMap 1
#include "com/google/common/collect/ForwardingMap.h"

#define RESTRICT_ComGoogleCommonCollectClassToInstanceMap 1
#define INCLUDE_ComGoogleCommonCollectClassToInstanceMap 1
#include "com/google/common/collect/ClassToInstanceMap.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSClass;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief A mutable class-to-instance map backed by an arbitrary user-provided map.See also <code>ImmutableClassToInstanceMap</code>
 .
 <p>See the Guava User Guide article on <a href="https://github.com/google/guava/wiki/NewCollectionTypesExplained#classtoinstancemap">
  <code>ClassToInstanceMap</code>
 </a>.
 @author Kevin Bourrillion
 @since 2.0
 */
@interface ComGoogleCommonCollectMutableClassToInstanceMap : ComGoogleCommonCollectForwardingMap < ComGoogleCommonCollectClassToInstanceMap, JavaIoSerializable >

#pragma mark Public

/*!
 @brief Returns a new <code>MutableClassToInstanceMap</code> instance backed by a <code>HashMap</code> using the
  default initial capacity and load factor.
 */
+ (ComGoogleCommonCollectMutableClassToInstanceMap *)create;

/*!
 @brief Returns a new <code>MutableClassToInstanceMap</code> instance backed by a given empty <code>backingMap</code>
 .The caller surrenders control of the backing map, and thus should not allow any
  direct references to it to remain accessible.
 */
+ (ComGoogleCommonCollectMutableClassToInstanceMap *)createWithJavaUtilMap:(id<JavaUtilMap>)backingMap;

- (id<JavaUtilSet>)entrySet;

- (id)getInstanceWithIOSClass:(IOSClass *)type;

- (id)putWithId:(IOSClass *)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)putInstanceWithIOSClass:(IOSClass *)type
                       withId:(id)value;

#pragma mark Protected

- (id<JavaUtilMap>)delegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectMutableClassToInstanceMap)

FOUNDATION_EXPORT ComGoogleCommonCollectMutableClassToInstanceMap *ComGoogleCommonCollectMutableClassToInstanceMap_create(void);

FOUNDATION_EXPORT ComGoogleCommonCollectMutableClassToInstanceMap *ComGoogleCommonCollectMutableClassToInstanceMap_createWithJavaUtilMap_(id<JavaUtilMap> backingMap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectMutableClassToInstanceMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectMutableClassToInstanceMap")
