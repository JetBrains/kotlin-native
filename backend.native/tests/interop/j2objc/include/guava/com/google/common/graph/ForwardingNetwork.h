//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/graph/ForwardingNetwork.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphForwardingNetwork")
#ifdef RESTRICT_ComGoogleCommonGraphForwardingNetwork
#define INCLUDE_ALL_ComGoogleCommonGraphForwardingNetwork 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphForwardingNetwork 1
#endif
#undef RESTRICT_ComGoogleCommonGraphForwardingNetwork

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphForwardingNetwork_) && (INCLUDE_ALL_ComGoogleCommonGraphForwardingNetwork || defined(INCLUDE_ComGoogleCommonGraphForwardingNetwork))
#define ComGoogleCommonGraphForwardingNetwork_

#define RESTRICT_ComGoogleCommonGraphAbstractNetwork 1
#define INCLUDE_ComGoogleCommonGraphAbstractNetwork 1
#include "com/google/common/graph/AbstractNetwork.h"

@class ComGoogleCommonGraphElementOrder;
@class ComGoogleCommonGraphEndpointPair;
@class JavaUtilOptional;
@protocol ComGoogleCommonGraphNetwork;
@protocol JavaUtilSet;

/*!
 @brief A class to allow <code>Network</code> implementations to be backed by a provided delegate.This is not
  currently planned to be released as a general-purpose forwarding class.
 @author James Sexton
 @author Joshua O'Madadhain
 */
@interface ComGoogleCommonGraphForwardingNetwork : ComGoogleCommonGraphAbstractNetwork

#pragma mark Public

- (id<JavaUtilSet>)adjacentEdgesWithId:(id)edge;

- (id<JavaUtilSet>)adjacentNodesWithId:(id)node;

- (jboolean)allowsParallelEdges;

- (jboolean)allowsSelfLoops;

- (jint)degreeWithId:(id)node;

- (JavaUtilOptional *)edgeConnectingWithId:(id)nodeU
                                    withId:(id)nodeV;

- (id)edgeConnectingOrNullWithId:(id)nodeU
                          withId:(id)nodeV;

- (ComGoogleCommonGraphElementOrder *)edgeOrder;

- (id<JavaUtilSet>)edges;

- (id<JavaUtilSet>)edgesConnectingWithId:(id)nodeU
                                  withId:(id)nodeV;

- (jboolean)hasEdgeConnectingWithId:(id)nodeU
                             withId:(id)nodeV;

- (id<JavaUtilSet>)incidentEdgesWithId:(id)node;

- (ComGoogleCommonGraphEndpointPair *)incidentNodesWithId:(id)edge;

- (jint)inDegreeWithId:(id)node;

- (id<JavaUtilSet>)inEdgesWithId:(id)node;

- (jboolean)isDirected;

- (ComGoogleCommonGraphElementOrder *)nodeOrder;

- (id<JavaUtilSet>)nodes;

- (jint)outDegreeWithId:(id)node;

- (id<JavaUtilSet>)outEdgesWithId:(id)node;

- (id<JavaUtilSet>)predecessorsWithId:(id)node;

- (id<JavaUtilSet>)successorsWithId:(id)node;

#pragma mark Protected

- (id<ComGoogleCommonGraphNetwork>)delegate;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphForwardingNetwork)

FOUNDATION_EXPORT void ComGoogleCommonGraphForwardingNetwork_initPackagePrivate(ComGoogleCommonGraphForwardingNetwork *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphForwardingNetwork)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphForwardingNetwork")
