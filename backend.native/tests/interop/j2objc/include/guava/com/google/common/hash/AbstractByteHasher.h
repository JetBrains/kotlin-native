//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/hash/AbstractByteHasher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonHashAbstractByteHasher")
#ifdef RESTRICT_ComGoogleCommonHashAbstractByteHasher
#define INCLUDE_ALL_ComGoogleCommonHashAbstractByteHasher 0
#else
#define INCLUDE_ALL_ComGoogleCommonHashAbstractByteHasher 1
#endif
#undef RESTRICT_ComGoogleCommonHashAbstractByteHasher

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonHashAbstractByteHasher_) && (INCLUDE_ALL_ComGoogleCommonHashAbstractByteHasher || defined(INCLUDE_ComGoogleCommonHashAbstractByteHasher))
#define ComGoogleCommonHashAbstractByteHasher_

#define RESTRICT_ComGoogleCommonHashAbstractHasher 1
#define INCLUDE_ComGoogleCommonHashAbstractHasher 1
#include "com/google/common/hash/AbstractHasher.h"

@class IOSByteArray;
@class JavaNioByteBuffer;
@protocol ComGoogleCommonHashHasher;

/*!
 @brief Abstract <code>Hasher</code> that handles converting primitives to bytes using a scratch <code>ByteBuffer</code>
  and streams all bytes to a sink to compute the hash.
 @author Colin Decker
 */
@interface ComGoogleCommonHashAbstractByteHasher : ComGoogleCommonHashAbstractHasher

#pragma mark Public

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray * __nonnull)bytes;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray * __nonnull)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len;

- (id<ComGoogleCommonHashHasher>)putBytesWithJavaNioByteBuffer:(JavaNioByteBuffer * __nonnull)bytes;

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c;

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i;

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l;

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s;

#pragma mark Protected

/*!
 @brief Updates this hasher with the given byte.
 */
- (void)updateWithByte:(jbyte)b;

/*!
 @brief Updates this hasher with the given bytes.
 */
- (void)updateWithByteArray:(IOSByteArray * __nonnull)b;

/*!
 @brief Updates this hasher with <code>len</code> bytes starting at <code>off</code> in the given buffer.
 */
- (void)updateWithByteArray:(IOSByteArray * __nonnull)b
                    withInt:(jint)off
                    withInt:(jint)len;

/*!
 @brief Updates this hasher with bytes from the given buffer.
 */
- (void)updateWithJavaNioByteBuffer:(JavaNioByteBuffer * __nonnull)b;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashAbstractByteHasher)

FOUNDATION_EXPORT void ComGoogleCommonHashAbstractByteHasher_initPackagePrivate(ComGoogleCommonHashAbstractByteHasher *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashAbstractByteHasher)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonHashAbstractByteHasher")
