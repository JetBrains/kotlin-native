//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/collect/SortedMultiset.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectSortedMultiset")
#ifdef RESTRICT_ComGoogleCommonCollectSortedMultiset
#define INCLUDE_ALL_ComGoogleCommonCollectSortedMultiset 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectSortedMultiset 1
#endif
#undef RESTRICT_ComGoogleCommonCollectSortedMultiset

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectSortedMultiset_) && (INCLUDE_ALL_ComGoogleCommonCollectSortedMultiset || defined(INCLUDE_ComGoogleCommonCollectSortedMultiset))
#define ComGoogleCommonCollectSortedMultiset_

#define RESTRICT_ComGoogleCommonCollectSortedMultisetBridge 1
#define INCLUDE_ComGoogleCommonCollectSortedMultisetBridge 1
#include "com/google/common/collect/SortedMultisetBridge.h"

#define RESTRICT_ComGoogleCommonCollectSortedIterable 1
#define INCLUDE_ComGoogleCommonCollectSortedIterable 1
#include "com/google/common/collect/SortedIterable.h"

@class ComGoogleCommonCollectBoundType;
@protocol ComGoogleCommonCollectMultiset_Entry;
@protocol JavaUtilComparator;
@protocol JavaUtilIterator;
@protocol JavaUtilNavigableSet;
@protocol JavaUtilSet;

/*!
 @brief A <code>Multiset</code> which maintains the ordering of its elements, according to either their
  natural order or an explicit <code>Comparator</code>.This order is reflected when iterating over the
  sorted multiset, either directly, or through its <code>elementSet</code> or <code>entrySet</code> views.
 In
  all cases, this implementation uses <code>Comparable.compareTo</code> or <code>Comparator.compare</code>
  instead of <code>Object.equals</code> to determine equivalence of instances. 
 <p><b>Warning:</b> The comparison must be <i>consistent with equals</i> as explained by the 
 <code>Comparable</code> class specification. Otherwise, the resulting multiset will violate the <code>Collection</code>
  contract, which it is specified in terms of <code>Object.equals</code>.
  
 <p>See the Guava User Guide article on <a href="https://github.com/google/guava/wiki/NewCollectionTypesExplained#multiset">
  <code>Multiset</code>
 </a>.
 @author Louis Wasserman
 @since 11.0
 */
@protocol ComGoogleCommonCollectSortedMultiset < ComGoogleCommonCollectSortedMultisetBridge, ComGoogleCommonCollectSortedIterable, JavaObject >

/*!
 @brief Returns the comparator that orders this multiset, or <code>Ordering.natural()</code> if the natural
  ordering of the elements is used.
 */
- (id<JavaUtilComparator>)comparator;

/*!
 @brief Returns the entry of the first element in this multiset, or <code>null</code> if this multiset is
  empty.
 */
- (id<ComGoogleCommonCollectMultiset_Entry>)firstEntry;

/*!
 @brief Returns the entry of the last element in this multiset, or <code>null</code> if this multiset is
  empty.
 */
- (id<ComGoogleCommonCollectMultiset_Entry>)lastEntry;

/*!
 @brief Returns and removes the entry associated with the lowest element in this multiset, or returns 
 <code>null</code> if this multiset is empty.
 */
- (id<ComGoogleCommonCollectMultiset_Entry>)pollFirstEntry;

/*!
 @brief Returns and removes the entry associated with the greatest element in this multiset, or returns 
 <code>null</code> if this multiset is empty.
 */
- (id<ComGoogleCommonCollectMultiset_Entry>)pollLastEntry;

/*!
 @brief Returns a <code>NavigableSet</code> view of the distinct elements in this multiset.
 @since 14.0 (present with return type <code>SortedSet</code> since 11.0)
 */
- (id<JavaUtilNavigableSet>)elementSet;

/*!
 @brief <p>The <code>entrySet</code>'s iterator returns entries in ascending element order according to the
  this multiset's comparator.
 */
- (id<JavaUtilSet>)entrySet;

/*!
 @brief <p>The iterator returns the elements in ascending order according to this multiset's
  comparator.
 */
- (id<JavaUtilIterator>)iterator;

/*!
 @brief Returns a descending view of this multiset.Modifications made to either map will be reflected
  in the other.
 */
- (id<ComGoogleCommonCollectSortedMultiset>)descendingMultiset;

/*!
 @brief Returns a view of this multiset restricted to the elements less than <code>upperBound</code>,
  optionally including <code>upperBound</code> itself.The returned multiset is a view of this
  multiset, so changes to one will be reflected in the other.
 The returned multiset supports all
  operations that this multiset supports. 
 <p>The returned multiset will throw an <code>IllegalArgumentException</code> on attempts to add
  elements outside its range.
 */
- (id<ComGoogleCommonCollectSortedMultiset>)headMultisetWithId:(id)upperBound
                           withComGoogleCommonCollectBoundType:(ComGoogleCommonCollectBoundType *)boundType;

/*!
 @brief Returns a view of this multiset restricted to the range between <code>lowerBound</code> and <code>upperBound</code>
 .The returned multiset is a view of this multiset, so changes to one will be
  reflected in the other.
 The returned multiset supports all operations that this multiset
  supports. 
 <p>The returned multiset will throw an <code>IllegalArgumentException</code> on attempts to add
  elements outside its range. 
 <p>This method is equivalent to <code>tailMultiset(lowerBound,
  lowerBoundType).headMultiset(upperBound, upperBoundType)</code>
 .
 */
- (id<ComGoogleCommonCollectSortedMultiset>)subMultisetWithId:(id)lowerBound
                          withComGoogleCommonCollectBoundType:(ComGoogleCommonCollectBoundType *)lowerBoundType
                                                       withId:(id)upperBound
                          withComGoogleCommonCollectBoundType:(ComGoogleCommonCollectBoundType *)upperBoundType;

/*!
 @brief Returns a view of this multiset restricted to the elements greater than <code>lowerBound</code>,
  optionally including <code>lowerBound</code> itself.The returned multiset is a view of this
  multiset, so changes to one will be reflected in the other.
 The returned multiset supports all
  operations that this multiset supports. 
 <p>The returned multiset will throw an <code>IllegalArgumentException</code> on attempts to add
  elements outside its range.
 */
- (id<ComGoogleCommonCollectSortedMultiset>)tailMultisetWithId:(id)lowerBound
                           withComGoogleCommonCollectBoundType:(ComGoogleCommonCollectBoundType *)boundType;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectSortedMultiset)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectSortedMultiset)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectSortedMultiset")
