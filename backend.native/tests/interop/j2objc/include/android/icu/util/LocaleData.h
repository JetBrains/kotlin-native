//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/external/icu/android_icu4j/src/main/java/android/icu/util/LocaleData.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidIcuUtilLocaleData")
#ifdef RESTRICT_AndroidIcuUtilLocaleData
#define INCLUDE_ALL_AndroidIcuUtilLocaleData 0
#else
#define INCLUDE_ALL_AndroidIcuUtilLocaleData 1
#endif
#undef RESTRICT_AndroidIcuUtilLocaleData

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidIcuUtilLocaleData_) && (INCLUDE_ALL_AndroidIcuUtilLocaleData || defined(INCLUDE_AndroidIcuUtilLocaleData))
#define AndroidIcuUtilLocaleData_

@class AndroidIcuTextUnicodeSet;
@class AndroidIcuUtilLocaleData_MeasurementSystem;
@class AndroidIcuUtilLocaleData_PaperSize;
@class AndroidIcuUtilULocale;
@class AndroidIcuUtilVersionInfo;

/*!
 @brief A class for accessing miscellaneous data in the locale bundles
 @author ram
 */
@interface AndroidIcuUtilLocaleData : NSObject
@property (readonly, class) jint ES_STANDARD NS_SWIFT_NAME(ES_STANDARD);
@property (readonly, class) jint ES_AUXILIARY NS_SWIFT_NAME(ES_AUXILIARY);
@property (readonly, class) jint ES_INDEX NS_SWIFT_NAME(ES_INDEX);
@property (readonly, class) jint ES_CURRENCY NS_SWIFT_NAME(ES_CURRENCY);
@property (readonly, class) jint ES_PUNCTUATION NS_SWIFT_NAME(ES_PUNCTUATION);
@property (readonly, class) jint ES_COUNT NS_SWIFT_NAME(ES_COUNT);
@property (readonly, class) jint QUOTATION_START NS_SWIFT_NAME(QUOTATION_START);
@property (readonly, class) jint QUOTATION_END NS_SWIFT_NAME(QUOTATION_END);
@property (readonly, class) jint ALT_QUOTATION_START NS_SWIFT_NAME(ALT_QUOTATION_START);
@property (readonly, class) jint ALT_QUOTATION_END NS_SWIFT_NAME(ALT_QUOTATION_END);
@property (readonly, class) jint DELIMITER_COUNT NS_SWIFT_NAME(DELIMITER_COUNT);

+ (jint)ES_STANDARD;

+ (jint)ES_AUXILIARY;

+ (jint)ES_INDEX;

+ (jint)ES_CURRENCY;

+ (jint)ES_PUNCTUATION;

+ (jint)ES_COUNT;

+ (jint)QUOTATION_START;

+ (jint)QUOTATION_END;

+ (jint)ALT_QUOTATION_START;

+ (jint)ALT_QUOTATION_END;

+ (jint)DELIMITER_COUNT;

#pragma mark Public

/*!
 @brief Returns the current CLDR version
 */
+ (AndroidIcuUtilVersionInfo *)getCLDRVersion;

/*!
 @brief Retrieves a delimiter string from the locale data.
 @param type The type of delimiter string desired.  Currently,                   the valid choices are QUOTATION_START, QUOTATION_END,
                    ALT_QUOTATION_START, or ALT_QUOTATION_END.
 @return The desired delimiter string.
 */
- (NSString *)getDelimiterWithInt:(jint)type;

/*!
 @brief Returns the set of exemplar characters for a locale.
 @param options Bitmask for options to apply to the exemplar pattern.                   Specify zero to retrieve the exemplar set as it is
                    defined in the locale data.  Specify
                    UnicodeSet.CASE to retrieve a case-folded exemplar
                    set.  See 
 <code>UnicodeSet.applyPattern(String,
                  int)</code>
   for a complete list of valid options.  The                   IGNORE_SPACE bit is always set, regardless of the
                    value of 'options'.
 @param extype The type of exemplar set to be retrieved,                   ES_STANDARD, ES_INDEX, ES_AUXILIARY, or ES_PUNCTUATION
 @return The set of exemplar characters for the given locale.
                   If there is nothing available for the locale,
                   then null is returned if <code>getNoSubstitute()</code> is true, otherwise the
                   root value is returned (which may be UnicodeSet.EMPTY).
 @throw RuntimeExceptionif the extype is invalid.
 */
- (AndroidIcuTextUnicodeSet *)getExemplarSetWithInt:(jint)options
                                            withInt:(jint)extype;

/*!
 @brief Returns the set of exemplar characters for a locale.Equivalent to calling <code>getExemplarSet(ULocale, int, int)</code> with
  the extype == <code>ES_STANDARD</code>.
 @param locale Locale for which the exemplar character set                   is to be retrieved.
 @param options Bitmask for options to apply to the exemplar pattern.                   Specify zero to retrieve the exemplar set as it is
                    defined in the locale data.  Specify
                    UnicodeSet.CASE to retrieve a case-folded exemplar
                    set.  See 
 <code>UnicodeSet.applyPattern(String,
                  int)</code>
   for a complete list of valid options.  The                   IGNORE_SPACE bit is always set, regardless of the
                    value of 'options'.
 @return The set of exemplar characters for the given locale.
 */
+ (AndroidIcuTextUnicodeSet *)getExemplarSetWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale
                                                              withInt:(jint)options;

/*!
 @brief Returns the set of exemplar characters for a locale.
 Equivalent to calling new LocaleData(locale).<code>getExemplarSet(int, int)</code>.
 @param locale Locale for which the exemplar character set                   is to be retrieved.
 @param options Bitmask for options to apply to the exemplar pattern.                   Specify zero to retrieve the exemplar set as it is
                    defined in the locale data.  Specify
                    UnicodeSet.CASE to retrieve a case-folded exemplar
                    set.  See 
 <code>UnicodeSet.applyPattern(String,
                  int)</code>
   for a complete list of valid options.  The                   IGNORE_SPACE bit is always set, regardless of the
                    value of 'options'.
 @param extype The type of exemplar character set to retrieve.
 @return The set of exemplar characters for the given locale.
 */
+ (AndroidIcuTextUnicodeSet *)getExemplarSetWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale
                                                              withInt:(jint)options
                                                              withInt:(jint)extype;

/*!
 @brief Gets the LocaleData object associated with the default <code>FORMAT</code> locale
 @return A locale data object.
 - seealso: Category#FORMAT
 */
+ (AndroidIcuUtilLocaleData *)getInstance;

/*!
 @brief Gets the LocaleData object associated with the ULocale specified in locale
 @param locale Locale with thich the locale data object is associated.
 @return A locale data object.
 */
+ (AndroidIcuUtilLocaleData *)getInstanceWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale;

/*!
 @brief Returns LocaleDisplayPattern for this locale, e.g., {0}({1})
 @return locale display pattern as a String.
 */
- (NSString *)getLocaleDisplayPattern;

/*!
 @brief Returns LocaleDisplaySeparator for this locale.
 @return locale display separator as a char.
 */
- (NSString *)getLocaleSeparator;

/*!
 @brief Returns the measurement system used in the locale specified by the locale.
 @param locale The locale for which the measurement system to be retrieved.
 @return MeasurementSystem the measurement system used in the locale.
 */
+ (AndroidIcuUtilLocaleData_MeasurementSystem *)getMeasurementSystemWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale;

/*!
 @brief Gets the "no substitute" behavior of this locale data object.
 @return Value for the no substitute behavior.  If TRUE,
                   methods of this locale data object will return
                   an error when no data is available for that method,
                   given the locale ID supplied to the constructor.
 */
- (jboolean)getNoSubstitute;

/*!
 @brief Returns the size of paper used in the locale.The paper sizes returned are always in 
 <em>milli-meters</em>.
 @param locale The locale for which the measurement system to be retrieved.
 @return The paper size used in the locale
 */
+ (AndroidIcuUtilLocaleData_PaperSize *)getPaperSizeWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale;

/*!
 @brief Sets the "no substitute" behavior of this locale data object.
 @param setting Value for the no substitute behavior.  If TRUE,                   methods of this locale data object will return
                    an error when no data is available for that method,
                    given the locale ID supplied to the constructor.
 */
- (void)setNoSubstituteWithBoolean:(jboolean)setting;

@end

J2OBJC_STATIC_INIT(AndroidIcuUtilLocaleData)

/*!
 @brief EXType for <code>getExemplarSet(int, int)</code>.
 Corresponds to the 'main' (aka 'standard') CLDR exemplars in 
 <a href="http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements">
    http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.
 */
inline jint AndroidIcuUtilLocaleData_get_ES_STANDARD(void);
#define AndroidIcuUtilLocaleData_ES_STANDARD 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ES_STANDARD, jint)

/*!
 @brief EXType for <code>getExemplarSet(int, int)</code>.
 Corresponds to the 'auxiliary' CLDR exemplars in 
 <a href="http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements">
    http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.
 */
inline jint AndroidIcuUtilLocaleData_get_ES_AUXILIARY(void);
#define AndroidIcuUtilLocaleData_ES_AUXILIARY 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ES_AUXILIARY, jint)

/*!
 @brief EXType for <code>getExemplarSet(int, int)</code>.
 Corresponds to the 'index' CLDR exemplars in 
 <a href="http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements">
    http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.
 */
inline jint AndroidIcuUtilLocaleData_get_ES_INDEX(void);
#define AndroidIcuUtilLocaleData_ES_INDEX 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ES_INDEX, jint)

/*!
 @brief EXType for <code>getExemplarSet(int, int)</code>.
 Corresponds to the 'currencySymbol' CLDR exemplars in 
 <a href="http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements">
    http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.
  Note: This type is no longer supported.
 */
inline jint AndroidIcuUtilLocaleData_get_ES_CURRENCY(void);
#define AndroidIcuUtilLocaleData_ES_CURRENCY 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ES_CURRENCY, jint)

/*!
 @brief Corresponds to the 'punctuation' CLDR exemplars in 
 <a href="http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements">
    http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.
 EXType for <code>getExemplarSet(int, int)</code>.
 */
inline jint AndroidIcuUtilLocaleData_get_ES_PUNCTUATION(void);
#define AndroidIcuUtilLocaleData_ES_PUNCTUATION 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ES_PUNCTUATION, jint)

/*!
 @brief Count of EXTypes for <code>getExemplarSet(int, int)</code>.
 */
inline jint AndroidIcuUtilLocaleData_get_ES_COUNT(void);
#define AndroidIcuUtilLocaleData_ES_COUNT 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ES_COUNT, jint)

/*!
 @brief Delimiter type for <code>getDelimiter(int)</code>.
 */
inline jint AndroidIcuUtilLocaleData_get_QUOTATION_START(void);
#define AndroidIcuUtilLocaleData_QUOTATION_START 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, QUOTATION_START, jint)

/*!
 @brief Delimiter type for <code>getDelimiter(int)</code>.
 */
inline jint AndroidIcuUtilLocaleData_get_QUOTATION_END(void);
#define AndroidIcuUtilLocaleData_QUOTATION_END 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, QUOTATION_END, jint)

/*!
 @brief Delimiter type for <code>getDelimiter(int)</code>.
 */
inline jint AndroidIcuUtilLocaleData_get_ALT_QUOTATION_START(void);
#define AndroidIcuUtilLocaleData_ALT_QUOTATION_START 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ALT_QUOTATION_START, jint)

/*!
 @brief Delimiter type for <code>getDelimiter(int)</code>.
 */
inline jint AndroidIcuUtilLocaleData_get_ALT_QUOTATION_END(void);
#define AndroidIcuUtilLocaleData_ALT_QUOTATION_END 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, ALT_QUOTATION_END, jint)

/*!
 @brief Count of delimiter types for <code>getDelimiter(int)</code>.
 */
inline jint AndroidIcuUtilLocaleData_get_DELIMITER_COUNT(void);
#define AndroidIcuUtilLocaleData_DELIMITER_COUNT 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuUtilLocaleData, DELIMITER_COUNT, jint)

FOUNDATION_EXPORT AndroidIcuTextUnicodeSet *AndroidIcuUtilLocaleData_getExemplarSetWithAndroidIcuUtilULocale_withInt_(AndroidIcuUtilULocale *locale, jint options);

FOUNDATION_EXPORT AndroidIcuTextUnicodeSet *AndroidIcuUtilLocaleData_getExemplarSetWithAndroidIcuUtilULocale_withInt_withInt_(AndroidIcuUtilULocale *locale, jint options, jint extype);

FOUNDATION_EXPORT AndroidIcuUtilLocaleData *AndroidIcuUtilLocaleData_getInstanceWithAndroidIcuUtilULocale_(AndroidIcuUtilULocale *locale);

FOUNDATION_EXPORT AndroidIcuUtilLocaleData *AndroidIcuUtilLocaleData_getInstance(void);

FOUNDATION_EXPORT AndroidIcuUtilLocaleData_MeasurementSystem *AndroidIcuUtilLocaleData_getMeasurementSystemWithAndroidIcuUtilULocale_(AndroidIcuUtilULocale *locale);

FOUNDATION_EXPORT AndroidIcuUtilLocaleData_PaperSize *AndroidIcuUtilLocaleData_getPaperSizeWithAndroidIcuUtilULocale_(AndroidIcuUtilULocale *locale);

FOUNDATION_EXPORT AndroidIcuUtilVersionInfo *AndroidIcuUtilLocaleData_getCLDRVersion(void);

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuUtilLocaleData)

#endif

#if !defined (AndroidIcuUtilLocaleData_MeasurementSystem_) && (INCLUDE_ALL_AndroidIcuUtilLocaleData || defined(INCLUDE_AndroidIcuUtilLocaleData_MeasurementSystem))
#define AndroidIcuUtilLocaleData_MeasurementSystem_

/*!
 @brief Enumeration for representing the measurement systems.
 */
@interface AndroidIcuUtilLocaleData_MeasurementSystem : NSObject
@property (readonly, class, strong) AndroidIcuUtilLocaleData_MeasurementSystem *SI NS_SWIFT_NAME(SI);
@property (readonly, class, strong) AndroidIcuUtilLocaleData_MeasurementSystem *US NS_SWIFT_NAME(US);
@property (readonly, class, strong) AndroidIcuUtilLocaleData_MeasurementSystem *UK NS_SWIFT_NAME(UK);

+ (AndroidIcuUtilLocaleData_MeasurementSystem *)SI;

+ (AndroidIcuUtilLocaleData_MeasurementSystem *)US;

+ (AndroidIcuUtilLocaleData_MeasurementSystem *)UK;

@end

J2OBJC_STATIC_INIT(AndroidIcuUtilLocaleData_MeasurementSystem)

/*!
 @brief Measurement system specified by Le Syst&#x00E8;me International d'Unit&#x00E9;s (SI)
  otherwise known as Metric system.
 */
inline AndroidIcuUtilLocaleData_MeasurementSystem *AndroidIcuUtilLocaleData_MeasurementSystem_get_SI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilLocaleData_MeasurementSystem *AndroidIcuUtilLocaleData_MeasurementSystem_SI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilLocaleData_MeasurementSystem, SI, AndroidIcuUtilLocaleData_MeasurementSystem *)

/*!
 @brief Measurement system followed in the United States of America.
 */
inline AndroidIcuUtilLocaleData_MeasurementSystem *AndroidIcuUtilLocaleData_MeasurementSystem_get_US(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilLocaleData_MeasurementSystem *AndroidIcuUtilLocaleData_MeasurementSystem_US;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilLocaleData_MeasurementSystem, US, AndroidIcuUtilLocaleData_MeasurementSystem *)

/*!
 @brief Mix of metric and imperial units used in Great Britain.
 */
inline AndroidIcuUtilLocaleData_MeasurementSystem *AndroidIcuUtilLocaleData_MeasurementSystem_get_UK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilLocaleData_MeasurementSystem *AndroidIcuUtilLocaleData_MeasurementSystem_UK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilLocaleData_MeasurementSystem, UK, AndroidIcuUtilLocaleData_MeasurementSystem *)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuUtilLocaleData_MeasurementSystem)

#endif

#if !defined (AndroidIcuUtilLocaleData_PaperSize_) && (INCLUDE_ALL_AndroidIcuUtilLocaleData || defined(INCLUDE_AndroidIcuUtilLocaleData_PaperSize))
#define AndroidIcuUtilLocaleData_PaperSize_

/*!
 @brief A class that represents the size of letter head
  used in the country
 */
@interface AndroidIcuUtilLocaleData_PaperSize : NSObject

#pragma mark Public

/*!
 @brief Retruns the height of the paper
 @return the height
 */
- (jint)getHeight;

/*!
 @brief Returns the width of the paper
 @return the width
 */
- (jint)getWidth;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuUtilLocaleData_PaperSize)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuUtilLocaleData_PaperSize)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_AndroidIcuUtilLocaleData")
