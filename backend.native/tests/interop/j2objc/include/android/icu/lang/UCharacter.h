//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/external/icu/android_icu4j/src/main/java/android/icu/lang/UCharacter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidIcuLangUCharacter")
#ifdef RESTRICT_AndroidIcuLangUCharacter
#define INCLUDE_ALL_AndroidIcuLangUCharacter 0
#else
#define INCLUDE_ALL_AndroidIcuLangUCharacter 1
#endif
#undef RESTRICT_AndroidIcuLangUCharacter

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidIcuLangUCharacter_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter))
#define AndroidIcuLangUCharacter_

#define RESTRICT_AndroidIcuLangUCharacterEnums 1
#define INCLUDE_AndroidIcuLangUCharacterEnums_ECharacterCategory 1
#include "android/icu/lang/UCharacterEnums.h"

#define RESTRICT_AndroidIcuLangUCharacterEnums 1
#define INCLUDE_AndroidIcuLangUCharacterEnums_ECharacterDirection 1
#include "android/icu/lang/UCharacterEnums.h"

@class AndroidIcuTextBreakIterator;
@class AndroidIcuUtilULocale;
@class AndroidIcuUtilVersionInfo;
@class IOSCharArray;
@class JavaUtilLocale;
@protocol AndroidIcuUtilRangeValueIterator;
@protocol AndroidIcuUtilValueIterator;
@protocol JavaLangCharSequence;

/*!
 @brief <strong>[icu enhancement]</strong> ICU's replacement for <code>java.lang.Character</code>.
 &nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.
 <p>The UCharacter class provides extensions to the <code>java.lang.Character</code> class.
  These extensions provide support for more Unicode properties.
  Each ICU release supports the latest version of Unicode available at that time. 
 <p>For some time before Java 5 added support for supplementary Unicode code points,
  The ICU UCharacter class and many other ICU classes already supported them.
  Some UCharacter methods and constants were widened slightly differently than
  how the Character class methods and constants were widened later.
  In particular, <code>Character.MAX_VALUE</code> is still a char with the value U+FFFF,
  while the <code>UCharacter.MAX_VALUE</code> is an int with the value U+10FFFF. 
 <p>Code points are represented in these API using ints. While it would be
  more convenient in Java to have a separate primitive datatype for them,
  ints suffice in the meantime. 
 <p>Aside from the additions for UTF-16 support, and the updated Unicode
  properties, the main differences between UCharacter and Character are: 
 <ul>
  <li> UCharacter is not designed to be a char wrapper and does not have
       APIs to which involves management of that single char.<br>
       These include:      
 <ul>
         <li> char charValue(),
         <li> int compareTo(java.lang.Character, java.lang.Character), etc.
       </ul>
  <li> UCharacter does not include Character APIs that are deprecated, nor
       does it include the Java-specific character information, such as
       boolean isJavaIdentifierPart(char ch). 
 <li> Character maps characters 'A' - 'Z' and 'a' - 'z' to the numeric
       values '10' - '35'. UCharacter also does this in digit and
       getNumericValue, to adhere to the java semantics of these
       methods.  New methods unicodeDigit, and
       getUnicodeNumericValue do not treat the above code points
       as having numeric values.  This is a semantic change from ICU4J 1.3.1. 
 </ul>
  <p>
  In addition to Java compatibility functions, which calculate derived properties,
  this API provides low-level access to the Unicode Character Database. 
 <p>
  Unicode assigns each code point (not just assigned character) values for
  many properties.
  Most of them are simple boolean flags, or constants from a small enumerated list.
  For some properties, values are strings or other relatively more complex types. 
 <p>
  For more information see 
 <a href="http://www.unicode/org/ucd/">"About the Unicode Character Database"</a>
  (http://www.unicode.org/ucd/)
  and the <a href="http://www.icu-project.org/userguide/properties.html">ICU
  User Guide chapter on Properties</a>
  (http://www.icu-project.org/userguide/properties.html). 
 <p>
  There are also functions that provide easy migration from C/POSIX functions
  like isblank(). Their use is generally discouraged because the C/POSIX
  standards do not define their semantics beyond the ASCII range, which means
  that different implementations exhibit very different behavior.
  Instead, Unicode properties should be used directly. 
 <p>
  There are also only a few, broad C/POSIX character classes, and they tend
  to be used for conflicting purposes. For example, the "isalpha()" class
  is sometimes used to determine word boundaries, while a more sophisticated
  approach would at least distinguish initial letters from continuation
  characters (the latter including combining marks).
  (In ICU, BreakIterator is the most sophisticated API for word boundaries.)
  Another example: There is no "istitle()" class for titlecase characters. 
 <p>
  ICU 3.4 and later provides API access for all twelve C/POSIX character classes.
  ICU implements them according to the Standard Recommendations in
  Annex C: Compatibility Properties of UTS #18 Unicode Regular Expressions
  (http://www.unicode.org/reports/tr18/#Compatibility_Properties). 
 <p>
  API access for C/POSIX character classes is as follows: 
 @code
 - alpha:     isUAlphabetic(c) or hasBinaryProperty(c, UProperty.ALPHABETIC)
  - lower:     isULowercase(c) or hasBinaryProperty(c, UProperty.LOWERCASE)
  - upper:     isUUppercase(c) or hasBinaryProperty(c, UProperty.UPPERCASE)
  - punct:     ((1<<getType(c)) & ((1<<DASH_PUNCTUATION)|(1<<START_PUNCTUATION)|
                (1<<END_PUNCTUATION)|(1<<CONNECTOR_PUNCTUATION)|(1<<OTHER_PUNCTUATION)|
                (1<<INITIAL_PUNCTUATION)|(1<<FINAL_PUNCTUATION)))!=0
  - digit:     isDigit(c) or getType(c)==DECIMAL_DIGIT_NUMBER
  - xdigit:    hasBinaryProperty(c, UProperty.POSIX_XDIGIT)
  - alnum:     hasBinaryProperty(c, UProperty.POSIX_ALNUM)
  - space:     isUWhiteSpace(c) or hasBinaryProperty(c, UProperty.WHITE_SPACE)
  - blank:     hasBinaryProperty(c, UProperty.POSIX_BLANK)
  - cntrl:     getType(c)==CONTROL
  - graph:     hasBinaryProperty(c, UProperty.POSIX_GRAPH)
  - print:     hasBinaryProperty(c, UProperty.POSIX_PRINT)
 
@endcode
  <p>
  The C/POSIX character classes are also available in UnicodeSet patterns,
  using patterns like [:graph:] or \p{graph}. 
 <p><strong>[icu] Note:</strong> There are several ICU (and Java) whitespace functions.
  Comparison:<ul>
  <li> isUWhiteSpace=UCHAR_WHITE_SPACE: Unicode White_Space property;
        most of general categories "Z" (separators) + most whitespace ISO controls
        (including no-break spaces, but excluding IS1..IS4 and ZWSP) 
 <li> isWhitespace: Java isWhitespace; Z + whitespace ISO controls but excluding no-break spaces 
 <li> isSpaceChar: just Z (including no-break spaces)</ul>
  
 <p>
  This class is not subclassable.
 @author Syn Wee Quek
 - seealso: android.icu.lang.UCharacterEnums
 */
@interface AndroidIcuLangUCharacter : NSObject < AndroidIcuLangUCharacterEnums_ECharacterCategory, AndroidIcuLangUCharacterEnums_ECharacterDirection >
@property (readonly, class) jint MIN_VALUE NS_SWIFT_NAME(MIN_VALUE);
@property (readonly, class) jint MAX_VALUE NS_SWIFT_NAME(MAX_VALUE);
@property (readonly, class) jint SUPPLEMENTARY_MIN_VALUE NS_SWIFT_NAME(SUPPLEMENTARY_MIN_VALUE);
@property (readonly, class) jint REPLACEMENT_CHAR NS_SWIFT_NAME(REPLACEMENT_CHAR);
@property (readonly, class) jdouble NO_NUMERIC_VALUE NS_SWIFT_NAME(NO_NUMERIC_VALUE);
@property (readonly, class) jint MIN_RADIX NS_SWIFT_NAME(MIN_RADIX);
@property (readonly, class) jint MAX_RADIX NS_SWIFT_NAME(MAX_RADIX);
@property (readonly, class) jint TITLECASE_NO_LOWERCASE NS_SWIFT_NAME(TITLECASE_NO_LOWERCASE);
@property (readonly, class) jint TITLECASE_NO_BREAK_ADJUSTMENT NS_SWIFT_NAME(TITLECASE_NO_BREAK_ADJUSTMENT);
@property (readonly, class) jint FOLD_CASE_DEFAULT NS_SWIFT_NAME(FOLD_CASE_DEFAULT);
@property (readonly, class) jint FOLD_CASE_EXCLUDE_SPECIAL_I NS_SWIFT_NAME(FOLD_CASE_EXCLUDE_SPECIAL_I);
@property (readonly, class) jchar MIN_HIGH_SURROGATE NS_SWIFT_NAME(MIN_HIGH_SURROGATE);
@property (readonly, class) jchar MAX_HIGH_SURROGATE NS_SWIFT_NAME(MAX_HIGH_SURROGATE);
@property (readonly, class) jchar MIN_LOW_SURROGATE NS_SWIFT_NAME(MIN_LOW_SURROGATE);
@property (readonly, class) jchar MAX_LOW_SURROGATE NS_SWIFT_NAME(MAX_LOW_SURROGATE);
@property (readonly, class) jchar MIN_SURROGATE NS_SWIFT_NAME(MIN_SURROGATE);
@property (readonly, class) jchar MAX_SURROGATE NS_SWIFT_NAME(MAX_SURROGATE);
@property (readonly, class) jint MIN_SUPPLEMENTARY_CODE_POINT NS_SWIFT_NAME(MIN_SUPPLEMENTARY_CODE_POINT);
@property (readonly, class) jint MAX_CODE_POINT NS_SWIFT_NAME(MAX_CODE_POINT);
@property (readonly, class) jint MIN_CODE_POINT NS_SWIFT_NAME(MIN_CODE_POINT);

+ (jint)MIN_VALUE;

+ (jint)MAX_VALUE;

+ (jint)SUPPLEMENTARY_MIN_VALUE;

+ (jint)REPLACEMENT_CHAR;

+ (jdouble)NO_NUMERIC_VALUE;

+ (jint)MIN_RADIX;

+ (jint)MAX_RADIX;

+ (jint)TITLECASE_NO_LOWERCASE;

+ (jint)TITLECASE_NO_BREAK_ADJUSTMENT;

+ (jint)FOLD_CASE_DEFAULT;

+ (jint)FOLD_CASE_EXCLUDE_SPECIAL_I;

+ (jchar)MIN_HIGH_SURROGATE;

+ (jchar)MAX_HIGH_SURROGATE;

+ (jchar)MIN_LOW_SURROGATE;

+ (jchar)MAX_LOW_SURROGATE;

+ (jchar)MIN_SURROGATE;

+ (jchar)MAX_SURROGATE;

+ (jint)MIN_SUPPLEMENTARY_CODE_POINT;

+ (jint)MAX_CODE_POINT;

+ (jint)MIN_CODE_POINT;

#pragma mark Public

/*!
 @brief Same as <code>Character.charCount</code>.
 Returns the number of chars needed to represent the code point (1 or 2).
  This does not check the code point for validity.
 @param cp the code point to check
 @return the number of chars needed to represent the code point
 */
+ (jint)charCountWithInt:(jint)cp;

/*!
 @brief Same as <code>Character.codePointAt(char[], int)</code>.
 Returns the code point at index.
  This examines only the characters at index and index+1.
 @param text the characters to check
 @param index the index of the first or only char forming the code point
 @return the code point at the index
 */
+ (jint)codePointAtWithCharArray:(IOSCharArray *)text
                         withInt:(jint)index;

/*!
 @brief Same as <code>Character.codePointAt(char[], int, int)</code>.
 Returns the code point at index.
  This examines only the characters at index and index+1.
 @param text the characters to check
 @param index the index of the first or only char forming the code point
 @param limit the limit of the valid text
 @return the code point at the index
 */
+ (jint)codePointAtWithCharArray:(IOSCharArray *)text
                         withInt:(jint)index
                         withInt:(jint)limit;

/*!
 @brief Same as <code>Character.codePointAt(CharSequence, int)</code>.
 Returns the code point at index.
  This examines only the characters at index and index+1.
 @param seq the characters to check
 @param index the index of the first or only char forming the code point
 @return the code point at the index
 */
+ (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)index;

/*!
 @brief Same as <code>Character.codePointBefore(char[], int)</code>.
 Returns the code point before index.
  This examines only the characters at index-1 and index-2.
 @param text the characters to check
 @param index the index after the last or only char forming the code point
 @return the code point before the index
 */
+ (jint)codePointBeforeWithCharArray:(IOSCharArray *)text
                             withInt:(jint)index;

/*!
 @brief Same as <code>Character.codePointBefore(char[], int, int)</code>.
 Return the code point before index.
  This examines only the characters at index-1 and index-2.
 @param text the characters to check
 @param index the index after the last or only char forming the code point
 @param limit the start of the valid text
 @return the code point before the index
 */
+ (jint)codePointBeforeWithCharArray:(IOSCharArray *)text
                             withInt:(jint)index
                             withInt:(jint)limit;

/*!
 @brief Same as <code>Character.codePointBefore(CharSequence, int)</code>.
 Return the code point before index.
  This examines only the characters at index-1 and index-2.
 @param seq the characters to check
 @param index the index after the last or only char forming the code point
 @return the code point before the index
 */
+ (jint)codePointBeforeWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                        withInt:(jint)index;

/*!
 @brief Equivalent to the <code>Character.codePointCount(char[], int, int)</code> method, for
  convenience.Counts the number of code points in the range of text.
 @param text the characters to check
 @param start the start of the range
 @param limit the limit of the range
 @return the number of code points in the range
 */
+ (jint)codePointCountWithCharArray:(IOSCharArray *)text
                            withInt:(jint)start
                            withInt:(jint)limit;

/*!
 @brief Equivalent to the <code>Character.codePointCount(CharSequence, int, int)</code>
  method, for convenience.Counts the number of code points in the range
  of text.
 @param text the characters to check
 @param start the start of the range
 @param limit the limit of the range
 @return the number of code points in the range
 */
+ (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                       withInt:(jint)start
                                       withInt:(jint)limit;

/*!
 @brief Returnss the numeric value of a decimal digit code point.
 <br>This is a convenience overload of <code>digit(int, int)</code>
  that provides a decimal radix. 
 <br><em>Semantic Change:</em> In release 1.3.1 and prior, this
  treated numeric letters and other numbers as digits.  This has
  been changed to conform to the java semantics.
 @param ch the code point to query
 @return the numeric value represented by the code point,
  or -1 if the code point is not a decimal digit or if its
  value is too large for a decimal radix
 */
+ (jint)digitWithInt:(jint)ch;

/*!
 @brief Returnss the numeric value of a decimal digit code point.
 <br>This method observes the semantics of 
 <code>java.lang.Character.digit()</code>.  Note that this
  will return positive values for code points for which isDigit
  returns false, just like java.lang.Character. 
 <br><em>Semantic Change:</em> In release 1.3.1 and
  prior, this did not treat the European letters as having a
  digit value, and also treated numeric letters and other numbers as
  digits.
  This has been changed to conform to the java semantics. 
 <br>A code point is a valid digit if and only if: 
 <ul>
    <li>ch is a decimal digit or one of the european letters, and
    <li>the value of ch is less than the specified radix. 
 </ul>
 @param ch the code point to query
 @param radix the radix
 @return the numeric value represented by the code point in the
  specified radix, or -1 if the code point is not a decimal digit
  or if its value is too large for the radix
 */
+ (jint)digitWithInt:(jint)ch
             withInt:(jint)radix;

/*!
 @brief <strong>[icu]</strong> The given character is mapped to its case folding equivalent according
  to UnicodeData.txt and CaseFolding.txt; if the character has no case
  folding equivalent, the character itself is returned.
 <p>This function only returns the simple, single-code point case mapping.
  Full case mappings should be used whenever possible because they produce
  better results by working on whole strings.
  They can map to a result string with a different length as appropriate.
  Full case mappings are applied by the case mapping functions
  that take String parameters rather than code points (int).
  See also the User Guide chapter on C/POSIX migration:
  http://www.icu-project.org/userguide/posix.html#case_mappings
 @param ch the character to be converted
 @param defaultmapping Indicates whether the default mappings defined in                        CaseFolding.txt are to be used, otherwise the
                         mappings for dotted I and dotless i marked with
                         'T' in CaseFolding.txt are included.
 @return the case folding equivalent of the character, if
                        any; otherwise the character itself.
 - seealso: #foldCase(String, boolean)
 */
+ (jint)foldCaseWithInt:(jint)ch
            withBoolean:(jboolean)defaultmapping;

/*!
 @brief <strong>[icu]</strong> The given character is mapped to its case folding equivalent according
  to UnicodeData.txt and CaseFolding.txt; if the character has no case
  folding equivalent, the character itself is returned.
 <p>This function only returns the simple, single-code point case mapping.
  Full case mappings should be used whenever possible because they produce
  better results by working on whole strings.
  They can map to a result string with a different length as appropriate.
  Full case mappings are applied by the case mapping functions
  that take String parameters rather than code points (int).
  See also the User Guide chapter on C/POSIX migration:
  http://www.icu-project.org/userguide/posix.html#case_mappings
 @param ch the character to be converted
 @param options A bit set for special processing. Currently the recognised options  are FOLD_CASE_EXCLUDE_SPECIAL_I and FOLD_CASE_DEFAULT
 @return the case folding equivalent of the character, if any; otherwise the
  character itself.
 - seealso: #foldCase(String, boolean)
 */
+ (jint)foldCaseWithInt:(jint)ch
                withInt:(jint)options;

/*!
 @brief <strong>[icu]</strong> The given string is mapped to its case folding equivalent according to
  UnicodeData.txt and CaseFolding.txt; if any character has no case
  folding equivalent, the character itself is returned.
 "Full", multiple-code point case folding mappings are returned here.
  For "simple" single-code point mappings use the API
  foldCase(int ch, boolean defaultmapping).
 @param str the String to be converted
 @param defaultmapping Indicates whether the default mappings defined in                        CaseFolding.txt are to be used, otherwise the
                         mappings for dotted I and dotless i marked with
                         'T' in CaseFolding.txt are included.
 @return the case folding equivalent of the character, if
                        any; otherwise the character itself.
 - seealso: #foldCase(int, boolean)
 */
+ (NSString *)foldCaseWithNSString:(NSString *)str
                       withBoolean:(jboolean)defaultmapping;

/*!
 @brief <strong>[icu]</strong> The given string is mapped to its case folding equivalent according to
  UnicodeData.txt and CaseFolding.txt; if any character has no case
  folding equivalent, the character itself is returned.
 "Full", multiple-code point case folding mappings are returned here.
  For "simple" single-code point mappings use the API
  foldCase(int ch, boolean defaultmapping).
 @param str the String to be converted
 @param options A bit set for special processing. Currently the recognised options                 are FOLD_CASE_EXCLUDE_SPECIAL_I and FOLD_CASE_DEFAULT
 @return the case folding equivalent of the character, if any; otherwise the
          character itself.
 - seealso: #foldCase(int, boolean)
 */
+ (NSString *)foldCaseWithNSString:(NSString *)str
                           withInt:(jint)options;

/*!
 @brief Provide the java.lang.Character forDigit API, for convenience.
 */
+ (jchar)forDigitWithInt:(jint)digit
                 withInt:(jint)radix;

/*!
 @brief <strong>[icu]</strong> Returns the "age" of the code point.
 <p>The "age" is the Unicode version when the code point was first
  designated (as a non-character or for Private Use) or assigned a
  character. 
 <p>This can be useful to avoid emitting code points to receiving
  processes that do not accept newer characters. 
 <p>The data is from the UCD file DerivedAge.txt.
 @param ch The code point.
 @return the Unicode version number
 */
+ (AndroidIcuUtilVersionInfo *)getAgeWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Maps the specified character to its paired bracket character.
 For Bidi_Paired_Bracket_Type!=None, this is the same as getMirror(int).
  Otherwise c itself is returned.
  See http://www.unicode.org/reports/tr9/
 @param c the code point to be mapped
 @return the paired bracket code point,
          or c itself if there is no such mapping
          (Bidi_Paired_Bracket_Type=None)
 - seealso: UProperty#BIDI_PAIRED_BRACKET
 - seealso: UProperty#BIDI_PAIRED_BRACKET_TYPE
 - seealso: #getMirror(int)
 */
+ (jint)getBidiPairedBracketWithInt:(jint)c;

/*!
 @brief <strong>[icu]</strong> <p>Find a Unicode character by either its name and return its code
  point value.
 All Unicode names are in uppercase.
  Extended names are all lowercase except for numbers and are contained
  within angle brackets.
  The names are searched in the following order 
 <ul>
  <li> Most current Unicode name if there is any 
 <li> Unicode 1.0 name if there is any 
 <li> Extended name in the form of
       "&lt;codepoint_type-codepoint_hex_digits&gt;". E.g. &lt;noncharacter-FFFE&gt;
  </ul>
  Note calling any methods related to code point names, e.g. get*Name*()
  incurs a one-time initialisation cost to construct the name tables.
 @param name codepoint name
 @return code point associated with the name or -1 if the name is not
          found.
 */
+ (jint)getCharFromExtendedNameWithNSString:(NSString *)name;

/*!
 @brief <strong>[icu]</strong> <p>Finds a Unicode code point by its most current Unicode name and
  return its code point value.
 All Unicode names are in uppercase.
  Note calling any methods related to code point names, e.g. get*Name*()
  incurs a one-time initialisation cost to construct the name tables.
 @param name most current Unicode character name whose code point is to         be returned
 @return code point or -1 if name is not found
 */
+ (jint)getCharFromNameWithNSString:(NSString *)name;

/*!
 @brief <strong>[icu]</strong> Returns -1.
 <p>Used to find a Unicode character by its version 1.0 Unicode name and return
  its code point value.
 @param name Unicode 1.0 code point name whose code point is to be              returned
 @return -1
 - seealso: #getName1_0(int)
 */
+ (jint)getCharFromName1_0WithNSString:(NSString *)name __attribute__((deprecated));

/*!
 @brief <strong>[icu]</strong> <p>Find a Unicode character by its corrected name alias and return
  its code point value.
 All Unicode names are in uppercase.
  Note calling any methods related to code point names, e.g. get*Name*()
  incurs a one-time initialisation cost to construct the name tables.
 @param name Unicode name alias whose code point is to be returned
 @return code point or -1 if name is not found
 */
+ (jint)getCharFromNameAliasWithNSString:(NSString *)name;

/*!
 @brief <strong>[icu]</strong> Returns the code point corresponding to the BMP code point.
 @param char16 the BMP code point
 @return code point if argument is a valid character.
 @throw IllegalArgumentExceptionthrown when char16 is not a valid
             code point
 */
+ (jint)getCodePointWithChar:(jchar)char16;

/*!
 @brief <strong>[icu]</strong> Returns a code point corresponding to the two surrogate code units.
 @param lead the lead char
 @param trail the trail char
 @return code point if surrogate characters are valid.
 @throw IllegalArgumentExceptionthrown when the code units do
             not form a valid code point
 */
+ (jint)getCodePointWithChar:(jchar)lead
                    withChar:(jchar)trail;

/*!
 @brief <strong>[icu]</strong> Returns the combining class of the argument codepoint
 @param ch code point whose combining is to be retrieved
 @return the combining class of the codepoint
 */
+ (jint)getCombiningClassWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Returns the Bidirection property of a code point.
 For example, 0x0041 (letter A) has the LEFT_TO_RIGHT directional
  property.<br>
  Result returned belongs to the interface 
 <a href=UCharacterDirection.html>UCharacterDirection</a>
 @param ch the code point to be determined its direction
 @return direction constant from UCharacterDirection.
 */
+ (jint)getDirectionWithInt:(jint)ch;

/*!
 @brief Equivalent to the <code>Character.getDirectionality(char)</code> method, for
  convenience.Returns a byte representing the directionality of the
  character.
 <strong>[icu] Note:</strong> Unlike <code>Character.getDirectionality(char)</code>, this returns
  DIRECTIONALITY_LEFT_TO_RIGHT for undefined or out-of-bounds characters. 
 <strong>[icu] Note:</strong> The return value must be tested using the constants defined in <code>UCharacterDirection</code>
  and its interface <code>UCharacterEnums.ECharacterDirection</code>
  since the values are different from the ones
  defined by <code>java.lang.Character</code>.
 @param cp the code point to check
 @return the directionality of the code point
 - seealso: #getDirection
 */
+ (jbyte)getDirectionalityWithInt:(jint)cp;

/*!
 @brief <strong>[icu]</strong> Returns a name for a valid codepoint.Unlike, getName(int) and
  getName1_0(int), this method will return a name even for codepoints that
  are not assigned a name in UnicodeData.txt.
 <p>The names are returned in the following order. 
 <ul>
  <li> Most current Unicode name if there is any 
 <li> Unicode 1.0 name if there is any 
 <li> Extended name in the form of
       "&lt;codepoint_type-codepoint_hex_digits&gt;". E.g., &lt;noncharacter-fffe&gt;
  </ul>
  Note calling any methods related to code point names, e.g. get*Name*()
  incurs a one-time initialisation cost to construct the name tables.
 @param ch the code point for which to get the name
 @return a name for the argument codepoint
 */
+ (NSString *)getExtendedNameWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> <p>Returns an iterator for character names, iterating over codepoints.
 <p>This API only gets the iterator for the extended names.
  For modern, most up-to-date Unicode names use getNameIterator() or
  for older 1.0 Unicode names use get1_0NameIterator(). 
 <p>Example of use:<br>
  @code

  ValueIterator iterator = UCharacter.getExtendedNameIterator();
  ValueIterator.Element element = new ValueIterator.Element();
  while (iterator.next(element)) {
      System.out.println("Codepoint \\u" +
                         Integer.toHexString(element.codepoint) +
                         " has the name " + (String)element.value);
  } 
  
@endcode
  <p>The maximal range which the name iterator iterates is from
 @return an iterator
 */
+ (id<AndroidIcuUtilValueIterator>)getExtendedNameIterator;

/*!
 @brief <strong>[icu]</strong> Returns the numeric value of a Han character.
 <p>This returns the value of Han 'numeric' code points,
  including those for zero, ten, hundred, thousand, ten thousand,
  and hundred million.
  This includes both the standard and 'checkwriting'
  characters, the 'big circle' zero character, and the standard
  zero character. 
 <p>Note: The Unicode Standard has numeric values for more
  Han characters recognized by this method
  (see <code>getNumericValue(int)</code> and the UCD file DerivedNumericValues.txt),
  and a <code>android.icu.text.NumberFormat</code> can be used with
  a Chinese <code>android.icu.text.NumberingSystem</code>.
 @param ch code point to query
 @return value if it is a Han 'numeric character,' otherwise return -1.
 */
+ (jint)getHanNumericValueWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Returns the maximum value for an integer/binary Unicode property.
 Can be used together with UCharacter.getIntPropertyMinValue(int)
  to allocate arrays of android.icu.text.UnicodeSet or similar.
  Examples for min/max values (for Unicode 3.2): 
 <ul>
  <li> UProperty.BIDI_CLASS:    0/18
  (UCharacterDirection.LEFT_TO_RIGHT/UCharacterDirection.BOUNDARY_NEUTRAL) 
 <li> UProperty.SCRIPT:        0/45 (UScript.COMMON/UScript.TAGBANWA) 
 <li> UProperty.IDEOGRAPHIC:   0/1  (false/true) 
 </ul>
  For undefined UProperty constant values, min/max values will be 0/-1.
 @param type UProperty selector constant, identifies which binary         property to check. Must be
          UProperty.BINARY_START 
  &lt; = type  &lt;  UProperty.BINARY_LIMIT or         UProperty.INT_START  &lt; = type  &lt;  UProperty.INT_LIMIT.
 @return Maximum value returned by u_getIntPropertyValue for a Unicode
          property. &lt;= 0 if the property selector 'type' is out of range.
 - seealso: UProperty
 - seealso: #hasBinaryProperty
 - seealso: #getUnicodeVersion
 - seealso: #getIntPropertyMaxValue
 - seealso: #getIntPropertyValue
 */
+ (jint)getIntPropertyMaxValueWithInt:(jint)type;

/*!
 @brief <strong>[icu]</strong> Returns the minimum value for an integer/binary Unicode property type.
 Can be used together with UCharacter.getIntPropertyMaxValue(int)
  to allocate arrays of android.icu.text.UnicodeSet or similar.
 @param type UProperty selector constant, identifies which binary         property to check. Must be
          UProperty.BINARY_START 
  &lt; = type  &lt;  UProperty.BINARY_LIMIT or         UProperty.INT_START  &lt; = type  &lt;  UProperty.INT_LIMIT.
 @return Minimum value returned by UCharacter.getIntPropertyValue(int)
          for a Unicode property. 0 if the property
          selector 'type' is out of range.
 - seealso: UProperty
 - seealso: #hasBinaryProperty
 - seealso: #getUnicodeVersion
 - seealso: #getIntPropertyMaxValue
 - seealso: #getIntPropertyValue
 */
+ (jint)getIntPropertyMinValueWithInt:(jint)type;

/*!
 @brief <strong>[icu]</strong> <p>Returns the property value for an Unicode property type of a code point.
 Also returns binary and mask property values. 
 <p>Unicode, especially in version 3.2, defines many more properties than
  the original set in UnicodeData.txt. 
 <p>The properties APIs are intended to reflect Unicode properties as
  defined in the Unicode Character Database (UCD) and Unicode Technical
  Reports (UTR). For details about the properties see
  http://www.unicode.org/. 
 <p>For names of Unicode properties see the UCD file PropertyAliases.txt. 
 @code

  Sample usage:
  int ea = UCharacter.getIntPropertyValue(c, UProperty.EAST_ASIAN_WIDTH);
  int ideo = UCharacter.getIntPropertyValue(c, UProperty.IDEOGRAPHIC);
  boolean b = (ideo == 1) ? true : false; 
  
@endcode
 @param ch code point to test.
 @param type UProperty selector constant, identifies which binary         property to check. Must be
          UProperty.BINARY_START 
  &lt; = type  &lt;  UProperty.BINARY_LIMIT or         UProperty.INT_START  &lt; = type  &lt;  UProperty.INT_LIMIT or         UProperty.MASK_START  &lt; = type  &lt;  UProperty.MASK_LIMIT.
 @return numeric value that is directly the property value or,
          for enumerated properties, corresponds to the numeric value of
          the enumerated constant of the respective property value
          enumeration type (cast to enum type if necessary).
          Returns 0 or 1 (for false / true) for binary Unicode properties.
          Returns a bit-mask for mask properties.
          Returns 0 if 'type' is out of bounds or if the Unicode version
          does not have data for the property at all, or not for this code
          point.
 - seealso: UProperty
 - seealso: #hasBinaryProperty
 - seealso: #getIntPropertyMinValue
 - seealso: #getIntPropertyMaxValue
 - seealso: #getUnicodeVersion
 */
+ (jint)getIntPropertyValueWithInt:(jint)ch
                           withInt:(jint)type;

/*!
 @brief <strong>[icu]</strong> Returns null.
 Used to return the ISO 10646 comment for a character.
  The Unicode ISO_Comment property is deprecated and has no values.
 @param ch The code point for which to get the ISO comment.            It must be the case that 
 <code>0 <= ch <= 0x10ffff</code> .
 @return null
 */
+ (NSString *)getISOCommentWithInt:(jint)ch __attribute__((deprecated));

/*!
 @brief <strong>[icu]</strong> Maps the specified code point to a "mirror-image" code point.
 For code points with the "mirrored" property, implementations sometimes
  need a "poor man's" mapping to another code point such that the default
  glyph may serve as the mirror-image of the default glyph of the
  specified code point.<br>
  This is useful for text conversion to and from codepages with visual
  order, and for displays without glyph selection capabilities.
 @param ch code point whose mirror is to be retrieved
 @return another code point that may serve as a mirror-image substitute,
          or ch itself if there is no such mapping or ch does not have the
          "mirrored" property
 */
+ (jint)getMirrorWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Returns the most current Unicode name of the argument code point, or
  null if the character is unassigned or outside the range
  UCharacter.MIN_VALUE and UCharacter.MAX_VALUE or does not have a name.
 <br>
  Note calling any methods related to code point names, e.g. get*Name*()
  incurs a one-time initialisation cost to construct the name tables.
 @param ch the code point for which to get the name
 @return most current Unicode name
 */
+ (NSString *)getNameWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Returns the names for each of the characters in a string
 @param s string to format
 @param separator string to go between names
 @return string of names
 */
+ (NSString *)getNameWithNSString:(NSString *)s
                     withNSString:(NSString *)separator;

/*!
 @brief <strong>[icu]</strong> Returns null.
 Used to return the Unicode_1_Name property value which was of little practical value.
 @param ch the code point for which to get the name
 @return null
 */
+ (NSString *)getName1_0WithInt:(jint)ch __attribute__((deprecated));

/*!
 @brief <strong>[icu]</strong> Returns an empty iterator.
 <p>Used to return an iterator for the older 1.0 Unicode character names, iterating over codepoints.
 @return an empty iterator
 - seealso: #getName1_0(int)
 */
+ (id<AndroidIcuUtilValueIterator>)getName1_0Iterator __attribute__((deprecated));

/*!
 @brief <strong>[icu]</strong> Returns the corrected name from NameAliases.txt if there is one.
 Returns null if the character is unassigned or outside the range
  UCharacter.MIN_VALUE and UCharacter.MAX_VALUE or does not have a name. 
 <br>
  Note calling any methods related to code point names, e.g. get*Name*()
  incurs a one-time initialisation cost to construct the name tables.
 @param ch the code point for which to get the name alias
 @return Unicode name alias, or null
 */
+ (NSString *)getNameAliasWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> <p>Returns an iterator for character names, iterating over codepoints.
 <p>This API only gets the iterator for the modern, most up-to-date
  Unicode names. For older 1.0 Unicode names use get1_0NameIterator() or
  for extended names use getExtendedNameIterator(). 
 <p>Example of use:<br>
  @code

  ValueIterator iterator = UCharacter.getNameIterator();
  ValueIterator.Element element = new ValueIterator.Element();
  while (iterator.next(element)) {
      System.out.println("Codepoint \\u" +
                         Integer.toHexString(element.codepoint) +
                         " has the name " + (String)element.value);
  } 
  
@endcode
  <p>The maximal range which the name iterator iterates is from
  UCharacter.MIN_VALUE to UCharacter.MAX_VALUE.
 @return an iterator
 */
+ (id<AndroidIcuUtilValueIterator>)getNameIterator;

/*!
 @brief Returns the numeric value of the code point as a nonnegative
  integer.
 <br>If the code point does not have a numeric value, then -1 is returned. 
 <br>
  If the code point has a numeric value that cannot be represented as a
  nonnegative integer (for example, a fractional value), then -2 is
  returned.
 @param ch the code point to query
 @return the numeric value of the code point, or -1 if it has no numeric
  value, or -2 if it has a numeric value that cannot be represented as a
  nonnegative integer
 */
+ (jint)getNumericValueWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Return the UProperty selector for a given property name, as
  specified in the Unicode database file PropertyAliases.txt.
 Short, long, and any other variants are recognized.
  In addition, this function maps the synthetic names "gcm" /
  "General_Category_Mask" to the property
  UProperty.GENERAL_CATEGORY_MASK.  These names are not in
  PropertyAliases.txt.
 @param propertyAlias the property name to be matched.  The name  is compared using "loose matching" as described in
   PropertyAliases.txt.
 @return a UProperty enum.
 @throw IllegalArgumentExceptionthrown if propertyAlias
  is not recognized.
 - seealso: UProperty
 */
+ (jint)getPropertyEnumWithJavaLangCharSequence:(id<JavaLangCharSequence>)propertyAlias;

/*!
 @brief <strong>[icu]</strong> Return the Unicode name for a given property, as given in the
  Unicode database file PropertyAliases.txt.Most properties
  have more than one name.
 The nameChoice determines which one
  is returned.
  In addition, this function maps the property
  UProperty.GENERAL_CATEGORY_MASK to the synthetic names "gcm" /
  "General_Category_Mask".  These names are not in
  PropertyAliases.txt.
 @param property UProperty selector.
 @param nameChoice UProperty.NameChoice selector for which name  to get.  All properties have a long name.  Most have a short
   name, but some do not.  Unicode allows for additional names; if
   present these will be returned by UProperty.NameChoice.LONG + i,
   where i=1, 2,...
 @return a name, or null if Unicode explicitly defines no name
  ("n/a") for a given property/nameChoice.  If a given nameChoice
  throws an exception, then all larger values of nameChoice will
  throw an exception.  If null is returned for a given
  nameChoice, then other nameChoice values may return non-null
  results.
 @throw IllegalArgumentExceptionthrown if property or
  nameChoice are invalid.
 - seealso: UProperty
 - seealso: UProperty.NameChoice
 */
+ (NSString *)getPropertyNameWithInt:(jint)property
                             withInt:(jint)nameChoice;

/*!
 @brief <strong>[icu]</strong> Return the property value integer for a given value name, as
  specified in the Unicode database file PropertyValueAliases.txt.
 Short, long, and any other variants are recognized.
  Note: Some of the names in PropertyValueAliases.txt will only be
  recognized with UProperty.GENERAL_CATEGORY_MASK, not
  UProperty.GENERAL_CATEGORY.  These include: "C" / "Other", "L" /
  "Letter", "LC" / "Cased_Letter", "M" / "Mark", "N" / "Number", "P"
  / "Punctuation", "S" / "Symbol", and "Z" / "Separator".
 @param property UProperty selector constant.  UProperty.INT_START 
  &lt; = property  &lt;  UProperty.INT_LIMIT or  UProperty.BINARY_START  &lt; = property  &lt;  UProperty.BINARY_LIMIT or  UProperty.MASK_START  &lt;  = property  &lt;  UProperty.MASK_LIMIT.  Only these properties can be enumerated.
 @param valueAlias the value name to be matched.  The name is  compared using "loose matching" as described in
   PropertyValueAliases.txt.
 @return a value integer.  Note: UProperty.GENERAL_CATEGORY
  values are mask values produced by left-shifting 1 by
  UCharacter.getType().  This allows grouped categories such as
  [:L:] to be represented.
 - seealso: UProperty
 @throw IllegalArgumentExceptionif property is not a valid UProperty
          selector or valueAlias is not a value of this property
 */
+ (jint)getPropertyValueEnumWithInt:(jint)property
           withJavaLangCharSequence:(id<JavaLangCharSequence>)valueAlias;

/*!
 @brief Same as <code>getPropertyValueEnum(int, CharSequence)</code>, except doesn't throw exception.Instead, returns UProperty.UNDEFINED.
 @param property Same as <code>getPropertyValueEnum(int, CharSequence)</code>
 @param valueAlias Same as <code>getPropertyValueEnum(int, CharSequence)</code>
 @return returns UProperty.UNDEFINED if the value is not valid, otherwise the value.
 */
+ (jint)getPropertyValueEnumNoThrowWithInt:(jint)property
                  withJavaLangCharSequence:(id<JavaLangCharSequence>)valueAlias __attribute__((deprecated));

/*!
 @brief <strong>[icu]</strong> Return the Unicode name for a given property value, as given in
  the Unicode database file PropertyValueAliases.txt.Most
  values have more than one name.
 The nameChoice determines
  which one is returned.
  Note: Some of the names in PropertyValueAliases.txt can only be
  retrieved using UProperty.GENERAL_CATEGORY_MASK, not
  UProperty.GENERAL_CATEGORY.  These include: "C" / "Other", "L" /
  "Letter", "LC" / "Cased_Letter", "M" / "Mark", "N" / "Number", "P"
  / "Punctuation", "S" / "Symbol", and "Z" / "Separator".
 @param property UProperty selector constant.  UProperty.INT_START 
  &lt; = property  &lt;  UProperty.INT_LIMIT or  UProperty.BINARY_START  &lt; = property  &lt;  UProperty.BINARY_LIMIT or  UProperty.MASK_START  &lt;  = property  &lt;  UProperty.MASK_LIMIT.  If out of range, null is returned.
 @param value selector for a value for the given property.  In  general, valid values range from 0 up to some maximum.  There
   are a few exceptions: (1.) UProperty.BLOCK values begin at the
   non-zero value BASIC_LATIN.getID().  (2.)
   UProperty.CANONICAL_COMBINING_CLASS values are not contiguous
   and range from 0..240.  (3.)  UProperty.GENERAL_CATEGORY_MASK values
   are mask values produced by left-shifting 1 by
   UCharacter.getType().  This allows grouped categories such as
   [:L:] to be represented.  Mask values are non-contiguous.
 @param nameChoice UProperty.NameChoice selector for which name  to get.  All values have a long name.  Most have a short name,
   but some do not.  Unicode allows for additional names; if
   present these will be returned by UProperty.NameChoice.LONG + i,
   where i=1, 2,...
 @return a name, or null if Unicode explicitly defines no name
  ("n/a") for a given property/value/nameChoice.  If a given
  nameChoice throws an exception, then all larger values of
  nameChoice will throw an exception.  If null is returned for a
  given nameChoice, then other nameChoice values may return
  non-null results.
 @throw IllegalArgumentExceptionthrown if property, value,
  or nameChoice are invalid.
 - seealso: UProperty
 - seealso: UProperty.NameChoice
 */
+ (NSString *)getPropertyValueNameWithInt:(jint)property
                                  withInt:(jint)value
                                  withInt:(jint)nameChoice;

/*!
 @brief <strong>[icu]</strong> Returns a string version of the property value.
 @param propertyEnum The property enum value.
 @param codepoint The codepoint value.
 @param nameChoice The choice of the name.
 @return value as string
 */
+ (NSString *)getStringPropertyValueWithInt:(jint)propertyEnum
                                    withInt:(jint)codepoint
                                    withInt:(jint)nameChoice __attribute__((deprecated));

/*!
 @brief Returns a value indicating a code point's Unicode category.
 Up-to-date Unicode implementation of java.lang.Character.getType()
  except for the above mentioned code points that had their category
  changed.<br>
  Return results are constants from the interface 
 <a href=UCharacterCategory.html>UCharacterCategory</a><br>
  <em>NOTE:</em> the UCharacterCategory values are <em>not</em> compatible with
  those returned by java.lang.Character.getType.  UCharacterCategory values
  match the ones used in ICU4C, while java.lang.Character type
  values, though similar, skip the value 17.
 @param ch code point whose type is to be determined
 @return category which is a value of UCharacterCategory
 */
+ (jint)getTypeWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> <p>Returns an iterator for character types, iterating over codepoints.
 <p>Example of use:<br>
  @code

  RangeValueIterator iterator = UCharacter.getTypeIterator();
  RangeValueIterator.Element element = new RangeValueIterator.Element();
  while (iterator.next(element)) {
      System.out.println("Codepoint \\u" +
                         Integer.toHexString(element.start) +
                         " to codepoint \\u" +
                         Integer.toHexString(element.limit - 1) +
                         " has the character type " +
                         element.value);
  } 
  
@endcode
 @return an iterator
 */
+ (id<AndroidIcuUtilRangeValueIterator>)getTypeIterator;

/*!
 @brief <strong>[icu]</strong> Returns the numeric value for a Unicode code point as defined in the
  Unicode Character Database.
 <p>A "double" return type is necessary because some numeric values are
  fractions, negative, or too large for int. 
 <p>For characters without any numeric values in the Unicode Character
  Database, this function will return NO_NUMERIC_VALUE.
  Note: This is different from the Unicode Standard which specifies NaN as the default value. 
 <p><em>API Change:</em> In release 2.2 and prior, this API has a
  return type int and returns -1 when the argument ch does not have a
  corresponding numeric value. This has been changed to synch with ICU4C
  This corresponds to the ICU4C function u_getNumericValue.
 @param ch Code point to get the numeric value for.
 @return numeric value of ch, or NO_NUMERIC_VALUE if none is defined.
 */
+ (jdouble)getUnicodeNumericValueWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Returns the version of Unicode data used.
 @return the unicode version number used
 */
+ (AndroidIcuUtilVersionInfo *)getUnicodeVersion;

/*!
 @brief <strong>[icu]</strong> <p>Check a binary Unicode property for a code point.
 <p>Unicode, especially in version 3.2, defines many more properties
  than the original set in UnicodeData.txt. 
 <p>This API is intended to reflect Unicode properties as defined in
  the Unicode Character Database (UCD) and Unicode Technical Reports
  (UTR). 
 <p>For details about the properties see 
 <a href=http://www.unicode.org/>http://www.unicode.org/</a>.
  <p>For names of Unicode properties see the UCD file
  PropertyAliases.txt. 
 <p>This API does not check the validity of the codepoint. 
 <p>Important: If ICU is built with UCD files from Unicode versions
  below 3.2, then properties marked with "new" are not or
  not fully available.
 @param ch code point to test.
 @param property selector constant from android.icu.lang.UProperty,         identifies which binary property to check.
 @return true or false according to the binary Unicode property value
          for ch. Also false if property is out of bounds or if the
          Unicode version does not have data for the property at all, or
          not for this code point.
 - seealso: android.icu.lang.UProperty
 */
+ (jboolean)hasBinaryPropertyWithInt:(jint)ch
                             withInt:(jint)property;

/*!
 @brief <strong>[icu]</strong> Determines whether the specified code point is of base form.
 A code point of base form does not graphically combine with preceding
  characters, and is neither a control nor a format character.
 @param ch code point to be determined if it is of base form
 @return true if the code point is of base form
 */
+ (jboolean)isBaseFormWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Determines if the code point is in the BMP plane.
 @param ch code point to be determined if it is not a supplementary         character
 @return true if code point is not a supplementary character
 */
+ (jboolean)isBMPWithInt:(jint)ch;

/*!
 @brief Determines if a code point has a defined meaning in the up-to-date
  Unicode standard.
 E.g. supplementary code points though allocated space are not defined in
  Unicode yet.<br>
  Up-to-date Unicode implementation of java.lang.Character.isDefined()
 @param ch code point to be determined if it is defined in the most         current version of Unicode
 @return true if this code point is defined in unicode
 */
+ (jboolean)isDefinedWithInt:(jint)ch;

/*!
 @brief Determines if a code point is a Java digit.
 <br>This method observes the semantics of 
 <code>java.lang.Character.isDigit()</code>. It returns true for decimal
  digits only. 
 <br><em>Semantic Change:</em> In release 1.3.1 and prior, this treated
  numeric letters and other numbers as digits.
  This has been changed to conform to the java semantics.
 @param ch code point to query
 @return true if this code point is a digit
 */
+ (jboolean)isDigitWithInt:(jint)ch;

/*!
 @brief Same as <code>Character.isHighSurrogate</code>.
 @param ch the char to check
 @return true if ch is a high (lead) surrogate
 */
+ (jboolean)isHighSurrogateWithChar:(jchar)ch;

/*!
 @brief Determines if the specified code point should be regarded as an
  ignorable character in a Java identifier.
 A character is Java-identifier-ignorable if it has the general category
  Cf Formatting Control, or it is a non-Java-whitespace ISO control:
  U+0000..U+0008, U+000E..U+001B, U+007F..U+009F.<br>
  Up-to-date Unicode implementation of
  java.lang.Character.isIdentifierIgnorable().<br>
  See <a href=http://www.unicode.org/unicode/reports/tr8/>UTR #8</a>.
  <p>Note that Unicode just recommends to ignore Cf (format controls).
 @param ch code point to be determined if it can be ignored in a Unicode         identifier.
 @return true if the code point is ignorable
 */
+ (jboolean)isIdentifierIgnorableWithInt:(jint)ch;

/*!
 @brief Determines if the specified code point is an ISO control character.
 A code point is considered to be an ISO control character if it is in
  the range &#92;u0000 through &#92;u001F or in the range &#92;u007F through 
 &#92;u009F.<br>
  Up-to-date Unicode implementation of java.lang.Character.isISOControl()
 @param ch code point to determine if it is an ISO control character
 @return true if code point is a ISO control character
 */
+ (jboolean)isISOControlWithInt:(jint)ch;

/*!
 @brief Compatibility override of Java method, delegates to
  java.lang.Character.isJavaIdentifierPart.
 @param cp the code point
 @return true if the code point can continue a java identifier.
 */
+ (jboolean)isJavaIdentifierPartWithInt:(jint)cp;

/*!
 @brief Compatibility override of Java method, delegates to
  java.lang.Character.isJavaIdentifierStart.
 @param cp the code point
 @return true if the code point can start a java identifier.
 */
+ (jboolean)isJavaIdentifierStartWithInt:(jint)cp;

/*!
 @brief Compatibility override of Java deprecated method.This
  method will always remain deprecated.
 Delegates to
  java.lang.Character.isJavaIdentifierStart.
 @param cp the code point
 @return true if the code point can start a java identifier.
 */
+ (jboolean)isJavaLetterWithInt:(jint)cp __attribute__((deprecated));

/*!
 @brief Compatibility override of Java deprecated method.This
  method will always remain deprecated.
 Delegates to
  java.lang.Character.isJavaIdentifierPart.
 @param cp the code point
 @return true if the code point can continue a java identifier.
 */
+ (jboolean)isJavaLetterOrDigitWithInt:(jint)cp __attribute__((deprecated));

/*!
 @brief <strong>[icu]</strong> A code point is illegal if and only if 
 <ul>
  <li> Out of bounds, less than 0 or greater than UCharacter.MAX_VALUE 
 <li> A surrogate value, 0xD800 to 0xDFFF 
 <li> Not-a-character, having the form 0x xxFFFF or 0x xxFFFE 
 </ul>
  Note: legal does not mean that it is assigned in this version of Unicode.
 @param ch code point to determine if it is a legal code point by itself
 @return true if and only if legal.
 */
+ (jboolean)isLegalWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> A string is legal iff all its code points are legal.
 A code point is illegal if and only if 
 <ul>
  <li> Out of bounds, less than 0 or greater than UCharacter.MAX_VALUE 
 <li> A surrogate value, 0xD800 to 0xDFFF 
 <li> Not-a-character, having the form 0x xxFFFF or 0x xxFFFE 
 </ul>
  Note: legal does not mean that it is assigned in this version of Unicode.
 @param str containing code points to examin
 @return true if and only if legal.
 */
+ (jboolean)isLegalWithNSString:(NSString *)str;

/*!
 @brief Determines if the specified code point is a letter.
 Up-to-date Unicode implementation of java.lang.Character.isLetter()
 @param ch code point to determine if it is a letter
 @return true if code point is a letter
 */
+ (jboolean)isLetterWithInt:(jint)ch;

/*!
 @brief Determines if the specified code point is a letter or digit.
 <strong>[icu] Note:</strong> This method, unlike java.lang.Character does not regard the ascii
  characters 'A' - 'Z' and 'a' - 'z' as digits.
 @param ch code point to determine if it is a letter or a digit
 @return true if code point is a letter or a digit
 */
+ (jboolean)isLetterOrDigitWithInt:(jint)ch;

/*!
 @brief Determines if the specified code point is a lowercase character.
 UnicodeData only contains case mappings for code points where they are
  one-to-one mappings; it also omits information about context-sensitive
  case mappings.<br> For more information about Unicode case mapping
  please refer to the 
 <a href=http://www.unicode.org/unicode/reports/tr21/>Technical report
  #21</a>.<br>
  Up-to-date Unicode implementation of java.lang.Character.isLowerCase()
 @param ch code point to determine if it is in lowercase
 @return true if code point is a lowercase character
 */
+ (jboolean)isLowerCaseWithInt:(jint)ch;

/*!
 @brief Same as <code>Character.isLowSurrogate</code>.
 @param ch the char to check
 @return true if ch is a low (trail) surrogate
 */
+ (jboolean)isLowSurrogateWithChar:(jchar)ch;

/*!
 @brief Determines whether the code point has the "mirrored" property.
 This property is set for characters that are commonly used in
  Right-To-Left contexts and need to be displayed with a "mirrored"
  glyph.
 @param ch code point whose mirror is to be determined
 @return true if the code point has the "mirrored" property
 */
+ (jboolean)isMirroredWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Determines whether the specified code point is a printable character
  according to the Unicode standard.
 @param ch code point to be determined if it is printable
 @return true if the code point is a printable character
 */
+ (jboolean)isPrintableWithInt:(jint)ch;

/*!
 @brief Compatibility override of Java deprecated method.This
  method will always remain deprecated.
 Same as java.lang.Character.isSpace().
 @param ch the code point
 @return true if the code point is a space character as
  defined by java.lang.Character.isSpace.
 */
+ (jboolean)isSpaceWithInt:(jint)ch __attribute__((deprecated));

/*!
 @brief Determines if the specified code point is a Unicode specified space
  character, i.e.if code point is in the category Zs, Zl and Zp.
 Up-to-date Unicode implementation of java.lang.Character.isSpaceChar().
 @param ch code point to determine if it is a space
 @return true if the specified code point is a space character
 */
+ (jboolean)isSpaceCharWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> Determines if the code point is a supplementary character.
 A code point is a supplementary character if and only if it is greater
  than <a href=#SUPPLEMENTARY_MIN_VALUE>SUPPLEMENTARY_MIN_VALUE</a>
 @param ch code point to be determined if it is in the supplementary         plane
 @return true if code point is a supplementary character
 */
+ (jboolean)isSupplementaryWithInt:(jint)ch;

/*!
 @brief Same as <code>Character.isSupplementaryCodePoint</code>.
 @param cp the code point to check
 @return true if cp is a supplementary code point
 */
+ (jboolean)isSupplementaryCodePointWithInt:(jint)cp;

/*!
 @brief Same as <code>Character.isSurrogatePair</code>.
 @param high the high (lead) char
 @param low the low (trail) char
 @return true if high, low form a surrogate pair
 */
+ (jboolean)isSurrogatePairWithChar:(jchar)high
                           withChar:(jchar)low;

/*!
 @brief Determines if the specified code point is a titlecase character.
 UnicodeData only contains case mappings for code points where they are
  one-to-one mappings; it also omits information about context-sensitive
  case mappings.<br>
  For more information about Unicode case mapping please refer to the 
 <a href=http://www.unicode.org/unicode/reports/tr21/>
  Technical report #21</a>.<br>
  Up-to-date Unicode implementation of java.lang.Character.isTitleCase().
 @param ch code point to determine if it is in title case
 @return true if the specified code point is a titlecase character
 */
+ (jboolean)isTitleCaseWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> <p>Check if a code point has the Alphabetic Unicode property.
 <p>Same as UCharacter.hasBinaryProperty(ch, UProperty.ALPHABETIC). 
 <p>Different from UCharacter.isLetter(ch)!
 @param ch codepoint to be tested
 */
+ (jboolean)isUAlphabeticWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> <p>Check if a code point has the Lowercase Unicode property.
 <p>Same as UCharacter.hasBinaryProperty(ch, UProperty.LOWERCASE). 
 <p>This is different from UCharacter.isLowerCase(ch)!
 @param ch codepoint to be tested
 */
+ (jboolean)isULowercaseWithInt:(jint)ch;

/*!
 @brief Determines if the specified code point may be any part of a Unicode
  identifier other than the starting character.
 A code point may be part of a Unicode identifier if and only if it is
  one of the following: 
 <ul>
  <li> Lu Uppercase letter 
 <li> Ll Lowercase letter 
 <li> Lt Titlecase letter 
 <li> Lm Modifier letter 
 <li> Lo Other letter 
 <li> Nl Letter number 
 <li> Pc Connecting punctuation character 
 <li> Nd decimal number 
 <li> Mc Spacing combining mark 
 <li> Mn Non-spacing mark 
 <li> Cf formatting code 
 </ul>
  Up-to-date Unicode implementation of
  java.lang.Character.isUnicodeIdentifierPart().<br>
  See <a href=http://www.unicode.org/unicode/reports/tr8/>UTR #8</a>.
 @param ch code point to determine if is can be part of a Unicode         identifier
 @return true if code point is any character belonging a unicode
          identifier suffix after the first character
 */
+ (jboolean)isUnicodeIdentifierPartWithInt:(jint)ch;

/*!
 @brief Determines if the specified code point is permissible as the first
  character in a Unicode identifier.
 A code point may start a Unicode identifier if it is of type either 
 <ul>
  <li> Lu Uppercase letter 
 <li> Ll Lowercase letter 
 <li> Lt Titlecase letter 
 <li> Lm Modifier letter 
 <li> Lo Other letter 
 <li> Nl Letter number 
 </ul>
  Up-to-date Unicode implementation of
  java.lang.Character.isUnicodeIdentifierStart().<br>
  See <a href=http://www.unicode.org/unicode/reports/tr8/>UTR #8</a>.
 @param ch code point to determine if it can start a Unicode identifier
 @return true if code point is the first character belonging a unicode
               identifier
 */
+ (jboolean)isUnicodeIdentifierStartWithInt:(jint)ch;

/*!
 @brief Determines if the specified code point is an uppercase character.
 UnicodeData only contains case mappings for code point where they are
  one-to-one mappings; it also omits information about context-sensitive
  case mappings.<br>
  For language specific case conversion behavior, use
  toUpperCase(locale, str). <br>
  For example, the case conversion for dot-less i and dotted I in Turkish,
  or for final sigma in Greek.
  For more information about Unicode case mapping please refer to the 
 <a href=http://www.unicode.org/unicode/reports/tr21/>
  Technical report #21</a>.<br>
  Up-to-date Unicode implementation of java.lang.Character.isUpperCase().
 @param ch code point to determine if it is in uppercase
 @return true if the code point is an uppercase character
 */
+ (jboolean)isUpperCaseWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> <p>Check if a code point has the Uppercase Unicode property.
 <p>Same as UCharacter.hasBinaryProperty(ch, UProperty.UPPERCASE). 
 <p>This is different from UCharacter.isUpperCase(ch)!
 @param ch codepoint to be tested
 */
+ (jboolean)isUUppercaseWithInt:(jint)ch;

/*!
 @brief <strong>[icu]</strong> <p>Check if a code point has the White_Space Unicode property.
 <p>Same as UCharacter.hasBinaryProperty(ch, UProperty.WHITE_SPACE). 
 <p>This is different from both UCharacter.isSpace(ch) and
  UCharacter.isWhitespace(ch)!
 @param ch codepoint to be tested
 */
+ (jboolean)isUWhiteSpaceWithInt:(jint)ch;

/*!
 @brief Equivalent to <code>Character.isValidCodePoint</code>.
 @param cp the code point to check
 @return true if cp is a valid code point
 */
+ (jboolean)isValidCodePointWithInt:(jint)cp;

/*!
 @brief Determines if the specified code point is a white space character.
 A code point is considered to be an whitespace character if and only
  if it satisfies one of the following criteria: 
 <ul>
  <li> It is a Unicode Separator character (categories "Z" = "Zs" or "Zl" or "Zp"), but is not
       also a non-breaking space (&#92;u00A0 or &#92;u2007 or &#92;u202F).
  <li> It is &#92;u0009, HORIZONTAL TABULATION. 
 <li> It is &#92;u000A, LINE FEED. 
 <li> It is &#92;u000B, VERTICAL TABULATION. 
 <li> It is &#92;u000C, FORM FEED. 
 <li> It is &#92;u000D, CARRIAGE RETURN. 
 <li> It is &#92;u001C, FILE SEPARATOR. 
 <li> It is &#92;u001D, GROUP SEPARATOR. 
 <li> It is &#92;u001E, RECORD SEPARATOR. 
 <li> It is &#92;u001F, UNIT SEPARATOR. 
 </ul>
  This API tries to sync with the semantics of Java's
  java.lang.Character.isWhitespace(), but it may not return
  the exact same results because of the Unicode version
  difference. 
 <p>Note: Unicode 4.0.1 changed U+200B ZERO WIDTH SPACE from a Space Separator (Zs)
  to a Format Control (Cf). Since then, isWhitespace(0x200b) returns false.
  See http://www.unicode.org/versions/Unicode4.0.1/
 @param ch code point to determine if it is a white space
 @return true if the specified code point is a white space character
 */
+ (jboolean)isWhitespaceWithInt:(jint)ch;

/*!
 @brief Equivalent to the 
 <code>Character.offsetByCodePoints(char[], int, int, int, int)</code>
  method, for convenience.Adjusts the char index by a code point offset.
 @param text the characters to check
 @param start the start of the range to check
 @param count the length of the range to check
 @param index the index to adjust
 @param codePointOffset the number of code points by which to offset the index
 @return the adjusted index
 */
+ (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)text
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)codePointOffset;

/*!
 @brief Equivalent to the <code>Character.offsetByCodePoints(CharSequence, int, int)</code>
  method, for convenience.Adjusts the char index by a code point offset.
 @param text the characters to check
 @param index the index to adjust
 @param codePointOffset the number of code points by which to offset the index
 @return the adjusted index
 */
+ (jint)offsetByCodePointsWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                           withInt:(jint)index
                                           withInt:(jint)codePointOffset;

/*!
 @brief Same as <code>Character.toChars(int)</code>.
 Returns a char array representing the code point.
 @param cp the code point to convert
 @return an array containing the char(s) representing the code point
 @throw IllegalArgumentExceptionif cp is not a valid code point
 */
+ (IOSCharArray *)toCharsWithInt:(jint)cp;

/*!
 @brief Same as <code>Character.toChars(int, char[], int)</code>.
 Writes the chars representing the
  code point into the destination at the given index.
 @param cp the code point to convert
 @param dst the destination array into which to put the char(s) representing the code point
 @param dstIndex the index at which to put the first (or only) char
 @return the count of the number of chars written (1 or 2)
 @throw IllegalArgumentExceptionif cp is not a valid code point
 */
+ (jint)toCharsWithInt:(jint)cp
         withCharArray:(IOSCharArray *)dst
               withInt:(jint)dstIndex;

/*!
 @brief Same as <code>Character.toCodePoint</code>.
 Returns the code point represented by the two surrogate code units.
  This does not check the surrogate pair for validity.
 @param high the high (lead) surrogate
 @param low the low (trail) surrogate
 @return the code point formed by the surrogate pair
 */
+ (jint)toCodePointWithChar:(jchar)high
                   withChar:(jchar)low;

/*!
 @brief The given code point is mapped to its lowercase equivalent; if the code
  point has no lowercase equivalent, the code point itself is returned.
 Up-to-date Unicode implementation of java.lang.Character.toLowerCase() 
 <p>This function only returns the simple, single-code point case mapping.
  Full case mappings should be used whenever possible because they produce
  better results by working on whole strings.
  They take into account the string context and the language and can map
  to a result string with a different length as appropriate.
  Full case mappings are applied by the case mapping functions
  that take String parameters rather than code points (int).
  See also the User Guide chapter on C/POSIX migration:
  http://www.icu-project.org/userguide/posix.html#case_mappings
 @param ch code point whose lowercase equivalent is to be retrieved
 @return the lowercase equivalent code point
 */
+ (jint)toLowerCaseWithInt:(jint)ch;

/*!
 @brief Returns the lowercase version of the argument string.
 Casing is dependent on the argument locale and context-sensitive
 @param locale which string is to be converted in
 @param str source string to be performed on
 @return lowercase version of the argument string
 */
+ (NSString *)toLowerCaseWithJavaUtilLocale:(JavaUtilLocale *)locale
                               withNSString:(NSString *)str;

/*!
 @brief Returns the lowercase version of the argument string.
 Casing is dependent on the default locale and context-sensitive
 @param str source string to be performed on
 @return lowercase version of the argument string
 */
+ (NSString *)toLowerCaseWithNSString:(NSString *)str;

/*!
 @brief Returns the lowercase version of the argument string.
 Casing is dependent on the argument locale and context-sensitive
 @param locale which string is to be converted in
 @param str source string to be performed on
 @return lowercase version of the argument string
 */
+ (NSString *)toLowerCaseWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale
                                      withNSString:(NSString *)str;

/*!
 @brief Converts argument code point and returns a String object representing
  the code point's value in UTF-16 format.
 The result is a string whose length is 1 for BMP code points, 2 for supplementary ones. 
 <p>Up-to-date Unicode implementation of java.lang.Character.toString().
 @param ch code point
 @return string representation of the code point, null if code point is not
          defined in unicode
 */
+ (NSString *)toStringWithInt:(jint)ch;

/*!
 @brief Converts the code point argument to titlecase.
 If no titlecase is available, the uppercase is returned. If no uppercase
  is available, the code point itself is returned.
  Up-to-date Unicode implementation of java.lang.Character.toTitleCase() 
 <p>This function only returns the simple, single-code point case mapping.
  Full case mappings should be used whenever possible because they produce
  better results by working on whole strings.
  They take into account the string context and the language and can map
  to a result string with a different length as appropriate.
  Full case mappings are applied by the case mapping functions
  that take String parameters rather than code points (int).
  See also the User Guide chapter on C/POSIX migration:
  http://www.icu-project.org/userguide/posix.html#case_mappings
 @param ch code point  whose title case is to be retrieved
 @return titlecase code point
 */
+ (jint)toTitleCaseWithInt:(jint)ch;

/*!
 @brief <p>Returns the titlecase version of the argument string.
 <p>Position for titlecasing is determined by the argument break
  iterator, hence the user can customize his break iterator for
  a specialized titlecasing. In this case only the forward iteration
  needs to be implemented.
  If the break iterator passed in is null, the default Unicode algorithm
  will be used to determine the titlecase positions. 
 <p>Only positions returned by the break iterator will be title cased,
  character in between the positions will all be in lower case. 
 <p>Casing is dependent on the argument locale and context-sensitive
 @param locale which string is to be converted in
 @param str source string to be performed on
 @param breakiter break iterator to determine the positions in which         the character should be title cased.
 @return lowercase version of the argument string
 */
+ (NSString *)toTitleCaseWithJavaUtilLocale:(JavaUtilLocale *)locale
                               withNSString:(NSString *)str
            withAndroidIcuTextBreakIterator:(AndroidIcuTextBreakIterator *)breakiter;

/*!
 @brief <strong>[icu]</strong> <p>Returns the titlecase version of the argument string.
 <p>Position for titlecasing is determined by the argument break
  iterator, hence the user can customize his break iterator for
  a specialized titlecasing. In this case only the forward iteration
  needs to be implemented.
  If the break iterator passed in is null, the default Unicode algorithm
  will be used to determine the titlecase positions. 
 <p>Only positions returned by the break iterator will be title cased,
  character in between the positions will all be in lower case. 
 <p>Casing is dependent on the argument locale and context-sensitive
 @param locale which string is to be converted in
 @param str source string to be performed on
 @param titleIter break iterator to determine the positions in which         the character should be title cased.
 @param options bit set to modify the titlecasing operation
 @return lowercase version of the argument string
 - seealso: #TITLECASE_NO_LOWERCASE
 - seealso: #TITLECASE_NO_BREAK_ADJUSTMENT
 */
+ (NSString *)toTitleCaseWithJavaUtilLocale:(JavaUtilLocale *)locale
                               withNSString:(NSString *)str
            withAndroidIcuTextBreakIterator:(AndroidIcuTextBreakIterator *)titleIter
                                    withInt:(jint)options;

/*!
 @brief <p>Returns the titlecase version of the argument string.
 <p>Position for titlecasing is determined by the argument break
  iterator, hence the user can customize his break iterator for
  a specialized titlecasing. In this case only the forward iteration
  needs to be implemented.
  If the break iterator passed in is null, the default Unicode algorithm
  will be used to determine the titlecase positions. 
 <p>Only positions returned by the break iterator will be title cased,
  character in between the positions will all be in lower case. 
 <p>Casing is dependent on the default locale and context-sensitive
 @param str source string to be performed on
 @param breakiter break iterator to determine the positions in which         the character should be title cased.
 @return lowercase version of the argument string
 */
+ (NSString *)toTitleCaseWithNSString:(NSString *)str
      withAndroidIcuTextBreakIterator:(AndroidIcuTextBreakIterator *)breakiter;

/*!
 @brief <p>Returns the titlecase version of the argument string.
 <p>Position for titlecasing is determined by the argument break
  iterator, hence the user can customize his break iterator for
  a specialized titlecasing. In this case only the forward iteration
  needs to be implemented.
  If the break iterator passed in is null, the default Unicode algorithm
  will be used to determine the titlecase positions. 
 <p>Only positions returned by the break iterator will be title cased,
  character in between the positions will all be in lower case. 
 <p>Casing is dependent on the argument locale and context-sensitive
 @param locale which string is to be converted in
 @param str source string to be performed on
 @param titleIter break iterator to determine the positions in which         the character should be title cased.
 @return lowercase version of the argument string
 */
+ (NSString *)toTitleCaseWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale
                                      withNSString:(NSString *)str
                   withAndroidIcuTextBreakIterator:(AndroidIcuTextBreakIterator *)titleIter;

/*!
 @brief <p>Returns the titlecase version of the argument string.
 <p>Position for titlecasing is determined by the argument break
  iterator, hence the user can customize his break iterator for
  a specialized titlecasing. In this case only the forward iteration
  needs to be implemented.
  If the break iterator passed in is null, the default Unicode algorithm
  will be used to determine the titlecase positions. 
 <p>Only positions returned by the break iterator will be title cased,
  character in between the positions will all be in lower case. 
 <p>Casing is dependent on the argument locale and context-sensitive
 @param locale which string is to be converted in
 @param str source string to be performed on
 @param titleIter break iterator to determine the positions in which         the character should be title cased.
 @param options bit set to modify the titlecasing operation
 @return lowercase version of the argument string
 - seealso: #TITLECASE_NO_LOWERCASE
 - seealso: #TITLECASE_NO_BREAK_ADJUSTMENT
 */
+ (NSString *)toTitleCaseWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale
                                      withNSString:(NSString *)str
                   withAndroidIcuTextBreakIterator:(AndroidIcuTextBreakIterator *)titleIter
                                           withInt:(jint)options;

/*!
 @brief Return a string with just the first word titlecased, for menus and UI, etc.This does not affect most of the string,
  and sometimes has no effect at all; the original string is returned whenever casing
  would not be appropriate for the first word (such as for CJK characters or initial numbers).
 Initial non-letters are skipped in order to find the character to change.
  Characters past the first affected are left untouched: see also TITLECASE_NO_LOWERCASE. 
 <p>Examples:
  <table border='1'><tr><th>Source</th><th>Result</th><th>Locale</th></tr>
  <tr><td>anglo-American locale</td><td>Anglo-American locale</td></tr>
  <tr><td>“contact us”</td><td>“Contact us”</td></tr>
  <tr><td>49ers win!</td><td>49ers win!</td></tr>
  <tr><td>丰(abc)</td><td>丰(abc)</td></tr>
  <tr><td>«ijs»</td><td>«Ijs»</td></tr>
  <tr><td>«ijs»</td><td>«IJs»</td><td>nl-BE</td></tr>
  <tr><td>«ijs»</td><td>«İjs»</td><td>tr-DE</td></tr>
  </table>
 @param locale the locale for accessing exceptional behavior (eg for tr).
 @param str the source string to change
 @return the modified string, or the original if no modifications were necessary.
 */
+ (NSString *)toTitleFirstWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale
                                       withNSString:(NSString *)str __attribute__((deprecated));

/*!
 @brief Converts the character argument to uppercase.
 If no uppercase is available, the character itself is returned.
  Up-to-date Unicode implementation of java.lang.Character.toUpperCase() 
 <p>This function only returns the simple, single-code point case mapping.
  Full case mappings should be used whenever possible because they produce
  better results by working on whole strings.
  They take into account the string context and the language and can map
  to a result string with a different length as appropriate.
  Full case mappings are applied by the case mapping functions
  that take String parameters rather than code points (int).
  See also the User Guide chapter on C/POSIX migration:
  http://www.icu-project.org/userguide/posix.html#case_mappings
 @param ch code point whose uppercase is to be retrieved
 @return uppercase code point
 */
+ (jint)toUpperCaseWithInt:(jint)ch;

/*!
 @brief Returns the uppercase version of the argument string.
 Casing is dependent on the argument locale and context-sensitive.
 @param locale which string is to be converted in
 @param str source string to be performed on
 @return uppercase version of the argument string
 */
+ (NSString *)toUpperCaseWithJavaUtilLocale:(JavaUtilLocale *)locale
                               withNSString:(NSString *)str;

/*!
 @brief Returns the uppercase version of the argument string.
 Casing is dependent on the default locale and context-sensitive.
 @param str source string to be performed on
 @return uppercase version of the argument string
 */
+ (NSString *)toUpperCaseWithNSString:(NSString *)str;

/*!
 @brief Returns the uppercase version of the argument string.
 Casing is dependent on the argument locale and context-sensitive.
 @param locale which string is to be converted in
 @param str source string to be performed on
 @return uppercase version of the argument string
 */
+ (NSString *)toUpperCaseWithAndroidIcuUtilULocale:(AndroidIcuUtilULocale *)locale
                                      withNSString:(NSString *)str;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter)

/*!
 @brief The lowest Unicode code point value, constant 0.
 Same as <code>Character.MIN_CODE_POINT</code>, same integer value as <code>Character.MIN_VALUE</code>.
 */
inline jint AndroidIcuLangUCharacter_get_MIN_VALUE(void);
#define AndroidIcuLangUCharacter_MIN_VALUE 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MIN_VALUE, jint)

/*!
 @brief The highest Unicode code point value (scalar value), constant U+10FFFF (uses 21 bits).
 Same as <code>Character.MAX_CODE_POINT</code>.
  
 <p>Up-to-date Unicode implementation of <code>Character.MAX_VALUE</code>
  which is still a char with the value U+FFFF.
 */
inline jint AndroidIcuLangUCharacter_get_MAX_VALUE(void);
#define AndroidIcuLangUCharacter_MAX_VALUE 1114111
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MAX_VALUE, jint)

/*!
 @brief The minimum value for Supplementary code points, constant U+10000.
 Same as <code>Character.MIN_SUPPLEMENTARY_CODE_POINT</code>.
 */
inline jint AndroidIcuLangUCharacter_get_SUPPLEMENTARY_MIN_VALUE(void);
#define AndroidIcuLangUCharacter_SUPPLEMENTARY_MIN_VALUE 65536
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, SUPPLEMENTARY_MIN_VALUE, jint)

/*!
 @brief Unicode value used when translating into Unicode encoding form and there
  is no existing character.
 */
inline jint AndroidIcuLangUCharacter_get_REPLACEMENT_CHAR(void);
#define AndroidIcuLangUCharacter_REPLACEMENT_CHAR 65533
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, REPLACEMENT_CHAR, jint)

/*!
 @brief Special value that is returned by getUnicodeNumericValue(int) when no
  numeric value is defined for a code point.
 - seealso: #getUnicodeNumericValue
 */
inline jdouble AndroidIcuLangUCharacter_get_NO_NUMERIC_VALUE(void);
#define AndroidIcuLangUCharacter_NO_NUMERIC_VALUE -1.23456789E8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, NO_NUMERIC_VALUE, jdouble)

/*!
 @brief Compatibility constant for Java Character's MIN_RADIX.
 */
inline jint AndroidIcuLangUCharacter_get_MIN_RADIX(void);
#define AndroidIcuLangUCharacter_MIN_RADIX 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MIN_RADIX, jint)

/*!
 @brief Compatibility constant for Java Character's MAX_RADIX.
 */
inline jint AndroidIcuLangUCharacter_get_MAX_RADIX(void);
#define AndroidIcuLangUCharacter_MAX_RADIX 36
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MAX_RADIX, jint)

/*!
 @brief Do not lowercase non-initial parts of words when titlecasing.
 Option bit for titlecasing APIs that take an options bit set.
  By default, titlecasing will titlecase the first cased character
  of a word and lowercase all other characters.
  With this option, the other characters will not be modified.
 - seealso: #toTitleCase
 */
inline jint AndroidIcuLangUCharacter_get_TITLECASE_NO_LOWERCASE(void);
#define AndroidIcuLangUCharacter_TITLECASE_NO_LOWERCASE 256
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, TITLECASE_NO_LOWERCASE, jint)

/*!
 @brief Do not adjust the titlecasing indexes from BreakIterator::next() indexes;
  titlecase exactly the characters at breaks from the iterator.
 Option bit for titlecasing APIs that take an options bit set.
  By default, titlecasing will take each break iterator index,
  adjust it by looking for the next cased character, and titlecase that one.
  Other characters are lowercased.
  This follows Unicode 4 &amp; 5 section 3.13 Default Case Operations:
  R3  toTitlecase(X): Find the word boundaries based on Unicode Standard Annex
  #29, "Text Boundaries." Between each pair of word boundaries, find the first
  cased character F. If F exists, map F to default_title(F); then map each
  subsequent character C to default_lower(C).
 - seealso: #toTitleCase
 - seealso: #TITLECASE_NO_LOWERCASE
 */
inline jint AndroidIcuLangUCharacter_get_TITLECASE_NO_BREAK_ADJUSTMENT(void);
#define AndroidIcuLangUCharacter_TITLECASE_NO_BREAK_ADJUSTMENT 512
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, TITLECASE_NO_BREAK_ADJUSTMENT, jint)

/*!
 @brief <strong>[icu]</strong> Option value for case folding: use default mappings defined in
  CaseFolding.txt.
 */
inline jint AndroidIcuLangUCharacter_get_FOLD_CASE_DEFAULT(void);
#define AndroidIcuLangUCharacter_FOLD_CASE_DEFAULT 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, FOLD_CASE_DEFAULT, jint)

/*!
 @brief <strong>[icu]</strong> Option value for case folding:
  Use the modified set of mappings provided in CaseFolding.txt to handle dotted I
  and dotless i appropriately for Turkic languages (tr, az).
 <p>Before Unicode 3.2, CaseFolding.txt contains mappings marked with 'I' that
  are to be included for default mappings and
  excluded for the Turkic-specific mappings. 
 <p>Unicode 3.2 CaseFolding.txt instead contains mappings marked with 'T' that
  are to be excluded for default mappings and
  included for the Turkic-specific mappings.
 */
inline jint AndroidIcuLangUCharacter_get_FOLD_CASE_EXCLUDE_SPECIAL_I(void);
#define AndroidIcuLangUCharacter_FOLD_CASE_EXCLUDE_SPECIAL_I 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, FOLD_CASE_EXCLUDE_SPECIAL_I, jint)

/*!
 @brief Constant U+D800, same as <code>Character.MIN_HIGH_SURROGATE</code>.
 */
inline jchar AndroidIcuLangUCharacter_get_MIN_HIGH_SURROGATE(void);
#define AndroidIcuLangUCharacter_MIN_HIGH_SURROGATE 0xd800
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MIN_HIGH_SURROGATE, jchar)

/*!
 @brief Constant U+DBFF, same as <code>Character.MAX_HIGH_SURROGATE</code>.
 */
inline jchar AndroidIcuLangUCharacter_get_MAX_HIGH_SURROGATE(void);
#define AndroidIcuLangUCharacter_MAX_HIGH_SURROGATE 0xdbff
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MAX_HIGH_SURROGATE, jchar)

/*!
 @brief Constant U+DC00, same as <code>Character.MIN_LOW_SURROGATE</code>.
 */
inline jchar AndroidIcuLangUCharacter_get_MIN_LOW_SURROGATE(void);
#define AndroidIcuLangUCharacter_MIN_LOW_SURROGATE 0xdc00
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MIN_LOW_SURROGATE, jchar)

/*!
 @brief Constant U+DFFF, same as <code>Character.MAX_LOW_SURROGATE</code>.
 */
inline jchar AndroidIcuLangUCharacter_get_MAX_LOW_SURROGATE(void);
#define AndroidIcuLangUCharacter_MAX_LOW_SURROGATE 0xdfff
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MAX_LOW_SURROGATE, jchar)

/*!
 @brief Constant U+D800, same as <code>Character.MIN_SURROGATE</code>.
 */
inline jchar AndroidIcuLangUCharacter_get_MIN_SURROGATE(void);
#define AndroidIcuLangUCharacter_MIN_SURROGATE 0xd800
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MIN_SURROGATE, jchar)

/*!
 @brief Constant U+DFFF, same as <code>Character.MAX_SURROGATE</code>.
 */
inline jchar AndroidIcuLangUCharacter_get_MAX_SURROGATE(void);
#define AndroidIcuLangUCharacter_MAX_SURROGATE 0xdfff
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MAX_SURROGATE, jchar)

/*!
 @brief Constant U+10000, same as <code>Character.MIN_SUPPLEMENTARY_CODE_POINT</code>.
 */
inline jint AndroidIcuLangUCharacter_get_MIN_SUPPLEMENTARY_CODE_POINT(void);
#define AndroidIcuLangUCharacter_MIN_SUPPLEMENTARY_CODE_POINT 65536
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MIN_SUPPLEMENTARY_CODE_POINT, jint)

/*!
 @brief Constant U+10FFFF, same as <code>Character.MAX_CODE_POINT</code>.
 */
inline jint AndroidIcuLangUCharacter_get_MAX_CODE_POINT(void);
#define AndroidIcuLangUCharacter_MAX_CODE_POINT 1114111
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MAX_CODE_POINT, jint)

/*!
 @brief Constant U+0000, same as <code>Character.MIN_CODE_POINT</code>.
 */
inline jint AndroidIcuLangUCharacter_get_MIN_CODE_POINT(void);
#define AndroidIcuLangUCharacter_MIN_CODE_POINT 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter, MIN_CODE_POINT, jint)

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_digitWithInt_withInt_(jint ch, jint radix);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_digitWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getNumericValueWithInt_(jint ch);

FOUNDATION_EXPORT jdouble AndroidIcuLangUCharacter_getUnicodeNumericValueWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isSpaceWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getTypeWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isDefinedWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isDigitWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isISOControlWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isLetterWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isLetterOrDigitWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isJavaLetterWithInt_(jint cp);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isJavaLetterOrDigitWithInt_(jint cp);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isJavaIdentifierStartWithInt_(jint cp);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isJavaIdentifierPartWithInt_(jint cp);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isLowerCaseWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isWhitespaceWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isSpaceCharWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isTitleCaseWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isUnicodeIdentifierPartWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isUnicodeIdentifierStartWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isIdentifierIgnorableWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isUpperCaseWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_toLowerCaseWithInt_(jint ch);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toStringWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_toTitleCaseWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_toUpperCaseWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isSupplementaryWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isBMPWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isPrintableWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isBaseFormWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getDirectionWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isMirroredWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getMirrorWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getBidiPairedBracketWithInt_(jint c);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getCombiningClassWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isLegalWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isLegalWithNSString_(NSString *str);

FOUNDATION_EXPORT AndroidIcuUtilVersionInfo *AndroidIcuLangUCharacter_getUnicodeVersion(void);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getNameWithInt_(jint ch);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getNameWithNSString_withNSString_(NSString *s, NSString *separator);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getName1_0WithInt_(jint ch);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getExtendedNameWithInt_(jint ch);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getNameAliasWithInt_(jint ch);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getISOCommentWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getCharFromNameWithNSString_(NSString *name);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getCharFromName1_0WithNSString_(NSString *name);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getCharFromExtendedNameWithNSString_(NSString *name);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getCharFromNameAliasWithNSString_(NSString *name);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getPropertyNameWithInt_withInt_(jint property, jint nameChoice);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getPropertyEnumWithJavaLangCharSequence_(id<JavaLangCharSequence> propertyAlias);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getPropertyValueNameWithInt_withInt_withInt_(jint property, jint value, jint nameChoice);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getPropertyValueEnumWithInt_withJavaLangCharSequence_(jint property, id<JavaLangCharSequence> valueAlias);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getPropertyValueEnumNoThrowWithInt_withJavaLangCharSequence_(jint property, id<JavaLangCharSequence> valueAlias);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getCodePointWithChar_withChar_(jchar lead, jchar trail);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getCodePointWithChar_(jchar char16);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toUpperCaseWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toLowerCaseWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toTitleCaseWithNSString_withAndroidIcuTextBreakIterator_(NSString *str, AndroidIcuTextBreakIterator *breakiter);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toUpperCaseWithJavaUtilLocale_withNSString_(JavaUtilLocale *locale, NSString *str);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toUpperCaseWithAndroidIcuUtilULocale_withNSString_(AndroidIcuUtilULocale *locale, NSString *str);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toLowerCaseWithJavaUtilLocale_withNSString_(JavaUtilLocale *locale, NSString *str);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toLowerCaseWithAndroidIcuUtilULocale_withNSString_(AndroidIcuUtilULocale *locale, NSString *str);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toTitleCaseWithJavaUtilLocale_withNSString_withAndroidIcuTextBreakIterator_(JavaUtilLocale *locale, NSString *str, AndroidIcuTextBreakIterator *breakiter);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toTitleCaseWithAndroidIcuUtilULocale_withNSString_withAndroidIcuTextBreakIterator_(AndroidIcuUtilULocale *locale, NSString *str, AndroidIcuTextBreakIterator *titleIter);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toTitleCaseWithAndroidIcuUtilULocale_withNSString_withAndroidIcuTextBreakIterator_withInt_(AndroidIcuUtilULocale *locale, NSString *str, AndroidIcuTextBreakIterator *titleIter, jint options);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toTitleFirstWithAndroidIcuUtilULocale_withNSString_(AndroidIcuUtilULocale *locale, NSString *str);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_toTitleCaseWithJavaUtilLocale_withNSString_withAndroidIcuTextBreakIterator_withInt_(JavaUtilLocale *locale, NSString *str, AndroidIcuTextBreakIterator *titleIter, jint options);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_foldCaseWithInt_withBoolean_(jint ch, jboolean defaultmapping);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_foldCaseWithNSString_withBoolean_(NSString *str, jboolean defaultmapping);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_foldCaseWithInt_withInt_(jint ch, jint options);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_foldCaseWithNSString_withInt_(NSString *str, jint options);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getHanNumericValueWithInt_(jint ch);

FOUNDATION_EXPORT id<AndroidIcuUtilRangeValueIterator> AndroidIcuLangUCharacter_getTypeIterator(void);

FOUNDATION_EXPORT id<AndroidIcuUtilValueIterator> AndroidIcuLangUCharacter_getNameIterator(void);

FOUNDATION_EXPORT id<AndroidIcuUtilValueIterator> AndroidIcuLangUCharacter_getName1_0Iterator(void);

FOUNDATION_EXPORT id<AndroidIcuUtilValueIterator> AndroidIcuLangUCharacter_getExtendedNameIterator(void);

FOUNDATION_EXPORT AndroidIcuUtilVersionInfo *AndroidIcuLangUCharacter_getAgeWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_hasBinaryPropertyWithInt_withInt_(jint ch, jint property);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isUAlphabeticWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isULowercaseWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isUUppercaseWithInt_(jint ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isUWhiteSpaceWithInt_(jint ch);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getIntPropertyValueWithInt_withInt_(jint ch, jint type);

FOUNDATION_EXPORT NSString *AndroidIcuLangUCharacter_getStringPropertyValueWithInt_withInt_withInt_(jint propertyEnum, jint codepoint, jint nameChoice);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getIntPropertyMinValueWithInt_(jint type);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_getIntPropertyMaxValueWithInt_(jint type);

FOUNDATION_EXPORT jchar AndroidIcuLangUCharacter_forDigitWithInt_withInt_(jint digit, jint radix);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isValidCodePointWithInt_(jint cp);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isSupplementaryCodePointWithInt_(jint cp);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isHighSurrogateWithChar_(jchar ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isLowSurrogateWithChar_(jchar ch);

FOUNDATION_EXPORT jboolean AndroidIcuLangUCharacter_isSurrogatePairWithChar_withChar_(jchar high, jchar low);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_charCountWithInt_(jint cp);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_toCodePointWithChar_withChar_(jchar high, jchar low);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointAtWithJavaLangCharSequence_withInt_(id<JavaLangCharSequence> seq, jint index);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointAtWithCharArray_withInt_(IOSCharArray *text, jint index);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointAtWithCharArray_withInt_withInt_(IOSCharArray *text, jint index, jint limit);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointBeforeWithJavaLangCharSequence_withInt_(id<JavaLangCharSequence> seq, jint index);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointBeforeWithCharArray_withInt_(IOSCharArray *text, jint index);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointBeforeWithCharArray_withInt_withInt_(IOSCharArray *text, jint index, jint limit);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_toCharsWithInt_withCharArray_withInt_(jint cp, IOSCharArray *dst, jint dstIndex);

FOUNDATION_EXPORT IOSCharArray *AndroidIcuLangUCharacter_toCharsWithInt_(jint cp);

FOUNDATION_EXPORT jbyte AndroidIcuLangUCharacter_getDirectionalityWithInt_(jint cp);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointCountWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> text, jint start, jint limit);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_codePointCountWithCharArray_withInt_withInt_(IOSCharArray *text, jint start, jint limit);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_offsetByCodePointsWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> text, jint index, jint codePointOffset);

FOUNDATION_EXPORT jint AndroidIcuLangUCharacter_offsetByCodePointsWithCharArray_withInt_withInt_withInt_withInt_(IOSCharArray *text, jint start, jint count, jint index, jint codePointOffset);

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter)

#endif

#if !defined (AndroidIcuLangUCharacter_UnicodeBlock_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_UnicodeBlock))
#define AndroidIcuLangUCharacter_UnicodeBlock_

#define RESTRICT_JavaLangCharacter 1
#define INCLUDE_JavaLangCharacter_Subset 1
#include "java/lang/Character.h"

/*!
 @brief <strong>[icu enhancement]</strong> ICU's replacement for <code>java.lang.Character.UnicodeBlock</code>.
 &nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.
 A family of character subsets representing the character blocks in the
  Unicode specification, generated from Unicode Data file Blocks.txt.
  Character blocks generally define characters used for a specific script
  or purpose. A character is contained by at most one Unicode block. 
 <strong>[icu] Note:</strong> All fields named XXX_ID are specific to ICU.
 */
@interface AndroidIcuLangUCharacter_UnicodeBlock : JavaLangCharacter_Subset
@property (readonly, class) jint INVALID_CODE_ID NS_SWIFT_NAME(INVALID_CODE_ID);
@property (readonly, class) jint BASIC_LATIN_ID NS_SWIFT_NAME(BASIC_LATIN_ID);
@property (readonly, class) jint LATIN_1_SUPPLEMENT_ID NS_SWIFT_NAME(LATIN_1_SUPPLEMENT_ID);
@property (readonly, class) jint LATIN_EXTENDED_A_ID NS_SWIFT_NAME(LATIN_EXTENDED_A_ID);
@property (readonly, class) jint LATIN_EXTENDED_B_ID NS_SWIFT_NAME(LATIN_EXTENDED_B_ID);
@property (readonly, class) jint IPA_EXTENSIONS_ID NS_SWIFT_NAME(IPA_EXTENSIONS_ID);
@property (readonly, class) jint SPACING_MODIFIER_LETTERS_ID NS_SWIFT_NAME(SPACING_MODIFIER_LETTERS_ID);
@property (readonly, class) jint COMBINING_DIACRITICAL_MARKS_ID NS_SWIFT_NAME(COMBINING_DIACRITICAL_MARKS_ID);
@property (readonly, class) jint GREEK_ID NS_SWIFT_NAME(GREEK_ID);
@property (readonly, class) jint CYRILLIC_ID NS_SWIFT_NAME(CYRILLIC_ID);
@property (readonly, class) jint ARMENIAN_ID NS_SWIFT_NAME(ARMENIAN_ID);
@property (readonly, class) jint HEBREW_ID NS_SWIFT_NAME(HEBREW_ID);
@property (readonly, class) jint ARABIC_ID NS_SWIFT_NAME(ARABIC_ID);
@property (readonly, class) jint SYRIAC_ID NS_SWIFT_NAME(SYRIAC_ID);
@property (readonly, class) jint THAANA_ID NS_SWIFT_NAME(THAANA_ID);
@property (readonly, class) jint DEVANAGARI_ID NS_SWIFT_NAME(DEVANAGARI_ID);
@property (readonly, class) jint BENGALI_ID NS_SWIFT_NAME(BENGALI_ID);
@property (readonly, class) jint GURMUKHI_ID NS_SWIFT_NAME(GURMUKHI_ID);
@property (readonly, class) jint GUJARATI_ID NS_SWIFT_NAME(GUJARATI_ID);
@property (readonly, class) jint ORIYA_ID NS_SWIFT_NAME(ORIYA_ID);
@property (readonly, class) jint TAMIL_ID NS_SWIFT_NAME(TAMIL_ID);
@property (readonly, class) jint TELUGU_ID NS_SWIFT_NAME(TELUGU_ID);
@property (readonly, class) jint KANNADA_ID NS_SWIFT_NAME(KANNADA_ID);
@property (readonly, class) jint MALAYALAM_ID NS_SWIFT_NAME(MALAYALAM_ID);
@property (readonly, class) jint SINHALA_ID NS_SWIFT_NAME(SINHALA_ID);
@property (readonly, class) jint THAI_ID NS_SWIFT_NAME(THAI_ID);
@property (readonly, class) jint LAO_ID NS_SWIFT_NAME(LAO_ID);
@property (readonly, class) jint TIBETAN_ID NS_SWIFT_NAME(TIBETAN_ID);
@property (readonly, class) jint MYANMAR_ID NS_SWIFT_NAME(MYANMAR_ID);
@property (readonly, class) jint GEORGIAN_ID NS_SWIFT_NAME(GEORGIAN_ID);
@property (readonly, class) jint HANGUL_JAMO_ID NS_SWIFT_NAME(HANGUL_JAMO_ID);
@property (readonly, class) jint ETHIOPIC_ID NS_SWIFT_NAME(ETHIOPIC_ID);
@property (readonly, class) jint CHEROKEE_ID NS_SWIFT_NAME(CHEROKEE_ID);
@property (readonly, class) jint UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID NS_SWIFT_NAME(UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID);
@property (readonly, class) jint OGHAM_ID NS_SWIFT_NAME(OGHAM_ID);
@property (readonly, class) jint RUNIC_ID NS_SWIFT_NAME(RUNIC_ID);
@property (readonly, class) jint KHMER_ID NS_SWIFT_NAME(KHMER_ID);
@property (readonly, class) jint MONGOLIAN_ID NS_SWIFT_NAME(MONGOLIAN_ID);
@property (readonly, class) jint LATIN_EXTENDED_ADDITIONAL_ID NS_SWIFT_NAME(LATIN_EXTENDED_ADDITIONAL_ID);
@property (readonly, class) jint GREEK_EXTENDED_ID NS_SWIFT_NAME(GREEK_EXTENDED_ID);
@property (readonly, class) jint GENERAL_PUNCTUATION_ID NS_SWIFT_NAME(GENERAL_PUNCTUATION_ID);
@property (readonly, class) jint SUPERSCRIPTS_AND_SUBSCRIPTS_ID NS_SWIFT_NAME(SUPERSCRIPTS_AND_SUBSCRIPTS_ID);
@property (readonly, class) jint CURRENCY_SYMBOLS_ID NS_SWIFT_NAME(CURRENCY_SYMBOLS_ID);
@property (readonly, class) jint COMBINING_MARKS_FOR_SYMBOLS_ID NS_SWIFT_NAME(COMBINING_MARKS_FOR_SYMBOLS_ID);
@property (readonly, class) jint LETTERLIKE_SYMBOLS_ID NS_SWIFT_NAME(LETTERLIKE_SYMBOLS_ID);
@property (readonly, class) jint NUMBER_FORMS_ID NS_SWIFT_NAME(NUMBER_FORMS_ID);
@property (readonly, class) jint ARROWS_ID NS_SWIFT_NAME(ARROWS_ID);
@property (readonly, class) jint MATHEMATICAL_OPERATORS_ID NS_SWIFT_NAME(MATHEMATICAL_OPERATORS_ID);
@property (readonly, class) jint MISCELLANEOUS_TECHNICAL_ID NS_SWIFT_NAME(MISCELLANEOUS_TECHNICAL_ID);
@property (readonly, class) jint CONTROL_PICTURES_ID NS_SWIFT_NAME(CONTROL_PICTURES_ID);
@property (readonly, class) jint OPTICAL_CHARACTER_RECOGNITION_ID NS_SWIFT_NAME(OPTICAL_CHARACTER_RECOGNITION_ID);
@property (readonly, class) jint ENCLOSED_ALPHANUMERICS_ID NS_SWIFT_NAME(ENCLOSED_ALPHANUMERICS_ID);
@property (readonly, class) jint BOX_DRAWING_ID NS_SWIFT_NAME(BOX_DRAWING_ID);
@property (readonly, class) jint BLOCK_ELEMENTS_ID NS_SWIFT_NAME(BLOCK_ELEMENTS_ID);
@property (readonly, class) jint GEOMETRIC_SHAPES_ID NS_SWIFT_NAME(GEOMETRIC_SHAPES_ID);
@property (readonly, class) jint MISCELLANEOUS_SYMBOLS_ID NS_SWIFT_NAME(MISCELLANEOUS_SYMBOLS_ID);
@property (readonly, class) jint DINGBATS_ID NS_SWIFT_NAME(DINGBATS_ID);
@property (readonly, class) jint BRAILLE_PATTERNS_ID NS_SWIFT_NAME(BRAILLE_PATTERNS_ID);
@property (readonly, class) jint CJK_RADICALS_SUPPLEMENT_ID NS_SWIFT_NAME(CJK_RADICALS_SUPPLEMENT_ID);
@property (readonly, class) jint KANGXI_RADICALS_ID NS_SWIFT_NAME(KANGXI_RADICALS_ID);
@property (readonly, class) jint IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID NS_SWIFT_NAME(IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID);
@property (readonly, class) jint CJK_SYMBOLS_AND_PUNCTUATION_ID NS_SWIFT_NAME(CJK_SYMBOLS_AND_PUNCTUATION_ID);
@property (readonly, class) jint HIRAGANA_ID NS_SWIFT_NAME(HIRAGANA_ID);
@property (readonly, class) jint KATAKANA_ID NS_SWIFT_NAME(KATAKANA_ID);
@property (readonly, class) jint BOPOMOFO_ID NS_SWIFT_NAME(BOPOMOFO_ID);
@property (readonly, class) jint HANGUL_COMPATIBILITY_JAMO_ID NS_SWIFT_NAME(HANGUL_COMPATIBILITY_JAMO_ID);
@property (readonly, class) jint KANBUN_ID NS_SWIFT_NAME(KANBUN_ID);
@property (readonly, class) jint BOPOMOFO_EXTENDED_ID NS_SWIFT_NAME(BOPOMOFO_EXTENDED_ID);
@property (readonly, class) jint ENCLOSED_CJK_LETTERS_AND_MONTHS_ID NS_SWIFT_NAME(ENCLOSED_CJK_LETTERS_AND_MONTHS_ID);
@property (readonly, class) jint CJK_COMPATIBILITY_ID NS_SWIFT_NAME(CJK_COMPATIBILITY_ID);
@property (readonly, class) jint CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID);
@property (readonly, class) jint CJK_UNIFIED_IDEOGRAPHS_ID NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_ID);
@property (readonly, class) jint YI_SYLLABLES_ID NS_SWIFT_NAME(YI_SYLLABLES_ID);
@property (readonly, class) jint YI_RADICALS_ID NS_SWIFT_NAME(YI_RADICALS_ID);
@property (readonly, class) jint HANGUL_SYLLABLES_ID NS_SWIFT_NAME(HANGUL_SYLLABLES_ID);
@property (readonly, class) jint HIGH_SURROGATES_ID NS_SWIFT_NAME(HIGH_SURROGATES_ID);
@property (readonly, class) jint HIGH_PRIVATE_USE_SURROGATES_ID NS_SWIFT_NAME(HIGH_PRIVATE_USE_SURROGATES_ID);
@property (readonly, class) jint LOW_SURROGATES_ID NS_SWIFT_NAME(LOW_SURROGATES_ID);
@property (readonly, class) jint PRIVATE_USE_AREA_ID NS_SWIFT_NAME(PRIVATE_USE_AREA_ID);
@property (readonly, class) jint PRIVATE_USE_ID NS_SWIFT_NAME(PRIVATE_USE_ID);
@property (readonly, class) jint CJK_COMPATIBILITY_IDEOGRAPHS_ID NS_SWIFT_NAME(CJK_COMPATIBILITY_IDEOGRAPHS_ID);
@property (readonly, class) jint ALPHABETIC_PRESENTATION_FORMS_ID NS_SWIFT_NAME(ALPHABETIC_PRESENTATION_FORMS_ID);
@property (readonly, class) jint ARABIC_PRESENTATION_FORMS_A_ID NS_SWIFT_NAME(ARABIC_PRESENTATION_FORMS_A_ID);
@property (readonly, class) jint COMBINING_HALF_MARKS_ID NS_SWIFT_NAME(COMBINING_HALF_MARKS_ID);
@property (readonly, class) jint CJK_COMPATIBILITY_FORMS_ID NS_SWIFT_NAME(CJK_COMPATIBILITY_FORMS_ID);
@property (readonly, class) jint SMALL_FORM_VARIANTS_ID NS_SWIFT_NAME(SMALL_FORM_VARIANTS_ID);
@property (readonly, class) jint ARABIC_PRESENTATION_FORMS_B_ID NS_SWIFT_NAME(ARABIC_PRESENTATION_FORMS_B_ID);
@property (readonly, class) jint SPECIALS_ID NS_SWIFT_NAME(SPECIALS_ID);
@property (readonly, class) jint HALFWIDTH_AND_FULLWIDTH_FORMS_ID NS_SWIFT_NAME(HALFWIDTH_AND_FULLWIDTH_FORMS_ID);
@property (readonly, class) jint OLD_ITALIC_ID NS_SWIFT_NAME(OLD_ITALIC_ID);
@property (readonly, class) jint GOTHIC_ID NS_SWIFT_NAME(GOTHIC_ID);
@property (readonly, class) jint DESERET_ID NS_SWIFT_NAME(DESERET_ID);
@property (readonly, class) jint BYZANTINE_MUSICAL_SYMBOLS_ID NS_SWIFT_NAME(BYZANTINE_MUSICAL_SYMBOLS_ID);
@property (readonly, class) jint MUSICAL_SYMBOLS_ID NS_SWIFT_NAME(MUSICAL_SYMBOLS_ID);
@property (readonly, class) jint MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID NS_SWIFT_NAME(MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID);
@property (readonly, class) jint CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID);
@property (readonly, class) jint CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID NS_SWIFT_NAME(CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID);
@property (readonly, class) jint TAGS_ID NS_SWIFT_NAME(TAGS_ID);
@property (readonly, class) jint CYRILLIC_SUPPLEMENTARY_ID NS_SWIFT_NAME(CYRILLIC_SUPPLEMENTARY_ID);
@property (readonly, class) jint CYRILLIC_SUPPLEMENT_ID NS_SWIFT_NAME(CYRILLIC_SUPPLEMENT_ID);
@property (readonly, class) jint TAGALOG_ID NS_SWIFT_NAME(TAGALOG_ID);
@property (readonly, class) jint HANUNOO_ID NS_SWIFT_NAME(HANUNOO_ID);
@property (readonly, class) jint BUHID_ID NS_SWIFT_NAME(BUHID_ID);
@property (readonly, class) jint TAGBANWA_ID NS_SWIFT_NAME(TAGBANWA_ID);
@property (readonly, class) jint MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID NS_SWIFT_NAME(MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID);
@property (readonly, class) jint SUPPLEMENTAL_ARROWS_A_ID NS_SWIFT_NAME(SUPPLEMENTAL_ARROWS_A_ID);
@property (readonly, class) jint SUPPLEMENTAL_ARROWS_B_ID NS_SWIFT_NAME(SUPPLEMENTAL_ARROWS_B_ID);
@property (readonly, class) jint MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID NS_SWIFT_NAME(MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID);
@property (readonly, class) jint SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID NS_SWIFT_NAME(SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID);
@property (readonly, class) jint KATAKANA_PHONETIC_EXTENSIONS_ID NS_SWIFT_NAME(KATAKANA_PHONETIC_EXTENSIONS_ID);
@property (readonly, class) jint VARIATION_SELECTORS_ID NS_SWIFT_NAME(VARIATION_SELECTORS_ID);
@property (readonly, class) jint SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID NS_SWIFT_NAME(SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID);
@property (readonly, class) jint SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID NS_SWIFT_NAME(SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID);
@property (readonly, class) jint LIMBU_ID NS_SWIFT_NAME(LIMBU_ID);
@property (readonly, class) jint TAI_LE_ID NS_SWIFT_NAME(TAI_LE_ID);
@property (readonly, class) jint KHMER_SYMBOLS_ID NS_SWIFT_NAME(KHMER_SYMBOLS_ID);
@property (readonly, class) jint PHONETIC_EXTENSIONS_ID NS_SWIFT_NAME(PHONETIC_EXTENSIONS_ID);
@property (readonly, class) jint MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID NS_SWIFT_NAME(MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID);
@property (readonly, class) jint YIJING_HEXAGRAM_SYMBOLS_ID NS_SWIFT_NAME(YIJING_HEXAGRAM_SYMBOLS_ID);
@property (readonly, class) jint LINEAR_B_SYLLABARY_ID NS_SWIFT_NAME(LINEAR_B_SYLLABARY_ID);
@property (readonly, class) jint LINEAR_B_IDEOGRAMS_ID NS_SWIFT_NAME(LINEAR_B_IDEOGRAMS_ID);
@property (readonly, class) jint AEGEAN_NUMBERS_ID NS_SWIFT_NAME(AEGEAN_NUMBERS_ID);
@property (readonly, class) jint UGARITIC_ID NS_SWIFT_NAME(UGARITIC_ID);
@property (readonly, class) jint SHAVIAN_ID NS_SWIFT_NAME(SHAVIAN_ID);
@property (readonly, class) jint OSMANYA_ID NS_SWIFT_NAME(OSMANYA_ID);
@property (readonly, class) jint CYPRIOT_SYLLABARY_ID NS_SWIFT_NAME(CYPRIOT_SYLLABARY_ID);
@property (readonly, class) jint TAI_XUAN_JING_SYMBOLS_ID NS_SWIFT_NAME(TAI_XUAN_JING_SYMBOLS_ID);
@property (readonly, class) jint VARIATION_SELECTORS_SUPPLEMENT_ID NS_SWIFT_NAME(VARIATION_SELECTORS_SUPPLEMENT_ID);
@property (readonly, class) jint ANCIENT_GREEK_MUSICAL_NOTATION_ID NS_SWIFT_NAME(ANCIENT_GREEK_MUSICAL_NOTATION_ID);
@property (readonly, class) jint ANCIENT_GREEK_NUMBERS_ID NS_SWIFT_NAME(ANCIENT_GREEK_NUMBERS_ID);
@property (readonly, class) jint ARABIC_SUPPLEMENT_ID NS_SWIFT_NAME(ARABIC_SUPPLEMENT_ID);
@property (readonly, class) jint BUGINESE_ID NS_SWIFT_NAME(BUGINESE_ID);
@property (readonly, class) jint CJK_STROKES_ID NS_SWIFT_NAME(CJK_STROKES_ID);
@property (readonly, class) jint COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID NS_SWIFT_NAME(COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID);
@property (readonly, class) jint COPTIC_ID NS_SWIFT_NAME(COPTIC_ID);
@property (readonly, class) jint ETHIOPIC_EXTENDED_ID NS_SWIFT_NAME(ETHIOPIC_EXTENDED_ID);
@property (readonly, class) jint ETHIOPIC_SUPPLEMENT_ID NS_SWIFT_NAME(ETHIOPIC_SUPPLEMENT_ID);
@property (readonly, class) jint GEORGIAN_SUPPLEMENT_ID NS_SWIFT_NAME(GEORGIAN_SUPPLEMENT_ID);
@property (readonly, class) jint GLAGOLITIC_ID NS_SWIFT_NAME(GLAGOLITIC_ID);
@property (readonly, class) jint KHAROSHTHI_ID NS_SWIFT_NAME(KHAROSHTHI_ID);
@property (readonly, class) jint MODIFIER_TONE_LETTERS_ID NS_SWIFT_NAME(MODIFIER_TONE_LETTERS_ID);
@property (readonly, class) jint NEW_TAI_LUE_ID NS_SWIFT_NAME(NEW_TAI_LUE_ID);
@property (readonly, class) jint OLD_PERSIAN_ID NS_SWIFT_NAME(OLD_PERSIAN_ID);
@property (readonly, class) jint PHONETIC_EXTENSIONS_SUPPLEMENT_ID NS_SWIFT_NAME(PHONETIC_EXTENSIONS_SUPPLEMENT_ID);
@property (readonly, class) jint SUPPLEMENTAL_PUNCTUATION_ID NS_SWIFT_NAME(SUPPLEMENTAL_PUNCTUATION_ID);
@property (readonly, class) jint SYLOTI_NAGRI_ID NS_SWIFT_NAME(SYLOTI_NAGRI_ID);
@property (readonly, class) jint TIFINAGH_ID NS_SWIFT_NAME(TIFINAGH_ID);
@property (readonly, class) jint VERTICAL_FORMS_ID NS_SWIFT_NAME(VERTICAL_FORMS_ID);
@property (readonly, class) jint NKO_ID NS_SWIFT_NAME(NKO_ID);
@property (readonly, class) jint BALINESE_ID NS_SWIFT_NAME(BALINESE_ID);
@property (readonly, class) jint LATIN_EXTENDED_C_ID NS_SWIFT_NAME(LATIN_EXTENDED_C_ID);
@property (readonly, class) jint LATIN_EXTENDED_D_ID NS_SWIFT_NAME(LATIN_EXTENDED_D_ID);
@property (readonly, class) jint PHAGS_PA_ID NS_SWIFT_NAME(PHAGS_PA_ID);
@property (readonly, class) jint PHOENICIAN_ID NS_SWIFT_NAME(PHOENICIAN_ID);
@property (readonly, class) jint CUNEIFORM_ID NS_SWIFT_NAME(CUNEIFORM_ID);
@property (readonly, class) jint CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID NS_SWIFT_NAME(CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID);
@property (readonly, class) jint COUNTING_ROD_NUMERALS_ID NS_SWIFT_NAME(COUNTING_ROD_NUMERALS_ID);
@property (readonly, class) jint SUNDANESE_ID NS_SWIFT_NAME(SUNDANESE_ID);
@property (readonly, class) jint LEPCHA_ID NS_SWIFT_NAME(LEPCHA_ID);
@property (readonly, class) jint OL_CHIKI_ID NS_SWIFT_NAME(OL_CHIKI_ID);
@property (readonly, class) jint CYRILLIC_EXTENDED_A_ID NS_SWIFT_NAME(CYRILLIC_EXTENDED_A_ID);
@property (readonly, class) jint VAI_ID NS_SWIFT_NAME(VAI_ID);
@property (readonly, class) jint CYRILLIC_EXTENDED_B_ID NS_SWIFT_NAME(CYRILLIC_EXTENDED_B_ID);
@property (readonly, class) jint SAURASHTRA_ID NS_SWIFT_NAME(SAURASHTRA_ID);
@property (readonly, class) jint KAYAH_LI_ID NS_SWIFT_NAME(KAYAH_LI_ID);
@property (readonly, class) jint REJANG_ID NS_SWIFT_NAME(REJANG_ID);
@property (readonly, class) jint CHAM_ID NS_SWIFT_NAME(CHAM_ID);
@property (readonly, class) jint ANCIENT_SYMBOLS_ID NS_SWIFT_NAME(ANCIENT_SYMBOLS_ID);
@property (readonly, class) jint PHAISTOS_DISC_ID NS_SWIFT_NAME(PHAISTOS_DISC_ID);
@property (readonly, class) jint LYCIAN_ID NS_SWIFT_NAME(LYCIAN_ID);
@property (readonly, class) jint CARIAN_ID NS_SWIFT_NAME(CARIAN_ID);
@property (readonly, class) jint LYDIAN_ID NS_SWIFT_NAME(LYDIAN_ID);
@property (readonly, class) jint MAHJONG_TILES_ID NS_SWIFT_NAME(MAHJONG_TILES_ID);
@property (readonly, class) jint DOMINO_TILES_ID NS_SWIFT_NAME(DOMINO_TILES_ID);
@property (readonly, class) jint SAMARITAN_ID NS_SWIFT_NAME(SAMARITAN_ID);
@property (readonly, class) jint UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID NS_SWIFT_NAME(UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID);
@property (readonly, class) jint TAI_THAM_ID NS_SWIFT_NAME(TAI_THAM_ID);
@property (readonly, class) jint VEDIC_EXTENSIONS_ID NS_SWIFT_NAME(VEDIC_EXTENSIONS_ID);
@property (readonly, class) jint LISU_ID NS_SWIFT_NAME(LISU_ID);
@property (readonly, class) jint BAMUM_ID NS_SWIFT_NAME(BAMUM_ID);
@property (readonly, class) jint COMMON_INDIC_NUMBER_FORMS_ID NS_SWIFT_NAME(COMMON_INDIC_NUMBER_FORMS_ID);
@property (readonly, class) jint DEVANAGARI_EXTENDED_ID NS_SWIFT_NAME(DEVANAGARI_EXTENDED_ID);
@property (readonly, class) jint HANGUL_JAMO_EXTENDED_A_ID NS_SWIFT_NAME(HANGUL_JAMO_EXTENDED_A_ID);
@property (readonly, class) jint JAVANESE_ID NS_SWIFT_NAME(JAVANESE_ID);
@property (readonly, class) jint MYANMAR_EXTENDED_A_ID NS_SWIFT_NAME(MYANMAR_EXTENDED_A_ID);
@property (readonly, class) jint TAI_VIET_ID NS_SWIFT_NAME(TAI_VIET_ID);
@property (readonly, class) jint MEETEI_MAYEK_ID NS_SWIFT_NAME(MEETEI_MAYEK_ID);
@property (readonly, class) jint HANGUL_JAMO_EXTENDED_B_ID NS_SWIFT_NAME(HANGUL_JAMO_EXTENDED_B_ID);
@property (readonly, class) jint IMPERIAL_ARAMAIC_ID NS_SWIFT_NAME(IMPERIAL_ARAMAIC_ID);
@property (readonly, class) jint OLD_SOUTH_ARABIAN_ID NS_SWIFT_NAME(OLD_SOUTH_ARABIAN_ID);
@property (readonly, class) jint AVESTAN_ID NS_SWIFT_NAME(AVESTAN_ID);
@property (readonly, class) jint INSCRIPTIONAL_PARTHIAN_ID NS_SWIFT_NAME(INSCRIPTIONAL_PARTHIAN_ID);
@property (readonly, class) jint INSCRIPTIONAL_PAHLAVI_ID NS_SWIFT_NAME(INSCRIPTIONAL_PAHLAVI_ID);
@property (readonly, class) jint OLD_TURKIC_ID NS_SWIFT_NAME(OLD_TURKIC_ID);
@property (readonly, class) jint RUMI_NUMERAL_SYMBOLS_ID NS_SWIFT_NAME(RUMI_NUMERAL_SYMBOLS_ID);
@property (readonly, class) jint KAITHI_ID NS_SWIFT_NAME(KAITHI_ID);
@property (readonly, class) jint EGYPTIAN_HIEROGLYPHS_ID NS_SWIFT_NAME(EGYPTIAN_HIEROGLYPHS_ID);
@property (readonly, class) jint ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID NS_SWIFT_NAME(ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID);
@property (readonly, class) jint ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID NS_SWIFT_NAME(ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID);
@property (readonly, class) jint CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID);
@property (readonly, class) jint MANDAIC_ID NS_SWIFT_NAME(MANDAIC_ID);
@property (readonly, class) jint BATAK_ID NS_SWIFT_NAME(BATAK_ID);
@property (readonly, class) jint ETHIOPIC_EXTENDED_A_ID NS_SWIFT_NAME(ETHIOPIC_EXTENDED_A_ID);
@property (readonly, class) jint BRAHMI_ID NS_SWIFT_NAME(BRAHMI_ID);
@property (readonly, class) jint BAMUM_SUPPLEMENT_ID NS_SWIFT_NAME(BAMUM_SUPPLEMENT_ID);
@property (readonly, class) jint KANA_SUPPLEMENT_ID NS_SWIFT_NAME(KANA_SUPPLEMENT_ID);
@property (readonly, class) jint PLAYING_CARDS_ID NS_SWIFT_NAME(PLAYING_CARDS_ID);
@property (readonly, class) jint MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID NS_SWIFT_NAME(MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID);
@property (readonly, class) jint EMOTICONS_ID NS_SWIFT_NAME(EMOTICONS_ID);
@property (readonly, class) jint TRANSPORT_AND_MAP_SYMBOLS_ID NS_SWIFT_NAME(TRANSPORT_AND_MAP_SYMBOLS_ID);
@property (readonly, class) jint ALCHEMICAL_SYMBOLS_ID NS_SWIFT_NAME(ALCHEMICAL_SYMBOLS_ID);
@property (readonly, class) jint CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID);
@property (readonly, class) jint ARABIC_EXTENDED_A_ID NS_SWIFT_NAME(ARABIC_EXTENDED_A_ID);
@property (readonly, class) jint ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID NS_SWIFT_NAME(ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID);
@property (readonly, class) jint CHAKMA_ID NS_SWIFT_NAME(CHAKMA_ID);
@property (readonly, class) jint MEETEI_MAYEK_EXTENSIONS_ID NS_SWIFT_NAME(MEETEI_MAYEK_EXTENSIONS_ID);
@property (readonly, class) jint MEROITIC_CURSIVE_ID NS_SWIFT_NAME(MEROITIC_CURSIVE_ID);
@property (readonly, class) jint MEROITIC_HIEROGLYPHS_ID NS_SWIFT_NAME(MEROITIC_HIEROGLYPHS_ID);
@property (readonly, class) jint MIAO_ID NS_SWIFT_NAME(MIAO_ID);
@property (readonly, class) jint SHARADA_ID NS_SWIFT_NAME(SHARADA_ID);
@property (readonly, class) jint SORA_SOMPENG_ID NS_SWIFT_NAME(SORA_SOMPENG_ID);
@property (readonly, class) jint SUNDANESE_SUPPLEMENT_ID NS_SWIFT_NAME(SUNDANESE_SUPPLEMENT_ID);
@property (readonly, class) jint TAKRI_ID NS_SWIFT_NAME(TAKRI_ID);
@property (readonly, class) jint BASSA_VAH_ID NS_SWIFT_NAME(BASSA_VAH_ID);
@property (readonly, class) jint CAUCASIAN_ALBANIAN_ID NS_SWIFT_NAME(CAUCASIAN_ALBANIAN_ID);
@property (readonly, class) jint COPTIC_EPACT_NUMBERS_ID NS_SWIFT_NAME(COPTIC_EPACT_NUMBERS_ID);
@property (readonly, class) jint COMBINING_DIACRITICAL_MARKS_EXTENDED_ID NS_SWIFT_NAME(COMBINING_DIACRITICAL_MARKS_EXTENDED_ID);
@property (readonly, class) jint DUPLOYAN_ID NS_SWIFT_NAME(DUPLOYAN_ID);
@property (readonly, class) jint ELBASAN_ID NS_SWIFT_NAME(ELBASAN_ID);
@property (readonly, class) jint GEOMETRIC_SHAPES_EXTENDED_ID NS_SWIFT_NAME(GEOMETRIC_SHAPES_EXTENDED_ID);
@property (readonly, class) jint GRANTHA_ID NS_SWIFT_NAME(GRANTHA_ID);
@property (readonly, class) jint KHOJKI_ID NS_SWIFT_NAME(KHOJKI_ID);
@property (readonly, class) jint KHUDAWADI_ID NS_SWIFT_NAME(KHUDAWADI_ID);
@property (readonly, class) jint LATIN_EXTENDED_E_ID NS_SWIFT_NAME(LATIN_EXTENDED_E_ID);
@property (readonly, class) jint LINEAR_A_ID NS_SWIFT_NAME(LINEAR_A_ID);
@property (readonly, class) jint MAHAJANI_ID NS_SWIFT_NAME(MAHAJANI_ID);
@property (readonly, class) jint MANICHAEAN_ID NS_SWIFT_NAME(MANICHAEAN_ID);
@property (readonly, class) jint MENDE_KIKAKUI_ID NS_SWIFT_NAME(MENDE_KIKAKUI_ID);
@property (readonly, class) jint MODI_ID NS_SWIFT_NAME(MODI_ID);
@property (readonly, class) jint MRO_ID NS_SWIFT_NAME(MRO_ID);
@property (readonly, class) jint MYANMAR_EXTENDED_B_ID NS_SWIFT_NAME(MYANMAR_EXTENDED_B_ID);
@property (readonly, class) jint NABATAEAN_ID NS_SWIFT_NAME(NABATAEAN_ID);
@property (readonly, class) jint OLD_NORTH_ARABIAN_ID NS_SWIFT_NAME(OLD_NORTH_ARABIAN_ID);
@property (readonly, class) jint OLD_PERMIC_ID NS_SWIFT_NAME(OLD_PERMIC_ID);
@property (readonly, class) jint ORNAMENTAL_DINGBATS_ID NS_SWIFT_NAME(ORNAMENTAL_DINGBATS_ID);
@property (readonly, class) jint PAHAWH_HMONG_ID NS_SWIFT_NAME(PAHAWH_HMONG_ID);
@property (readonly, class) jint PALMYRENE_ID NS_SWIFT_NAME(PALMYRENE_ID);
@property (readonly, class) jint PAU_CIN_HAU_ID NS_SWIFT_NAME(PAU_CIN_HAU_ID);
@property (readonly, class) jint PSALTER_PAHLAVI_ID NS_SWIFT_NAME(PSALTER_PAHLAVI_ID);
@property (readonly, class) jint SHORTHAND_FORMAT_CONTROLS_ID NS_SWIFT_NAME(SHORTHAND_FORMAT_CONTROLS_ID);
@property (readonly, class) jint SIDDHAM_ID NS_SWIFT_NAME(SIDDHAM_ID);
@property (readonly, class) jint SINHALA_ARCHAIC_NUMBERS_ID NS_SWIFT_NAME(SINHALA_ARCHAIC_NUMBERS_ID);
@property (readonly, class) jint SUPPLEMENTAL_ARROWS_C_ID NS_SWIFT_NAME(SUPPLEMENTAL_ARROWS_C_ID);
@property (readonly, class) jint TIRHUTA_ID NS_SWIFT_NAME(TIRHUTA_ID);
@property (readonly, class) jint WARANG_CITI_ID NS_SWIFT_NAME(WARANG_CITI_ID);
@property (readonly, class) jint AHOM_ID NS_SWIFT_NAME(AHOM_ID);
@property (readonly, class) jint ANATOLIAN_HIEROGLYPHS_ID NS_SWIFT_NAME(ANATOLIAN_HIEROGLYPHS_ID);
@property (readonly, class) jint CHEROKEE_SUPPLEMENT_ID NS_SWIFT_NAME(CHEROKEE_SUPPLEMENT_ID);
@property (readonly, class) jint CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID);
@property (readonly, class) jint EARLY_DYNASTIC_CUNEIFORM_ID NS_SWIFT_NAME(EARLY_DYNASTIC_CUNEIFORM_ID);
@property (readonly, class) jint HATRAN_ID NS_SWIFT_NAME(HATRAN_ID);
@property (readonly, class) jint MULTANI_ID NS_SWIFT_NAME(MULTANI_ID);
@property (readonly, class) jint OLD_HUNGARIAN_ID NS_SWIFT_NAME(OLD_HUNGARIAN_ID);
@property (readonly, class) jint SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID NS_SWIFT_NAME(SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID);
@property (readonly, class) jint SUTTON_SIGNWRITING_ID NS_SWIFT_NAME(SUTTON_SIGNWRITING_ID);
@property (readonly, class) jint ADLAM_ID NS_SWIFT_NAME(ADLAM_ID);
@property (readonly, class) jint BHAIKSUKI_ID NS_SWIFT_NAME(BHAIKSUKI_ID);
@property (readonly, class) jint CYRILLIC_EXTENDED_C_ID NS_SWIFT_NAME(CYRILLIC_EXTENDED_C_ID);
@property (readonly, class) jint GLAGOLITIC_SUPPLEMENT_ID NS_SWIFT_NAME(GLAGOLITIC_SUPPLEMENT_ID);
@property (readonly, class) jint IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID NS_SWIFT_NAME(IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID);
@property (readonly, class) jint MARCHEN_ID NS_SWIFT_NAME(MARCHEN_ID);
@property (readonly, class) jint MONGOLIAN_SUPPLEMENT_ID NS_SWIFT_NAME(MONGOLIAN_SUPPLEMENT_ID);
@property (readonly, class) jint NEWA_ID NS_SWIFT_NAME(NEWA_ID);
@property (readonly, class) jint OSAGE_ID NS_SWIFT_NAME(OSAGE_ID);
@property (readonly, class) jint TANGUT_ID NS_SWIFT_NAME(TANGUT_ID);
@property (readonly, class) jint TANGUT_COMPONENTS_ID NS_SWIFT_NAME(TANGUT_COMPONENTS_ID);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *NO_BLOCK NS_SWIFT_NAME(NO_BLOCK);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BASIC_LATIN NS_SWIFT_NAME(BASIC_LATIN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LATIN_1_SUPPLEMENT NS_SWIFT_NAME(LATIN_1_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LATIN_EXTENDED_A NS_SWIFT_NAME(LATIN_EXTENDED_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LATIN_EXTENDED_B NS_SWIFT_NAME(LATIN_EXTENDED_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *IPA_EXTENSIONS NS_SWIFT_NAME(IPA_EXTENSIONS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SPACING_MODIFIER_LETTERS NS_SWIFT_NAME(SPACING_MODIFIER_LETTERS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COMBINING_DIACRITICAL_MARKS NS_SWIFT_NAME(COMBINING_DIACRITICAL_MARKS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GREEK NS_SWIFT_NAME(GREEK);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CYRILLIC NS_SWIFT_NAME(CYRILLIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARMENIAN NS_SWIFT_NAME(ARMENIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HEBREW NS_SWIFT_NAME(HEBREW);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARABIC NS_SWIFT_NAME(ARABIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SYRIAC NS_SWIFT_NAME(SYRIAC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *THAANA NS_SWIFT_NAME(THAANA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *DEVANAGARI NS_SWIFT_NAME(DEVANAGARI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BENGALI NS_SWIFT_NAME(BENGALI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GURMUKHI NS_SWIFT_NAME(GURMUKHI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GUJARATI NS_SWIFT_NAME(GUJARATI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ORIYA NS_SWIFT_NAME(ORIYA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAMIL NS_SWIFT_NAME(TAMIL);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TELUGU NS_SWIFT_NAME(TELUGU);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KANNADA NS_SWIFT_NAME(KANNADA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MALAYALAM NS_SWIFT_NAME(MALAYALAM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SINHALA NS_SWIFT_NAME(SINHALA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *THAI NS_SWIFT_NAME(THAI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LAO NS_SWIFT_NAME(LAO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TIBETAN NS_SWIFT_NAME(TIBETAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MYANMAR NS_SWIFT_NAME(MYANMAR);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GEORGIAN NS_SWIFT_NAME(GEORGIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HANGUL_JAMO NS_SWIFT_NAME(HANGUL_JAMO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ETHIOPIC NS_SWIFT_NAME(ETHIOPIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CHEROKEE NS_SWIFT_NAME(CHEROKEE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS NS_SWIFT_NAME(UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OGHAM NS_SWIFT_NAME(OGHAM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *RUNIC NS_SWIFT_NAME(RUNIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KHMER NS_SWIFT_NAME(KHMER);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MONGOLIAN NS_SWIFT_NAME(MONGOLIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LATIN_EXTENDED_ADDITIONAL NS_SWIFT_NAME(LATIN_EXTENDED_ADDITIONAL);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GREEK_EXTENDED NS_SWIFT_NAME(GREEK_EXTENDED);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GENERAL_PUNCTUATION NS_SWIFT_NAME(GENERAL_PUNCTUATION);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPERSCRIPTS_AND_SUBSCRIPTS NS_SWIFT_NAME(SUPERSCRIPTS_AND_SUBSCRIPTS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CURRENCY_SYMBOLS NS_SWIFT_NAME(CURRENCY_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COMBINING_MARKS_FOR_SYMBOLS NS_SWIFT_NAME(COMBINING_MARKS_FOR_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LETTERLIKE_SYMBOLS NS_SWIFT_NAME(LETTERLIKE_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *NUMBER_FORMS NS_SWIFT_NAME(NUMBER_FORMS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARROWS NS_SWIFT_NAME(ARROWS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MATHEMATICAL_OPERATORS NS_SWIFT_NAME(MATHEMATICAL_OPERATORS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MISCELLANEOUS_TECHNICAL NS_SWIFT_NAME(MISCELLANEOUS_TECHNICAL);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CONTROL_PICTURES NS_SWIFT_NAME(CONTROL_PICTURES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OPTICAL_CHARACTER_RECOGNITION NS_SWIFT_NAME(OPTICAL_CHARACTER_RECOGNITION);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ENCLOSED_ALPHANUMERICS NS_SWIFT_NAME(ENCLOSED_ALPHANUMERICS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BOX_DRAWING NS_SWIFT_NAME(BOX_DRAWING);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BLOCK_ELEMENTS NS_SWIFT_NAME(BLOCK_ELEMENTS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GEOMETRIC_SHAPES NS_SWIFT_NAME(GEOMETRIC_SHAPES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MISCELLANEOUS_SYMBOLS NS_SWIFT_NAME(MISCELLANEOUS_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *DINGBATS NS_SWIFT_NAME(DINGBATS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BRAILLE_PATTERNS NS_SWIFT_NAME(BRAILLE_PATTERNS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_RADICALS_SUPPLEMENT NS_SWIFT_NAME(CJK_RADICALS_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KANGXI_RADICALS NS_SWIFT_NAME(KANGXI_RADICALS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *IDEOGRAPHIC_DESCRIPTION_CHARACTERS NS_SWIFT_NAME(IDEOGRAPHIC_DESCRIPTION_CHARACTERS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_SYMBOLS_AND_PUNCTUATION NS_SWIFT_NAME(CJK_SYMBOLS_AND_PUNCTUATION);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HIRAGANA NS_SWIFT_NAME(HIRAGANA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KATAKANA NS_SWIFT_NAME(KATAKANA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BOPOMOFO NS_SWIFT_NAME(BOPOMOFO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HANGUL_COMPATIBILITY_JAMO NS_SWIFT_NAME(HANGUL_COMPATIBILITY_JAMO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KANBUN NS_SWIFT_NAME(KANBUN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BOPOMOFO_EXTENDED NS_SWIFT_NAME(BOPOMOFO_EXTENDED);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ENCLOSED_CJK_LETTERS_AND_MONTHS NS_SWIFT_NAME(ENCLOSED_CJK_LETTERS_AND_MONTHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_COMPATIBILITY NS_SWIFT_NAME(CJK_COMPATIBILITY);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_UNIFIED_IDEOGRAPHS NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *YI_SYLLABLES NS_SWIFT_NAME(YI_SYLLABLES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *YI_RADICALS NS_SWIFT_NAME(YI_RADICALS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HANGUL_SYLLABLES NS_SWIFT_NAME(HANGUL_SYLLABLES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HIGH_SURROGATES NS_SWIFT_NAME(HIGH_SURROGATES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HIGH_PRIVATE_USE_SURROGATES NS_SWIFT_NAME(HIGH_PRIVATE_USE_SURROGATES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LOW_SURROGATES NS_SWIFT_NAME(LOW_SURROGATES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PRIVATE_USE_AREA NS_SWIFT_NAME(PRIVATE_USE_AREA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PRIVATE_USE NS_SWIFT_NAME(PRIVATE_USE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_COMPATIBILITY_IDEOGRAPHS NS_SWIFT_NAME(CJK_COMPATIBILITY_IDEOGRAPHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ALPHABETIC_PRESENTATION_FORMS NS_SWIFT_NAME(ALPHABETIC_PRESENTATION_FORMS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARABIC_PRESENTATION_FORMS_A NS_SWIFT_NAME(ARABIC_PRESENTATION_FORMS_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COMBINING_HALF_MARKS NS_SWIFT_NAME(COMBINING_HALF_MARKS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_COMPATIBILITY_FORMS NS_SWIFT_NAME(CJK_COMPATIBILITY_FORMS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SMALL_FORM_VARIANTS NS_SWIFT_NAME(SMALL_FORM_VARIANTS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARABIC_PRESENTATION_FORMS_B NS_SWIFT_NAME(ARABIC_PRESENTATION_FORMS_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SPECIALS NS_SWIFT_NAME(SPECIALS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HALFWIDTH_AND_FULLWIDTH_FORMS NS_SWIFT_NAME(HALFWIDTH_AND_FULLWIDTH_FORMS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OLD_ITALIC NS_SWIFT_NAME(OLD_ITALIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GOTHIC NS_SWIFT_NAME(GOTHIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *DESERET NS_SWIFT_NAME(DESERET);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BYZANTINE_MUSICAL_SYMBOLS NS_SWIFT_NAME(BYZANTINE_MUSICAL_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MUSICAL_SYMBOLS NS_SWIFT_NAME(MUSICAL_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MATHEMATICAL_ALPHANUMERIC_SYMBOLS NS_SWIFT_NAME(MATHEMATICAL_ALPHANUMERIC_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT NS_SWIFT_NAME(CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAGS NS_SWIFT_NAME(TAGS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CYRILLIC_SUPPLEMENTARY NS_SWIFT_NAME(CYRILLIC_SUPPLEMENTARY);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CYRILLIC_SUPPLEMENT NS_SWIFT_NAME(CYRILLIC_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAGALOG NS_SWIFT_NAME(TAGALOG);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HANUNOO NS_SWIFT_NAME(HANUNOO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BUHID NS_SWIFT_NAME(BUHID);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAGBANWA NS_SWIFT_NAME(TAGBANWA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A NS_SWIFT_NAME(MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTAL_ARROWS_A NS_SWIFT_NAME(SUPPLEMENTAL_ARROWS_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTAL_ARROWS_B NS_SWIFT_NAME(SUPPLEMENTAL_ARROWS_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B NS_SWIFT_NAME(MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTAL_MATHEMATICAL_OPERATORS NS_SWIFT_NAME(SUPPLEMENTAL_MATHEMATICAL_OPERATORS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KATAKANA_PHONETIC_EXTENSIONS NS_SWIFT_NAME(KATAKANA_PHONETIC_EXTENSIONS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *VARIATION_SELECTORS NS_SWIFT_NAME(VARIATION_SELECTORS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTARY_PRIVATE_USE_AREA_A NS_SWIFT_NAME(SUPPLEMENTARY_PRIVATE_USE_AREA_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTARY_PRIVATE_USE_AREA_B NS_SWIFT_NAME(SUPPLEMENTARY_PRIVATE_USE_AREA_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LIMBU NS_SWIFT_NAME(LIMBU);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAI_LE NS_SWIFT_NAME(TAI_LE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KHMER_SYMBOLS NS_SWIFT_NAME(KHMER_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PHONETIC_EXTENSIONS NS_SWIFT_NAME(PHONETIC_EXTENSIONS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MISCELLANEOUS_SYMBOLS_AND_ARROWS NS_SWIFT_NAME(MISCELLANEOUS_SYMBOLS_AND_ARROWS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *YIJING_HEXAGRAM_SYMBOLS NS_SWIFT_NAME(YIJING_HEXAGRAM_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LINEAR_B_SYLLABARY NS_SWIFT_NAME(LINEAR_B_SYLLABARY);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LINEAR_B_IDEOGRAMS NS_SWIFT_NAME(LINEAR_B_IDEOGRAMS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *AEGEAN_NUMBERS NS_SWIFT_NAME(AEGEAN_NUMBERS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *UGARITIC NS_SWIFT_NAME(UGARITIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SHAVIAN NS_SWIFT_NAME(SHAVIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OSMANYA NS_SWIFT_NAME(OSMANYA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CYPRIOT_SYLLABARY NS_SWIFT_NAME(CYPRIOT_SYLLABARY);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAI_XUAN_JING_SYMBOLS NS_SWIFT_NAME(TAI_XUAN_JING_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *VARIATION_SELECTORS_SUPPLEMENT NS_SWIFT_NAME(VARIATION_SELECTORS_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ANCIENT_GREEK_MUSICAL_NOTATION NS_SWIFT_NAME(ANCIENT_GREEK_MUSICAL_NOTATION);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ANCIENT_GREEK_NUMBERS NS_SWIFT_NAME(ANCIENT_GREEK_NUMBERS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARABIC_SUPPLEMENT NS_SWIFT_NAME(ARABIC_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BUGINESE NS_SWIFT_NAME(BUGINESE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_STROKES NS_SWIFT_NAME(CJK_STROKES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COMBINING_DIACRITICAL_MARKS_SUPPLEMENT NS_SWIFT_NAME(COMBINING_DIACRITICAL_MARKS_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COPTIC NS_SWIFT_NAME(COPTIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ETHIOPIC_EXTENDED NS_SWIFT_NAME(ETHIOPIC_EXTENDED);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ETHIOPIC_SUPPLEMENT NS_SWIFT_NAME(ETHIOPIC_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GEORGIAN_SUPPLEMENT NS_SWIFT_NAME(GEORGIAN_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GLAGOLITIC NS_SWIFT_NAME(GLAGOLITIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KHAROSHTHI NS_SWIFT_NAME(KHAROSHTHI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MODIFIER_TONE_LETTERS NS_SWIFT_NAME(MODIFIER_TONE_LETTERS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *NEW_TAI_LUE NS_SWIFT_NAME(NEW_TAI_LUE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OLD_PERSIAN NS_SWIFT_NAME(OLD_PERSIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PHONETIC_EXTENSIONS_SUPPLEMENT NS_SWIFT_NAME(PHONETIC_EXTENSIONS_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTAL_PUNCTUATION NS_SWIFT_NAME(SUPPLEMENTAL_PUNCTUATION);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SYLOTI_NAGRI NS_SWIFT_NAME(SYLOTI_NAGRI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TIFINAGH NS_SWIFT_NAME(TIFINAGH);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *VERTICAL_FORMS NS_SWIFT_NAME(VERTICAL_FORMS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *NKO NS_SWIFT_NAME(NKO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BALINESE NS_SWIFT_NAME(BALINESE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LATIN_EXTENDED_C NS_SWIFT_NAME(LATIN_EXTENDED_C);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LATIN_EXTENDED_D NS_SWIFT_NAME(LATIN_EXTENDED_D);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PHAGS_PA NS_SWIFT_NAME(PHAGS_PA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PHOENICIAN NS_SWIFT_NAME(PHOENICIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CUNEIFORM NS_SWIFT_NAME(CUNEIFORM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CUNEIFORM_NUMBERS_AND_PUNCTUATION NS_SWIFT_NAME(CUNEIFORM_NUMBERS_AND_PUNCTUATION);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COUNTING_ROD_NUMERALS NS_SWIFT_NAME(COUNTING_ROD_NUMERALS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUNDANESE NS_SWIFT_NAME(SUNDANESE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LEPCHA NS_SWIFT_NAME(LEPCHA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OL_CHIKI NS_SWIFT_NAME(OL_CHIKI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CYRILLIC_EXTENDED_A NS_SWIFT_NAME(CYRILLIC_EXTENDED_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *VAI NS_SWIFT_NAME(VAI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CYRILLIC_EXTENDED_B NS_SWIFT_NAME(CYRILLIC_EXTENDED_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SAURASHTRA NS_SWIFT_NAME(SAURASHTRA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KAYAH_LI NS_SWIFT_NAME(KAYAH_LI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *REJANG NS_SWIFT_NAME(REJANG);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CHAM NS_SWIFT_NAME(CHAM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ANCIENT_SYMBOLS NS_SWIFT_NAME(ANCIENT_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PHAISTOS_DISC NS_SWIFT_NAME(PHAISTOS_DISC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LYCIAN NS_SWIFT_NAME(LYCIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CARIAN NS_SWIFT_NAME(CARIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LYDIAN NS_SWIFT_NAME(LYDIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MAHJONG_TILES NS_SWIFT_NAME(MAHJONG_TILES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *DOMINO_TILES NS_SWIFT_NAME(DOMINO_TILES);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SAMARITAN NS_SWIFT_NAME(SAMARITAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED NS_SWIFT_NAME(UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAI_THAM NS_SWIFT_NAME(TAI_THAM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *VEDIC_EXTENSIONS NS_SWIFT_NAME(VEDIC_EXTENSIONS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LISU NS_SWIFT_NAME(LISU);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BAMUM NS_SWIFT_NAME(BAMUM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COMMON_INDIC_NUMBER_FORMS NS_SWIFT_NAME(COMMON_INDIC_NUMBER_FORMS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *DEVANAGARI_EXTENDED NS_SWIFT_NAME(DEVANAGARI_EXTENDED);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HANGUL_JAMO_EXTENDED_A NS_SWIFT_NAME(HANGUL_JAMO_EXTENDED_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *JAVANESE NS_SWIFT_NAME(JAVANESE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MYANMAR_EXTENDED_A NS_SWIFT_NAME(MYANMAR_EXTENDED_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAI_VIET NS_SWIFT_NAME(TAI_VIET);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MEETEI_MAYEK NS_SWIFT_NAME(MEETEI_MAYEK);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HANGUL_JAMO_EXTENDED_B NS_SWIFT_NAME(HANGUL_JAMO_EXTENDED_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *IMPERIAL_ARAMAIC NS_SWIFT_NAME(IMPERIAL_ARAMAIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OLD_SOUTH_ARABIAN NS_SWIFT_NAME(OLD_SOUTH_ARABIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *AVESTAN NS_SWIFT_NAME(AVESTAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *INSCRIPTIONAL_PARTHIAN NS_SWIFT_NAME(INSCRIPTIONAL_PARTHIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *INSCRIPTIONAL_PAHLAVI NS_SWIFT_NAME(INSCRIPTIONAL_PAHLAVI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OLD_TURKIC NS_SWIFT_NAME(OLD_TURKIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *RUMI_NUMERAL_SYMBOLS NS_SWIFT_NAME(RUMI_NUMERAL_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KAITHI NS_SWIFT_NAME(KAITHI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *EGYPTIAN_HIEROGLYPHS NS_SWIFT_NAME(EGYPTIAN_HIEROGLYPHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ENCLOSED_ALPHANUMERIC_SUPPLEMENT NS_SWIFT_NAME(ENCLOSED_ALPHANUMERIC_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ENCLOSED_IDEOGRAPHIC_SUPPLEMENT NS_SWIFT_NAME(ENCLOSED_IDEOGRAPHIC_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MANDAIC NS_SWIFT_NAME(MANDAIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BATAK NS_SWIFT_NAME(BATAK);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ETHIOPIC_EXTENDED_A NS_SWIFT_NAME(ETHIOPIC_EXTENDED_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BRAHMI NS_SWIFT_NAME(BRAHMI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BAMUM_SUPPLEMENT NS_SWIFT_NAME(BAMUM_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KANA_SUPPLEMENT NS_SWIFT_NAME(KANA_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PLAYING_CARDS NS_SWIFT_NAME(PLAYING_CARDS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS NS_SWIFT_NAME(MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *EMOTICONS NS_SWIFT_NAME(EMOTICONS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TRANSPORT_AND_MAP_SYMBOLS NS_SWIFT_NAME(TRANSPORT_AND_MAP_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ALCHEMICAL_SYMBOLS NS_SWIFT_NAME(ALCHEMICAL_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARABIC_EXTENDED_A NS_SWIFT_NAME(ARABIC_EXTENDED_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS NS_SWIFT_NAME(ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CHAKMA NS_SWIFT_NAME(CHAKMA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MEETEI_MAYEK_EXTENSIONS NS_SWIFT_NAME(MEETEI_MAYEK_EXTENSIONS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MEROITIC_CURSIVE NS_SWIFT_NAME(MEROITIC_CURSIVE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MEROITIC_HIEROGLYPHS NS_SWIFT_NAME(MEROITIC_HIEROGLYPHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MIAO NS_SWIFT_NAME(MIAO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SHARADA NS_SWIFT_NAME(SHARADA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SORA_SOMPENG NS_SWIFT_NAME(SORA_SOMPENG);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUNDANESE_SUPPLEMENT NS_SWIFT_NAME(SUNDANESE_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TAKRI NS_SWIFT_NAME(TAKRI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BASSA_VAH NS_SWIFT_NAME(BASSA_VAH);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CAUCASIAN_ALBANIAN NS_SWIFT_NAME(CAUCASIAN_ALBANIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COPTIC_EPACT_NUMBERS NS_SWIFT_NAME(COPTIC_EPACT_NUMBERS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *COMBINING_DIACRITICAL_MARKS_EXTENDED NS_SWIFT_NAME(COMBINING_DIACRITICAL_MARKS_EXTENDED);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *DUPLOYAN NS_SWIFT_NAME(DUPLOYAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ELBASAN NS_SWIFT_NAME(ELBASAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GEOMETRIC_SHAPES_EXTENDED NS_SWIFT_NAME(GEOMETRIC_SHAPES_EXTENDED);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GRANTHA NS_SWIFT_NAME(GRANTHA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KHOJKI NS_SWIFT_NAME(KHOJKI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *KHUDAWADI NS_SWIFT_NAME(KHUDAWADI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LATIN_EXTENDED_E NS_SWIFT_NAME(LATIN_EXTENDED_E);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *LINEAR_A NS_SWIFT_NAME(LINEAR_A);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MAHAJANI NS_SWIFT_NAME(MAHAJANI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MANICHAEAN NS_SWIFT_NAME(MANICHAEAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MENDE_KIKAKUI NS_SWIFT_NAME(MENDE_KIKAKUI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MODI NS_SWIFT_NAME(MODI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MRO NS_SWIFT_NAME(MRO);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MYANMAR_EXTENDED_B NS_SWIFT_NAME(MYANMAR_EXTENDED_B);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *NABATAEAN NS_SWIFT_NAME(NABATAEAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OLD_NORTH_ARABIAN NS_SWIFT_NAME(OLD_NORTH_ARABIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OLD_PERMIC NS_SWIFT_NAME(OLD_PERMIC);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ORNAMENTAL_DINGBATS NS_SWIFT_NAME(ORNAMENTAL_DINGBATS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PAHAWH_HMONG NS_SWIFT_NAME(PAHAWH_HMONG);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PALMYRENE NS_SWIFT_NAME(PALMYRENE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PAU_CIN_HAU NS_SWIFT_NAME(PAU_CIN_HAU);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *PSALTER_PAHLAVI NS_SWIFT_NAME(PSALTER_PAHLAVI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SHORTHAND_FORMAT_CONTROLS NS_SWIFT_NAME(SHORTHAND_FORMAT_CONTROLS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SIDDHAM NS_SWIFT_NAME(SIDDHAM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SINHALA_ARCHAIC_NUMBERS NS_SWIFT_NAME(SINHALA_ARCHAIC_NUMBERS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTAL_ARROWS_C NS_SWIFT_NAME(SUPPLEMENTAL_ARROWS_C);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TIRHUTA NS_SWIFT_NAME(TIRHUTA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *WARANG_CITI NS_SWIFT_NAME(WARANG_CITI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *AHOM NS_SWIFT_NAME(AHOM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ANATOLIAN_HIEROGLYPHS NS_SWIFT_NAME(ANATOLIAN_HIEROGLYPHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CHEROKEE_SUPPLEMENT NS_SWIFT_NAME(CHEROKEE_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E NS_SWIFT_NAME(CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *EARLY_DYNASTIC_CUNEIFORM NS_SWIFT_NAME(EARLY_DYNASTIC_CUNEIFORM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *HATRAN NS_SWIFT_NAME(HATRAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MULTANI NS_SWIFT_NAME(MULTANI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OLD_HUNGARIAN NS_SWIFT_NAME(OLD_HUNGARIAN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS NS_SWIFT_NAME(SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *SUTTON_SIGNWRITING NS_SWIFT_NAME(SUTTON_SIGNWRITING);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *ADLAM NS_SWIFT_NAME(ADLAM);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *BHAIKSUKI NS_SWIFT_NAME(BHAIKSUKI);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *CYRILLIC_EXTENDED_C NS_SWIFT_NAME(CYRILLIC_EXTENDED_C);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *GLAGOLITIC_SUPPLEMENT NS_SWIFT_NAME(GLAGOLITIC_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION NS_SWIFT_NAME(IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MARCHEN NS_SWIFT_NAME(MARCHEN);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *MONGOLIAN_SUPPLEMENT NS_SWIFT_NAME(MONGOLIAN_SUPPLEMENT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *NEWA NS_SWIFT_NAME(NEWA);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *OSAGE NS_SWIFT_NAME(OSAGE);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TANGUT NS_SWIFT_NAME(TANGUT);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *TANGUT_COMPONENTS NS_SWIFT_NAME(TANGUT_COMPONENTS);
@property (readonly, class, strong) AndroidIcuLangUCharacter_UnicodeBlock *INVALID_CODE NS_SWIFT_NAME(INVALID_CODE);

+ (jint)INVALID_CODE_ID;

+ (jint)BASIC_LATIN_ID;

+ (jint)LATIN_1_SUPPLEMENT_ID;

+ (jint)LATIN_EXTENDED_A_ID;

+ (jint)LATIN_EXTENDED_B_ID;

+ (jint)IPA_EXTENSIONS_ID;

+ (jint)SPACING_MODIFIER_LETTERS_ID;

+ (jint)COMBINING_DIACRITICAL_MARKS_ID;

+ (jint)GREEK_ID;

+ (jint)CYRILLIC_ID;

+ (jint)ARMENIAN_ID;

+ (jint)HEBREW_ID;

+ (jint)ARABIC_ID;

+ (jint)SYRIAC_ID;

+ (jint)THAANA_ID;

+ (jint)DEVANAGARI_ID;

+ (jint)BENGALI_ID;

+ (jint)GURMUKHI_ID;

+ (jint)GUJARATI_ID;

+ (jint)ORIYA_ID;

+ (jint)TAMIL_ID;

+ (jint)TELUGU_ID;

+ (jint)KANNADA_ID;

+ (jint)MALAYALAM_ID;

+ (jint)SINHALA_ID;

+ (jint)THAI_ID;

+ (jint)LAO_ID;

+ (jint)TIBETAN_ID;

+ (jint)MYANMAR_ID;

+ (jint)GEORGIAN_ID;

+ (jint)HANGUL_JAMO_ID;

+ (jint)ETHIOPIC_ID;

+ (jint)CHEROKEE_ID;

+ (jint)UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID;

+ (jint)OGHAM_ID;

+ (jint)RUNIC_ID;

+ (jint)KHMER_ID;

+ (jint)MONGOLIAN_ID;

+ (jint)LATIN_EXTENDED_ADDITIONAL_ID;

+ (jint)GREEK_EXTENDED_ID;

+ (jint)GENERAL_PUNCTUATION_ID;

+ (jint)SUPERSCRIPTS_AND_SUBSCRIPTS_ID;

+ (jint)CURRENCY_SYMBOLS_ID;

+ (jint)COMBINING_MARKS_FOR_SYMBOLS_ID;

+ (jint)LETTERLIKE_SYMBOLS_ID;

+ (jint)NUMBER_FORMS_ID;

+ (jint)ARROWS_ID;

+ (jint)MATHEMATICAL_OPERATORS_ID;

+ (jint)MISCELLANEOUS_TECHNICAL_ID;

+ (jint)CONTROL_PICTURES_ID;

+ (jint)OPTICAL_CHARACTER_RECOGNITION_ID;

+ (jint)ENCLOSED_ALPHANUMERICS_ID;

+ (jint)BOX_DRAWING_ID;

+ (jint)BLOCK_ELEMENTS_ID;

+ (jint)GEOMETRIC_SHAPES_ID;

+ (jint)MISCELLANEOUS_SYMBOLS_ID;

+ (jint)DINGBATS_ID;

+ (jint)BRAILLE_PATTERNS_ID;

+ (jint)CJK_RADICALS_SUPPLEMENT_ID;

+ (jint)KANGXI_RADICALS_ID;

+ (jint)IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID;

+ (jint)CJK_SYMBOLS_AND_PUNCTUATION_ID;

+ (jint)HIRAGANA_ID;

+ (jint)KATAKANA_ID;

+ (jint)BOPOMOFO_ID;

+ (jint)HANGUL_COMPATIBILITY_JAMO_ID;

+ (jint)KANBUN_ID;

+ (jint)BOPOMOFO_EXTENDED_ID;

+ (jint)ENCLOSED_CJK_LETTERS_AND_MONTHS_ID;

+ (jint)CJK_COMPATIBILITY_ID;

+ (jint)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID;

+ (jint)CJK_UNIFIED_IDEOGRAPHS_ID;

+ (jint)YI_SYLLABLES_ID;

+ (jint)YI_RADICALS_ID;

+ (jint)HANGUL_SYLLABLES_ID;

+ (jint)HIGH_SURROGATES_ID;

+ (jint)HIGH_PRIVATE_USE_SURROGATES_ID;

+ (jint)LOW_SURROGATES_ID;

+ (jint)PRIVATE_USE_AREA_ID;

+ (jint)PRIVATE_USE_ID;

+ (jint)CJK_COMPATIBILITY_IDEOGRAPHS_ID;

+ (jint)ALPHABETIC_PRESENTATION_FORMS_ID;

+ (jint)ARABIC_PRESENTATION_FORMS_A_ID;

+ (jint)COMBINING_HALF_MARKS_ID;

+ (jint)CJK_COMPATIBILITY_FORMS_ID;

+ (jint)SMALL_FORM_VARIANTS_ID;

+ (jint)ARABIC_PRESENTATION_FORMS_B_ID;

+ (jint)SPECIALS_ID;

+ (jint)HALFWIDTH_AND_FULLWIDTH_FORMS_ID;

+ (jint)OLD_ITALIC_ID;

+ (jint)GOTHIC_ID;

+ (jint)DESERET_ID;

+ (jint)BYZANTINE_MUSICAL_SYMBOLS_ID;

+ (jint)MUSICAL_SYMBOLS_ID;

+ (jint)MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID;

+ (jint)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID;

+ (jint)CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID;

+ (jint)TAGS_ID;

+ (jint)CYRILLIC_SUPPLEMENTARY_ID;

+ (jint)CYRILLIC_SUPPLEMENT_ID;

+ (jint)TAGALOG_ID;

+ (jint)HANUNOO_ID;

+ (jint)BUHID_ID;

+ (jint)TAGBANWA_ID;

+ (jint)MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID;

+ (jint)SUPPLEMENTAL_ARROWS_A_ID;

+ (jint)SUPPLEMENTAL_ARROWS_B_ID;

+ (jint)MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID;

+ (jint)SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID;

+ (jint)KATAKANA_PHONETIC_EXTENSIONS_ID;

+ (jint)VARIATION_SELECTORS_ID;

+ (jint)SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID;

+ (jint)SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID;

+ (jint)LIMBU_ID;

+ (jint)TAI_LE_ID;

+ (jint)KHMER_SYMBOLS_ID;

+ (jint)PHONETIC_EXTENSIONS_ID;

+ (jint)MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID;

+ (jint)YIJING_HEXAGRAM_SYMBOLS_ID;

+ (jint)LINEAR_B_SYLLABARY_ID;

+ (jint)LINEAR_B_IDEOGRAMS_ID;

+ (jint)AEGEAN_NUMBERS_ID;

+ (jint)UGARITIC_ID;

+ (jint)SHAVIAN_ID;

+ (jint)OSMANYA_ID;

+ (jint)CYPRIOT_SYLLABARY_ID;

+ (jint)TAI_XUAN_JING_SYMBOLS_ID;

+ (jint)VARIATION_SELECTORS_SUPPLEMENT_ID;

+ (jint)ANCIENT_GREEK_MUSICAL_NOTATION_ID;

+ (jint)ANCIENT_GREEK_NUMBERS_ID;

+ (jint)ARABIC_SUPPLEMENT_ID;

+ (jint)BUGINESE_ID;

+ (jint)CJK_STROKES_ID;

+ (jint)COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID;

+ (jint)COPTIC_ID;

+ (jint)ETHIOPIC_EXTENDED_ID;

+ (jint)ETHIOPIC_SUPPLEMENT_ID;

+ (jint)GEORGIAN_SUPPLEMENT_ID;

+ (jint)GLAGOLITIC_ID;

+ (jint)KHAROSHTHI_ID;

+ (jint)MODIFIER_TONE_LETTERS_ID;

+ (jint)NEW_TAI_LUE_ID;

+ (jint)OLD_PERSIAN_ID;

+ (jint)PHONETIC_EXTENSIONS_SUPPLEMENT_ID;

+ (jint)SUPPLEMENTAL_PUNCTUATION_ID;

+ (jint)SYLOTI_NAGRI_ID;

+ (jint)TIFINAGH_ID;

+ (jint)VERTICAL_FORMS_ID;

+ (jint)NKO_ID;

+ (jint)BALINESE_ID;

+ (jint)LATIN_EXTENDED_C_ID;

+ (jint)LATIN_EXTENDED_D_ID;

+ (jint)PHAGS_PA_ID;

+ (jint)PHOENICIAN_ID;

+ (jint)CUNEIFORM_ID;

+ (jint)CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID;

+ (jint)COUNTING_ROD_NUMERALS_ID;

+ (jint)SUNDANESE_ID;

+ (jint)LEPCHA_ID;

+ (jint)OL_CHIKI_ID;

+ (jint)CYRILLIC_EXTENDED_A_ID;

+ (jint)VAI_ID;

+ (jint)CYRILLIC_EXTENDED_B_ID;

+ (jint)SAURASHTRA_ID;

+ (jint)KAYAH_LI_ID;

+ (jint)REJANG_ID;

+ (jint)CHAM_ID;

+ (jint)ANCIENT_SYMBOLS_ID;

+ (jint)PHAISTOS_DISC_ID;

+ (jint)LYCIAN_ID;

+ (jint)CARIAN_ID;

+ (jint)LYDIAN_ID;

+ (jint)MAHJONG_TILES_ID;

+ (jint)DOMINO_TILES_ID;

+ (jint)SAMARITAN_ID;

+ (jint)UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID;

+ (jint)TAI_THAM_ID;

+ (jint)VEDIC_EXTENSIONS_ID;

+ (jint)LISU_ID;

+ (jint)BAMUM_ID;

+ (jint)COMMON_INDIC_NUMBER_FORMS_ID;

+ (jint)DEVANAGARI_EXTENDED_ID;

+ (jint)HANGUL_JAMO_EXTENDED_A_ID;

+ (jint)JAVANESE_ID;

+ (jint)MYANMAR_EXTENDED_A_ID;

+ (jint)TAI_VIET_ID;

+ (jint)MEETEI_MAYEK_ID;

+ (jint)HANGUL_JAMO_EXTENDED_B_ID;

+ (jint)IMPERIAL_ARAMAIC_ID;

+ (jint)OLD_SOUTH_ARABIAN_ID;

+ (jint)AVESTAN_ID;

+ (jint)INSCRIPTIONAL_PARTHIAN_ID;

+ (jint)INSCRIPTIONAL_PAHLAVI_ID;

+ (jint)OLD_TURKIC_ID;

+ (jint)RUMI_NUMERAL_SYMBOLS_ID;

+ (jint)KAITHI_ID;

+ (jint)EGYPTIAN_HIEROGLYPHS_ID;

+ (jint)ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID;

+ (jint)ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID;

+ (jint)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID;

+ (jint)MANDAIC_ID;

+ (jint)BATAK_ID;

+ (jint)ETHIOPIC_EXTENDED_A_ID;

+ (jint)BRAHMI_ID;

+ (jint)BAMUM_SUPPLEMENT_ID;

+ (jint)KANA_SUPPLEMENT_ID;

+ (jint)PLAYING_CARDS_ID;

+ (jint)MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID;

+ (jint)EMOTICONS_ID;

+ (jint)TRANSPORT_AND_MAP_SYMBOLS_ID;

+ (jint)ALCHEMICAL_SYMBOLS_ID;

+ (jint)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID;

+ (jint)ARABIC_EXTENDED_A_ID;

+ (jint)ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID;

+ (jint)CHAKMA_ID;

+ (jint)MEETEI_MAYEK_EXTENSIONS_ID;

+ (jint)MEROITIC_CURSIVE_ID;

+ (jint)MEROITIC_HIEROGLYPHS_ID;

+ (jint)MIAO_ID;

+ (jint)SHARADA_ID;

+ (jint)SORA_SOMPENG_ID;

+ (jint)SUNDANESE_SUPPLEMENT_ID;

+ (jint)TAKRI_ID;

+ (jint)BASSA_VAH_ID;

+ (jint)CAUCASIAN_ALBANIAN_ID;

+ (jint)COPTIC_EPACT_NUMBERS_ID;

+ (jint)COMBINING_DIACRITICAL_MARKS_EXTENDED_ID;

+ (jint)DUPLOYAN_ID;

+ (jint)ELBASAN_ID;

+ (jint)GEOMETRIC_SHAPES_EXTENDED_ID;

+ (jint)GRANTHA_ID;

+ (jint)KHOJKI_ID;

+ (jint)KHUDAWADI_ID;

+ (jint)LATIN_EXTENDED_E_ID;

+ (jint)LINEAR_A_ID;

+ (jint)MAHAJANI_ID;

+ (jint)MANICHAEAN_ID;

+ (jint)MENDE_KIKAKUI_ID;

+ (jint)MODI_ID;

+ (jint)MRO_ID;

+ (jint)MYANMAR_EXTENDED_B_ID;

+ (jint)NABATAEAN_ID;

+ (jint)OLD_NORTH_ARABIAN_ID;

+ (jint)OLD_PERMIC_ID;

+ (jint)ORNAMENTAL_DINGBATS_ID;

+ (jint)PAHAWH_HMONG_ID;

+ (jint)PALMYRENE_ID;

+ (jint)PAU_CIN_HAU_ID;

+ (jint)PSALTER_PAHLAVI_ID;

+ (jint)SHORTHAND_FORMAT_CONTROLS_ID;

+ (jint)SIDDHAM_ID;

+ (jint)SINHALA_ARCHAIC_NUMBERS_ID;

+ (jint)SUPPLEMENTAL_ARROWS_C_ID;

+ (jint)TIRHUTA_ID;

+ (jint)WARANG_CITI_ID;

+ (jint)AHOM_ID;

+ (jint)ANATOLIAN_HIEROGLYPHS_ID;

+ (jint)CHEROKEE_SUPPLEMENT_ID;

+ (jint)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID;

+ (jint)EARLY_DYNASTIC_CUNEIFORM_ID;

+ (jint)HATRAN_ID;

+ (jint)MULTANI_ID;

+ (jint)OLD_HUNGARIAN_ID;

+ (jint)SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID;

+ (jint)SUTTON_SIGNWRITING_ID;

+ (jint)ADLAM_ID;

+ (jint)BHAIKSUKI_ID;

+ (jint)CYRILLIC_EXTENDED_C_ID;

+ (jint)GLAGOLITIC_SUPPLEMENT_ID;

+ (jint)IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID;

+ (jint)MARCHEN_ID;

+ (jint)MONGOLIAN_SUPPLEMENT_ID;

+ (jint)NEWA_ID;

+ (jint)OSAGE_ID;

+ (jint)TANGUT_ID;

+ (jint)TANGUT_COMPONENTS_ID;

+ (jint)COUNT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)NO_BLOCK;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BASIC_LATIN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LATIN_1_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LATIN_EXTENDED_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LATIN_EXTENDED_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)IPA_EXTENSIONS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SPACING_MODIFIER_LETTERS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COMBINING_DIACRITICAL_MARKS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GREEK;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CYRILLIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARMENIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HEBREW;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARABIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SYRIAC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)THAANA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)DEVANAGARI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BENGALI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GURMUKHI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GUJARATI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ORIYA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAMIL;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TELUGU;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KANNADA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MALAYALAM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SINHALA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)THAI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LAO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TIBETAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MYANMAR;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GEORGIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HANGUL_JAMO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ETHIOPIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CHEROKEE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OGHAM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)RUNIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KHMER;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MONGOLIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LATIN_EXTENDED_ADDITIONAL;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GREEK_EXTENDED;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GENERAL_PUNCTUATION;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPERSCRIPTS_AND_SUBSCRIPTS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CURRENCY_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COMBINING_MARKS_FOR_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LETTERLIKE_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)NUMBER_FORMS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARROWS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MATHEMATICAL_OPERATORS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MISCELLANEOUS_TECHNICAL;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CONTROL_PICTURES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OPTICAL_CHARACTER_RECOGNITION;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ENCLOSED_ALPHANUMERICS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BOX_DRAWING;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BLOCK_ELEMENTS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GEOMETRIC_SHAPES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MISCELLANEOUS_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)DINGBATS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BRAILLE_PATTERNS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_RADICALS_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KANGXI_RADICALS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)IDEOGRAPHIC_DESCRIPTION_CHARACTERS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_SYMBOLS_AND_PUNCTUATION;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HIRAGANA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KATAKANA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BOPOMOFO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HANGUL_COMPATIBILITY_JAMO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KANBUN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BOPOMOFO_EXTENDED;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ENCLOSED_CJK_LETTERS_AND_MONTHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_COMPATIBILITY;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_UNIFIED_IDEOGRAPHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)YI_SYLLABLES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)YI_RADICALS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HANGUL_SYLLABLES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HIGH_SURROGATES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HIGH_PRIVATE_USE_SURROGATES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LOW_SURROGATES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PRIVATE_USE_AREA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PRIVATE_USE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_COMPATIBILITY_IDEOGRAPHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ALPHABETIC_PRESENTATION_FORMS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARABIC_PRESENTATION_FORMS_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COMBINING_HALF_MARKS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_COMPATIBILITY_FORMS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SMALL_FORM_VARIANTS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARABIC_PRESENTATION_FORMS_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SPECIALS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HALFWIDTH_AND_FULLWIDTH_FORMS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OLD_ITALIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GOTHIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)DESERET;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BYZANTINE_MUSICAL_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MUSICAL_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MATHEMATICAL_ALPHANUMERIC_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAGS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CYRILLIC_SUPPLEMENTARY;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CYRILLIC_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAGALOG;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HANUNOO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BUHID;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAGBANWA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTAL_ARROWS_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTAL_ARROWS_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTAL_MATHEMATICAL_OPERATORS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KATAKANA_PHONETIC_EXTENSIONS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)VARIATION_SELECTORS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTARY_PRIVATE_USE_AREA_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTARY_PRIVATE_USE_AREA_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LIMBU;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAI_LE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KHMER_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PHONETIC_EXTENSIONS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MISCELLANEOUS_SYMBOLS_AND_ARROWS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)YIJING_HEXAGRAM_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LINEAR_B_SYLLABARY;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LINEAR_B_IDEOGRAMS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)AEGEAN_NUMBERS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)UGARITIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SHAVIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OSMANYA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CYPRIOT_SYLLABARY;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAI_XUAN_JING_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)VARIATION_SELECTORS_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ANCIENT_GREEK_MUSICAL_NOTATION;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ANCIENT_GREEK_NUMBERS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARABIC_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BUGINESE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_STROKES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COMBINING_DIACRITICAL_MARKS_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COPTIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ETHIOPIC_EXTENDED;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ETHIOPIC_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GEORGIAN_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GLAGOLITIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KHAROSHTHI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MODIFIER_TONE_LETTERS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)NEW_TAI_LUE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OLD_PERSIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PHONETIC_EXTENSIONS_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTAL_PUNCTUATION;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SYLOTI_NAGRI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TIFINAGH;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)VERTICAL_FORMS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)NKO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BALINESE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LATIN_EXTENDED_C;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LATIN_EXTENDED_D;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PHAGS_PA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PHOENICIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CUNEIFORM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CUNEIFORM_NUMBERS_AND_PUNCTUATION;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COUNTING_ROD_NUMERALS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUNDANESE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LEPCHA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OL_CHIKI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CYRILLIC_EXTENDED_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)VAI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CYRILLIC_EXTENDED_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SAURASHTRA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KAYAH_LI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)REJANG;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CHAM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ANCIENT_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PHAISTOS_DISC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LYCIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CARIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LYDIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MAHJONG_TILES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)DOMINO_TILES;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SAMARITAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAI_THAM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)VEDIC_EXTENSIONS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LISU;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BAMUM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COMMON_INDIC_NUMBER_FORMS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)DEVANAGARI_EXTENDED;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HANGUL_JAMO_EXTENDED_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)JAVANESE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MYANMAR_EXTENDED_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAI_VIET;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MEETEI_MAYEK;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HANGUL_JAMO_EXTENDED_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)IMPERIAL_ARAMAIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OLD_SOUTH_ARABIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)AVESTAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)INSCRIPTIONAL_PARTHIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)INSCRIPTIONAL_PAHLAVI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OLD_TURKIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)RUMI_NUMERAL_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KAITHI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)EGYPTIAN_HIEROGLYPHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ENCLOSED_ALPHANUMERIC_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ENCLOSED_IDEOGRAPHIC_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MANDAIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BATAK;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ETHIOPIC_EXTENDED_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BRAHMI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BAMUM_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KANA_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PLAYING_CARDS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)EMOTICONS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TRANSPORT_AND_MAP_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ALCHEMICAL_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARABIC_EXTENDED_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CHAKMA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MEETEI_MAYEK_EXTENSIONS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MEROITIC_CURSIVE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MEROITIC_HIEROGLYPHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MIAO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SHARADA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SORA_SOMPENG;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUNDANESE_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TAKRI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BASSA_VAH;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CAUCASIAN_ALBANIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COPTIC_EPACT_NUMBERS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)COMBINING_DIACRITICAL_MARKS_EXTENDED;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)DUPLOYAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ELBASAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GEOMETRIC_SHAPES_EXTENDED;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GRANTHA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KHOJKI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)KHUDAWADI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LATIN_EXTENDED_E;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)LINEAR_A;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MAHAJANI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MANICHAEAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MENDE_KIKAKUI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MODI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MRO;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MYANMAR_EXTENDED_B;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)NABATAEAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OLD_NORTH_ARABIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OLD_PERMIC;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ORNAMENTAL_DINGBATS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PAHAWH_HMONG;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PALMYRENE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PAU_CIN_HAU;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)PSALTER_PAHLAVI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SHORTHAND_FORMAT_CONTROLS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SIDDHAM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SINHALA_ARCHAIC_NUMBERS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTAL_ARROWS_C;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TIRHUTA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)WARANG_CITI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)AHOM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ANATOLIAN_HIEROGLYPHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CHEROKEE_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)EARLY_DYNASTIC_CUNEIFORM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)HATRAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MULTANI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OLD_HUNGARIAN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)SUTTON_SIGNWRITING;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)ADLAM;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)BHAIKSUKI;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)CYRILLIC_EXTENDED_C;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)GLAGOLITIC_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MARCHEN;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)MONGOLIAN_SUPPLEMENT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)NEWA;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)OSAGE;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TANGUT;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)TANGUT_COMPONENTS;

+ (AndroidIcuLangUCharacter_UnicodeBlock *)INVALID_CODE;

#pragma mark Public

/*!
 @brief Alternative to the <code>java.lang.Character.UnicodeBlock.forName(String)</code> method.
 Returns the Unicode block with the given name. <strong>[icu] Note:</strong> Unlike 
 <code>java.lang.Character.UnicodeBlock.forName(String)</code>, this only matches
  against the official UCD name and the Java block name
  (ignoring case).
 @param blockName the name of the block to match
 @return the UnicodeBlock with that name
 @throw IllegalArgumentExceptionif the blockName could not be matched
 */
+ (AndroidIcuLangUCharacter_UnicodeBlock *)forNameWithNSString:(NSString *)blockName;

/*!
 @brief {icu} Returns the type ID of this Unicode block
 @return integer type ID of this Unicode block
 */
- (jint)getID;

/*!
 @brief <strong>[icu]</strong> Returns the only instance of the UnicodeBlock with the argument ID.
 If no such ID exists, a INVALID_CODE UnicodeBlock will be returned.
 @param id_ UnicodeBlock ID
 @return the only instance of the UnicodeBlock with the argument ID
          if it exists, otherwise a INVALID_CODE UnicodeBlock will be
          returned.
 */
+ (AndroidIcuLangUCharacter_UnicodeBlock *)getInstanceWithInt:(jint)id_;

/*!
 @brief Returns the Unicode allocation block that contains the code point,
  or null if the code point is not a member of a defined block.
 @param ch code point to be tested
 @return the Unicode allocation block that contains the code point
 */
+ (AndroidIcuLangUCharacter_UnicodeBlock *)ofWithInt:(jint)ch;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(AndroidIcuLangUCharacter_UnicodeBlock)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_INVALID_CODE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_INVALID_CODE_ID -1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, INVALID_CODE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BASIC_LATIN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BASIC_LATIN_ID 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BASIC_LATIN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_1_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LATIN_1_SUPPLEMENT_ID 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_1_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_A_ID 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_B_ID 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_IPA_EXTENSIONS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_IPA_EXTENSIONS_ID 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, IPA_EXTENSIONS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SPACING_MODIFIER_LETTERS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SPACING_MODIFIER_LETTERS_ID 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SPACING_MODIFIER_LETTERS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_DIACRITICAL_MARKS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_DIACRITICAL_MARKS_ID 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_DIACRITICAL_MARKS_ID, jint)

/*!
 @brief Unicode 3.2 renames this block to "Greek and Coptic".
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GREEK_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GREEK_ID 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GREEK_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_ID 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARMENIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARMENIAN_ID 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARMENIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HEBREW_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HEBREW_ID 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HEBREW_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_ID 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SYRIAC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SYRIAC_ID 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SYRIAC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_THAANA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_THAANA_ID 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, THAANA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_DEVANAGARI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_DEVANAGARI_ID 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, DEVANAGARI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BENGALI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BENGALI_ID 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BENGALI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GURMUKHI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GURMUKHI_ID 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GURMUKHI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GUJARATI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GUJARATI_ID 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GUJARATI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ORIYA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ORIYA_ID 19
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ORIYA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAMIL_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAMIL_ID 20
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAMIL_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TELUGU_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TELUGU_ID 21
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TELUGU_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KANNADA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KANNADA_ID 22
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KANNADA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MALAYALAM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MALAYALAM_ID 23
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MALAYALAM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SINHALA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SINHALA_ID 24
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SINHALA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_THAI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_THAI_ID 25
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, THAI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LAO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LAO_ID 26
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LAO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TIBETAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TIBETAN_ID 27
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TIBETAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MYANMAR_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MYANMAR_ID 28
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MYANMAR_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GEORGIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GEORGIAN_ID 29
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GEORGIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_JAMO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_JAMO_ID 30
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_JAMO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC_ID 31
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CHEROKEE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CHEROKEE_ID 32
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CHEROKEE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID 33
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OGHAM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OGHAM_ID 34
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OGHAM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_RUNIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_RUNIC_ID 35
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, RUNIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KHMER_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KHMER_ID 36
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KHMER_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MONGOLIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MONGOLIAN_ID 37
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MONGOLIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_ADDITIONAL_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_ADDITIONAL_ID 38
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_ADDITIONAL_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GREEK_EXTENDED_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GREEK_EXTENDED_ID 39
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GREEK_EXTENDED_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GENERAL_PUNCTUATION_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GENERAL_PUNCTUATION_ID 40
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GENERAL_PUNCTUATION_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPERSCRIPTS_AND_SUBSCRIPTS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPERSCRIPTS_AND_SUBSCRIPTS_ID 41
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPERSCRIPTS_AND_SUBSCRIPTS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CURRENCY_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CURRENCY_SYMBOLS_ID 42
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CURRENCY_SYMBOLS_ID, jint)

/*!
 @brief Unicode 3.2 renames this block to "Combining Diacritical Marks for
  Symbols".
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_MARKS_FOR_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_MARKS_FOR_SYMBOLS_ID 43
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_MARKS_FOR_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LETTERLIKE_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LETTERLIKE_SYMBOLS_ID 44
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LETTERLIKE_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_NUMBER_FORMS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_NUMBER_FORMS_ID 45
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, NUMBER_FORMS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARROWS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARROWS_ID 46
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARROWS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MATHEMATICAL_OPERATORS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MATHEMATICAL_OPERATORS_ID 47
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MATHEMATICAL_OPERATORS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_TECHNICAL_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_TECHNICAL_ID 48
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_TECHNICAL_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CONTROL_PICTURES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CONTROL_PICTURES_ID 49
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CONTROL_PICTURES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OPTICAL_CHARACTER_RECOGNITION_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OPTICAL_CHARACTER_RECOGNITION_ID 50
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OPTICAL_CHARACTER_RECOGNITION_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_ALPHANUMERICS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_ALPHANUMERICS_ID 51
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_ALPHANUMERICS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BOX_DRAWING_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BOX_DRAWING_ID 52
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BOX_DRAWING_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BLOCK_ELEMENTS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BLOCK_ELEMENTS_ID 53
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BLOCK_ELEMENTS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GEOMETRIC_SHAPES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GEOMETRIC_SHAPES_ID 54
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GEOMETRIC_SHAPES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_SYMBOLS_ID 55
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_DINGBATS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_DINGBATS_ID 56
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, DINGBATS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BRAILLE_PATTERNS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BRAILLE_PATTERNS_ID 57
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BRAILLE_PATTERNS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_RADICALS_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_RADICALS_SUPPLEMENT_ID 58
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_RADICALS_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KANGXI_RADICALS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KANGXI_RADICALS_ID 59
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KANGXI_RADICALS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID 60
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_SYMBOLS_AND_PUNCTUATION_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_SYMBOLS_AND_PUNCTUATION_ID 61
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_SYMBOLS_AND_PUNCTUATION_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HIRAGANA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HIRAGANA_ID 62
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HIRAGANA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KATAKANA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KATAKANA_ID 63
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KATAKANA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BOPOMOFO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BOPOMOFO_ID 64
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BOPOMOFO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_COMPATIBILITY_JAMO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_COMPATIBILITY_JAMO_ID 65
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_COMPATIBILITY_JAMO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KANBUN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KANBUN_ID 66
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KANBUN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BOPOMOFO_EXTENDED_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BOPOMOFO_EXTENDED_ID 67
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BOPOMOFO_EXTENDED_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_CJK_LETTERS_AND_MONTHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_CJK_LETTERS_AND_MONTHS_ID 68
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_CJK_LETTERS_AND_MONTHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY_ID 69
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID 70
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_ID 71
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_YI_SYLLABLES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_YI_SYLLABLES_ID 72
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, YI_SYLLABLES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_YI_RADICALS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_YI_RADICALS_ID 73
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, YI_RADICALS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_SYLLABLES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_SYLLABLES_ID 74
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_SYLLABLES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HIGH_SURROGATES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HIGH_SURROGATES_ID 75
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HIGH_SURROGATES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HIGH_PRIVATE_USE_SURROGATES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HIGH_PRIVATE_USE_SURROGATES_ID 76
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HIGH_PRIVATE_USE_SURROGATES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LOW_SURROGATES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LOW_SURROGATES_ID 77
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LOW_SURROGATES_ID, jint)

/*!
 @brief Same as public static final int PRIVATE_USE.
 Until Unicode 3.1.1; the corresponding block name was "Private Use";
  and multiple code point ranges had this block.
  Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  and adds separate blocks for the supplementary PUAs.
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PRIVATE_USE_AREA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PRIVATE_USE_AREA_ID 78
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PRIVATE_USE_AREA_ID, jint)

/*!
 @brief Same as public static final int PRIVATE_USE_AREA.
 Until Unicode 3.1.1; the corresponding block name was "Private Use";
  and multiple code point ranges had this block.
  Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  and adds separate blocks for the supplementary PUAs.
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PRIVATE_USE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PRIVATE_USE_ID 78
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PRIVATE_USE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY_IDEOGRAPHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY_IDEOGRAPHS_ID 79
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY_IDEOGRAPHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ALPHABETIC_PRESENTATION_FORMS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ALPHABETIC_PRESENTATION_FORMS_ID 80
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ALPHABETIC_PRESENTATION_FORMS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_PRESENTATION_FORMS_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_PRESENTATION_FORMS_A_ID 81
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_PRESENTATION_FORMS_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_HALF_MARKS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_HALF_MARKS_ID 82
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_HALF_MARKS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY_FORMS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY_FORMS_ID 83
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY_FORMS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SMALL_FORM_VARIANTS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SMALL_FORM_VARIANTS_ID 84
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SMALL_FORM_VARIANTS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_PRESENTATION_FORMS_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_PRESENTATION_FORMS_B_ID 85
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_PRESENTATION_FORMS_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SPECIALS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SPECIALS_ID 86
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SPECIALS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HALFWIDTH_AND_FULLWIDTH_FORMS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HALFWIDTH_AND_FULLWIDTH_FORMS_ID 87
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HALFWIDTH_AND_FULLWIDTH_FORMS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_ITALIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OLD_ITALIC_ID 88
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OLD_ITALIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GOTHIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GOTHIC_ID 89
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GOTHIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_DESERET_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_DESERET_ID 90
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, DESERET_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BYZANTINE_MUSICAL_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BYZANTINE_MUSICAL_SYMBOLS_ID 91
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BYZANTINE_MUSICAL_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MUSICAL_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MUSICAL_SYMBOLS_ID 92
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MUSICAL_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID 93
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID 94
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID 95
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAGS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAGS_ID 96
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAGS_ID, jint)

/*!
 @brief Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_SUPPLEMENTARY_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_SUPPLEMENTARY_ID 97
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_SUPPLEMENTARY_ID, jint)

/*!
 @brief Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_SUPPLEMENT_ID 97
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAGALOG_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAGALOG_ID 98
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAGALOG_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HANUNOO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HANUNOO_ID 99
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HANUNOO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BUHID_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BUHID_ID 100
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BUHID_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAGBANWA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAGBANWA_ID 101
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAGBANWA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID 102
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_ARROWS_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_ARROWS_A_ID 103
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_ARROWS_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_ARROWS_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_ARROWS_B_ID 104
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_ARROWS_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID 105
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID 106
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KATAKANA_PHONETIC_EXTENSIONS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KATAKANA_PHONETIC_EXTENSIONS_ID 107
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KATAKANA_PHONETIC_EXTENSIONS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_VARIATION_SELECTORS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_VARIATION_SELECTORS_ID 108
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, VARIATION_SELECTORS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID 109
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID 110
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LIMBU_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LIMBU_ID 111
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LIMBU_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_LE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAI_LE_ID 112
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAI_LE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KHMER_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KHMER_SYMBOLS_ID 113
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KHMER_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PHONETIC_EXTENSIONS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PHONETIC_EXTENSIONS_ID 114
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PHONETIC_EXTENSIONS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID 115
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_YIJING_HEXAGRAM_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_YIJING_HEXAGRAM_SYMBOLS_ID 116
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, YIJING_HEXAGRAM_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LINEAR_B_SYLLABARY_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LINEAR_B_SYLLABARY_ID 117
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LINEAR_B_SYLLABARY_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LINEAR_B_IDEOGRAMS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LINEAR_B_IDEOGRAMS_ID 118
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LINEAR_B_IDEOGRAMS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_AEGEAN_NUMBERS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_AEGEAN_NUMBERS_ID 119
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, AEGEAN_NUMBERS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_UGARITIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_UGARITIC_ID 120
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, UGARITIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SHAVIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SHAVIAN_ID 121
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SHAVIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OSMANYA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OSMANYA_ID 122
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OSMANYA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CYPRIOT_SYLLABARY_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CYPRIOT_SYLLABARY_ID 123
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CYPRIOT_SYLLABARY_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_XUAN_JING_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAI_XUAN_JING_SYMBOLS_ID 124
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAI_XUAN_JING_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_VARIATION_SELECTORS_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_VARIATION_SELECTORS_SUPPLEMENT_ID 125
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, VARIATION_SELECTORS_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ANCIENT_GREEK_MUSICAL_NOTATION_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ANCIENT_GREEK_MUSICAL_NOTATION_ID 126
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ANCIENT_GREEK_MUSICAL_NOTATION_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ANCIENT_GREEK_NUMBERS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ANCIENT_GREEK_NUMBERS_ID 127
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ANCIENT_GREEK_NUMBERS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_SUPPLEMENT_ID 128
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BUGINESE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BUGINESE_ID 129
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BUGINESE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_STROKES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_STROKES_ID 130
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_STROKES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID 131
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COPTIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COPTIC_ID 132
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COPTIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC_EXTENDED_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC_EXTENDED_ID 133
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC_EXTENDED_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC_SUPPLEMENT_ID 134
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GEORGIAN_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GEORGIAN_SUPPLEMENT_ID 135
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GEORGIAN_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GLAGOLITIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GLAGOLITIC_ID 136
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GLAGOLITIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KHAROSHTHI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KHAROSHTHI_ID 137
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KHAROSHTHI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MODIFIER_TONE_LETTERS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MODIFIER_TONE_LETTERS_ID 138
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MODIFIER_TONE_LETTERS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_NEW_TAI_LUE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_NEW_TAI_LUE_ID 139
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, NEW_TAI_LUE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_PERSIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OLD_PERSIAN_ID 140
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OLD_PERSIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PHONETIC_EXTENSIONS_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PHONETIC_EXTENSIONS_SUPPLEMENT_ID 141
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PHONETIC_EXTENSIONS_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_PUNCTUATION_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_PUNCTUATION_ID 142
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_PUNCTUATION_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SYLOTI_NAGRI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SYLOTI_NAGRI_ID 143
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SYLOTI_NAGRI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TIFINAGH_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TIFINAGH_ID 144
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TIFINAGH_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_VERTICAL_FORMS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_VERTICAL_FORMS_ID 145
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, VERTICAL_FORMS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_NKO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_NKO_ID 146
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, NKO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BALINESE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BALINESE_ID 147
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BALINESE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_C_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_C_ID 148
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_C_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_D_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_D_ID 149
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_D_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PHAGS_PA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PHAGS_PA_ID 150
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PHAGS_PA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PHOENICIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PHOENICIAN_ID 151
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PHOENICIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CUNEIFORM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CUNEIFORM_ID 152
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CUNEIFORM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID 153
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COUNTING_ROD_NUMERALS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COUNTING_ROD_NUMERALS_ID 154
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COUNTING_ROD_NUMERALS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUNDANESE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUNDANESE_ID 155
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUNDANESE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LEPCHA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LEPCHA_ID 156
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LEPCHA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OL_CHIKI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OL_CHIKI_ID 157
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OL_CHIKI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_EXTENDED_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_EXTENDED_A_ID 158
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_EXTENDED_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_VAI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_VAI_ID 159
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, VAI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_EXTENDED_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_EXTENDED_B_ID 160
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_EXTENDED_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SAURASHTRA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SAURASHTRA_ID 161
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SAURASHTRA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KAYAH_LI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KAYAH_LI_ID 162
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KAYAH_LI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_REJANG_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_REJANG_ID 163
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, REJANG_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CHAM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CHAM_ID 164
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CHAM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ANCIENT_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ANCIENT_SYMBOLS_ID 165
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ANCIENT_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PHAISTOS_DISC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PHAISTOS_DISC_ID 166
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PHAISTOS_DISC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LYCIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LYCIAN_ID 167
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LYCIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CARIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CARIAN_ID 168
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CARIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LYDIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LYDIAN_ID 169
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LYDIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MAHJONG_TILES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MAHJONG_TILES_ID 170
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MAHJONG_TILES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_DOMINO_TILES_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_DOMINO_TILES_ID 171
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, DOMINO_TILES_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SAMARITAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SAMARITAN_ID 172
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SAMARITAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID 173
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_THAM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAI_THAM_ID 174
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAI_THAM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_VEDIC_EXTENSIONS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_VEDIC_EXTENSIONS_ID 175
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, VEDIC_EXTENSIONS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LISU_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LISU_ID 176
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LISU_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BAMUM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BAMUM_ID 177
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BAMUM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COMMON_INDIC_NUMBER_FORMS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COMMON_INDIC_NUMBER_FORMS_ID 178
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COMMON_INDIC_NUMBER_FORMS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_DEVANAGARI_EXTENDED_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_DEVANAGARI_EXTENDED_ID 179
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, DEVANAGARI_EXTENDED_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_JAMO_EXTENDED_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_JAMO_EXTENDED_A_ID 180
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_JAMO_EXTENDED_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_JAVANESE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_JAVANESE_ID 181
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, JAVANESE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MYANMAR_EXTENDED_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MYANMAR_EXTENDED_A_ID 182
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MYANMAR_EXTENDED_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_VIET_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAI_VIET_ID 183
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAI_VIET_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MEETEI_MAYEK_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MEETEI_MAYEK_ID 184
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MEETEI_MAYEK_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_JAMO_EXTENDED_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_JAMO_EXTENDED_B_ID 185
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_JAMO_EXTENDED_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_IMPERIAL_ARAMAIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_IMPERIAL_ARAMAIC_ID 186
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, IMPERIAL_ARAMAIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_SOUTH_ARABIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OLD_SOUTH_ARABIAN_ID 187
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OLD_SOUTH_ARABIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_AVESTAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_AVESTAN_ID 188
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, AVESTAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_INSCRIPTIONAL_PARTHIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_INSCRIPTIONAL_PARTHIAN_ID 189
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, INSCRIPTIONAL_PARTHIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_INSCRIPTIONAL_PAHLAVI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_INSCRIPTIONAL_PAHLAVI_ID 190
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, INSCRIPTIONAL_PAHLAVI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_TURKIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OLD_TURKIC_ID 191
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OLD_TURKIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_RUMI_NUMERAL_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_RUMI_NUMERAL_SYMBOLS_ID 192
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, RUMI_NUMERAL_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KAITHI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KAITHI_ID 193
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KAITHI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_EGYPTIAN_HIEROGLYPHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_EGYPTIAN_HIEROGLYPHS_ID 194
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, EGYPTIAN_HIEROGLYPHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID 195
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID 196
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID 197
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MANDAIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MANDAIC_ID 198
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MANDAIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BATAK_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BATAK_ID 199
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BATAK_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC_EXTENDED_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC_EXTENDED_A_ID 200
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC_EXTENDED_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BRAHMI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BRAHMI_ID 201
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BRAHMI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BAMUM_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BAMUM_SUPPLEMENT_ID 202
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BAMUM_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KANA_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KANA_SUPPLEMENT_ID 203
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KANA_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PLAYING_CARDS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PLAYING_CARDS_ID 204
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PLAYING_CARDS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID 205
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_EMOTICONS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_EMOTICONS_ID 206
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, EMOTICONS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TRANSPORT_AND_MAP_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TRANSPORT_AND_MAP_SYMBOLS_ID 207
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TRANSPORT_AND_MAP_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ALCHEMICAL_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ALCHEMICAL_SYMBOLS_ID 208
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ALCHEMICAL_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID 209
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_EXTENDED_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_EXTENDED_A_ID 210
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_EXTENDED_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID 211
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CHAKMA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CHAKMA_ID 212
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CHAKMA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MEETEI_MAYEK_EXTENSIONS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MEETEI_MAYEK_EXTENSIONS_ID 213
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MEETEI_MAYEK_EXTENSIONS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MEROITIC_CURSIVE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MEROITIC_CURSIVE_ID 214
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MEROITIC_CURSIVE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MEROITIC_HIEROGLYPHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MEROITIC_HIEROGLYPHS_ID 215
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MEROITIC_HIEROGLYPHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MIAO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MIAO_ID 216
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MIAO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SHARADA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SHARADA_ID 217
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SHARADA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SORA_SOMPENG_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SORA_SOMPENG_ID 218
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SORA_SOMPENG_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUNDANESE_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUNDANESE_SUPPLEMENT_ID 219
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUNDANESE_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TAKRI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TAKRI_ID 220
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TAKRI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BASSA_VAH_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BASSA_VAH_ID 221
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BASSA_VAH_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CAUCASIAN_ALBANIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CAUCASIAN_ALBANIAN_ID 222
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CAUCASIAN_ALBANIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COPTIC_EPACT_NUMBERS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COPTIC_EPACT_NUMBERS_ID 223
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COPTIC_EPACT_NUMBERS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_DIACRITICAL_MARKS_EXTENDED_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_DIACRITICAL_MARKS_EXTENDED_ID 224
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_DIACRITICAL_MARKS_EXTENDED_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_DUPLOYAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_DUPLOYAN_ID 225
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, DUPLOYAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ELBASAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ELBASAN_ID 226
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ELBASAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GEOMETRIC_SHAPES_EXTENDED_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GEOMETRIC_SHAPES_EXTENDED_ID 227
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GEOMETRIC_SHAPES_EXTENDED_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GRANTHA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GRANTHA_ID 228
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GRANTHA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KHOJKI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KHOJKI_ID 229
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KHOJKI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_KHUDAWADI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_KHUDAWADI_ID 230
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, KHUDAWADI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_E_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_E_ID 231
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_E_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_LINEAR_A_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_LINEAR_A_ID 232
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, LINEAR_A_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MAHAJANI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MAHAJANI_ID 233
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MAHAJANI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MANICHAEAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MANICHAEAN_ID 234
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MANICHAEAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MENDE_KIKAKUI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MENDE_KIKAKUI_ID 235
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MENDE_KIKAKUI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MODI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MODI_ID 236
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MODI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MRO_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MRO_ID 237
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MRO_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MYANMAR_EXTENDED_B_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MYANMAR_EXTENDED_B_ID 238
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MYANMAR_EXTENDED_B_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_NABATAEAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_NABATAEAN_ID 239
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, NABATAEAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_NORTH_ARABIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OLD_NORTH_ARABIAN_ID 240
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OLD_NORTH_ARABIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_PERMIC_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OLD_PERMIC_ID 241
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OLD_PERMIC_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ORNAMENTAL_DINGBATS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ORNAMENTAL_DINGBATS_ID 242
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ORNAMENTAL_DINGBATS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PAHAWH_HMONG_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PAHAWH_HMONG_ID 243
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PAHAWH_HMONG_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PALMYRENE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PALMYRENE_ID 244
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PALMYRENE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PAU_CIN_HAU_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PAU_CIN_HAU_ID 245
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PAU_CIN_HAU_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_PSALTER_PAHLAVI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_PSALTER_PAHLAVI_ID 246
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, PSALTER_PAHLAVI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SHORTHAND_FORMAT_CONTROLS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SHORTHAND_FORMAT_CONTROLS_ID 247
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SHORTHAND_FORMAT_CONTROLS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SIDDHAM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SIDDHAM_ID 248
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SIDDHAM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SINHALA_ARCHAIC_NUMBERS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SINHALA_ARCHAIC_NUMBERS_ID 249
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SINHALA_ARCHAIC_NUMBERS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_ARROWS_C_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_ARROWS_C_ID 250
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_ARROWS_C_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TIRHUTA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TIRHUTA_ID 251
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TIRHUTA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_WARANG_CITI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_WARANG_CITI_ID 252
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, WARANG_CITI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_AHOM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_AHOM_ID 253
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, AHOM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ANATOLIAN_HIEROGLYPHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ANATOLIAN_HIEROGLYPHS_ID 254
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ANATOLIAN_HIEROGLYPHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CHEROKEE_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CHEROKEE_SUPPLEMENT_ID 255
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CHEROKEE_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID 256
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_EARLY_DYNASTIC_CUNEIFORM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_EARLY_DYNASTIC_CUNEIFORM_ID 257
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, EARLY_DYNASTIC_CUNEIFORM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_HATRAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_HATRAN_ID 258
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, HATRAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MULTANI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MULTANI_ID 259
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MULTANI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_HUNGARIAN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OLD_HUNGARIAN_ID 260
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OLD_HUNGARIAN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID 261
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_SUTTON_SIGNWRITING_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_SUTTON_SIGNWRITING_ID 262
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, SUTTON_SIGNWRITING_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_ADLAM_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_ADLAM_ID 263
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, ADLAM_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_BHAIKSUKI_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_BHAIKSUKI_ID 264
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, BHAIKSUKI_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_EXTENDED_C_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_EXTENDED_C_ID 265
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_EXTENDED_C_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_GLAGOLITIC_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_GLAGOLITIC_SUPPLEMENT_ID 266
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, GLAGOLITIC_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID 267
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MARCHEN_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MARCHEN_ID 268
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MARCHEN_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_MONGOLIAN_SUPPLEMENT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_MONGOLIAN_SUPPLEMENT_ID 269
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, MONGOLIAN_SUPPLEMENT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_NEWA_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_NEWA_ID 270
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, NEWA_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_OSAGE_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_OSAGE_ID 271
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, OSAGE_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TANGUT_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TANGUT_ID 272
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TANGUT_ID, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_TANGUT_COMPONENTS_ID(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_TANGUT_COMPONENTS_ID 273
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, TANGUT_COMPONENTS_ID, jint)

/*!
 @brief One more than the highest normal UnicodeBlock value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.BLOCK).
 */
inline jint AndroidIcuLangUCharacter_UnicodeBlock_get_COUNT(void);
#define AndroidIcuLangUCharacter_UnicodeBlock_COUNT 274
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_UnicodeBlock, COUNT, jint)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_NO_BLOCK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_NO_BLOCK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, NO_BLOCK, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BASIC_LATIN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BASIC_LATIN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BASIC_LATIN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_1_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LATIN_1_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_1_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_IPA_EXTENSIONS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_IPA_EXTENSIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, IPA_EXTENSIONS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SPACING_MODIFIER_LETTERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SPACING_MODIFIER_LETTERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SPACING_MODIFIER_LETTERS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_DIACRITICAL_MARKS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_DIACRITICAL_MARKS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_DIACRITICAL_MARKS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 @brief Unicode 3.2 renames this block to "Greek and Coptic".
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GREEK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GREEK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GREEK, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARMENIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARMENIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARMENIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HEBREW(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HEBREW;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HEBREW, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARABIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SYRIAC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SYRIAC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SYRIAC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_THAANA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_THAANA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, THAANA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_DEVANAGARI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_DEVANAGARI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, DEVANAGARI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BENGALI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BENGALI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BENGALI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GURMUKHI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GURMUKHI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GURMUKHI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GUJARATI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GUJARATI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GUJARATI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ORIYA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ORIYA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ORIYA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAMIL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAMIL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAMIL, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TELUGU(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TELUGU;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TELUGU, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KANNADA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KANNADA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KANNADA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MALAYALAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MALAYALAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MALAYALAM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SINHALA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SINHALA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SINHALA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_THAI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_THAI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, THAI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LAO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LAO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LAO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TIBETAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TIBETAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TIBETAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MYANMAR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MYANMAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MYANMAR, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GEORGIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GEORGIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GEORGIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_JAMO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_JAMO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_JAMO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CHEROKEE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CHEROKEE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CHEROKEE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OGHAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OGHAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OGHAM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_RUNIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_RUNIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, RUNIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KHMER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KHMER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KHMER, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MONGOLIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MONGOLIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MONGOLIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_ADDITIONAL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_ADDITIONAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_ADDITIONAL, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GREEK_EXTENDED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GREEK_EXTENDED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GREEK_EXTENDED, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GENERAL_PUNCTUATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GENERAL_PUNCTUATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GENERAL_PUNCTUATION, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPERSCRIPTS_AND_SUBSCRIPTS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPERSCRIPTS_AND_SUBSCRIPTS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPERSCRIPTS_AND_SUBSCRIPTS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CURRENCY_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CURRENCY_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CURRENCY_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 @brief Unicode 3.2 renames this block to "Combining Diacritical Marks for
  Symbols".
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_MARKS_FOR_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_MARKS_FOR_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_MARKS_FOR_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LETTERLIKE_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LETTERLIKE_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LETTERLIKE_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_NUMBER_FORMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_NUMBER_FORMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, NUMBER_FORMS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARROWS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARROWS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARROWS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MATHEMATICAL_OPERATORS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MATHEMATICAL_OPERATORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MATHEMATICAL_OPERATORS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_TECHNICAL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_TECHNICAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_TECHNICAL, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CONTROL_PICTURES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CONTROL_PICTURES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CONTROL_PICTURES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OPTICAL_CHARACTER_RECOGNITION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OPTICAL_CHARACTER_RECOGNITION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OPTICAL_CHARACTER_RECOGNITION, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_ALPHANUMERICS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_ALPHANUMERICS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_ALPHANUMERICS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BOX_DRAWING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BOX_DRAWING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BOX_DRAWING, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BLOCK_ELEMENTS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BLOCK_ELEMENTS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BLOCK_ELEMENTS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GEOMETRIC_SHAPES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GEOMETRIC_SHAPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GEOMETRIC_SHAPES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_DINGBATS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_DINGBATS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, DINGBATS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BRAILLE_PATTERNS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BRAILLE_PATTERNS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BRAILLE_PATTERNS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_RADICALS_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_RADICALS_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_RADICALS_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KANGXI_RADICALS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KANGXI_RADICALS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KANGXI_RADICALS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_IDEOGRAPHIC_DESCRIPTION_CHARACTERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_IDEOGRAPHIC_DESCRIPTION_CHARACTERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, IDEOGRAPHIC_DESCRIPTION_CHARACTERS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_SYMBOLS_AND_PUNCTUATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_SYMBOLS_AND_PUNCTUATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_SYMBOLS_AND_PUNCTUATION, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HIRAGANA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HIRAGANA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HIRAGANA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KATAKANA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KATAKANA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KATAKANA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BOPOMOFO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BOPOMOFO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BOPOMOFO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_COMPATIBILITY_JAMO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_COMPATIBILITY_JAMO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_COMPATIBILITY_JAMO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KANBUN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KANBUN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KANBUN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BOPOMOFO_EXTENDED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BOPOMOFO_EXTENDED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BOPOMOFO_EXTENDED, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_CJK_LETTERS_AND_MONTHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_CJK_LETTERS_AND_MONTHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_CJK_LETTERS_AND_MONTHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_YI_SYLLABLES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_YI_SYLLABLES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, YI_SYLLABLES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_YI_RADICALS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_YI_RADICALS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, YI_RADICALS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_SYLLABLES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_SYLLABLES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_SYLLABLES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HIGH_SURROGATES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HIGH_SURROGATES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HIGH_SURROGATES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HIGH_PRIVATE_USE_SURROGATES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HIGH_PRIVATE_USE_SURROGATES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HIGH_PRIVATE_USE_SURROGATES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LOW_SURROGATES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LOW_SURROGATES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LOW_SURROGATES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 @brief Same as public static final int PRIVATE_USE.
 Until Unicode 3.1.1; the corresponding block name was "Private Use";
  and multiple code point ranges had this block.
  Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  and adds separate blocks for the supplementary PUAs.
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PRIVATE_USE_AREA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PRIVATE_USE_AREA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PRIVATE_USE_AREA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 @brief Same as public static final int PRIVATE_USE_AREA.
 Until Unicode 3.1.1; the corresponding block name was "Private Use";
  and multiple code point ranges had this block.
  Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  and adds separate blocks for the supplementary PUAs.
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PRIVATE_USE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PRIVATE_USE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PRIVATE_USE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY_IDEOGRAPHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY_IDEOGRAPHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY_IDEOGRAPHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ALPHABETIC_PRESENTATION_FORMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ALPHABETIC_PRESENTATION_FORMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ALPHABETIC_PRESENTATION_FORMS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_PRESENTATION_FORMS_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_PRESENTATION_FORMS_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_PRESENTATION_FORMS_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_HALF_MARKS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_HALF_MARKS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_HALF_MARKS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY_FORMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY_FORMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY_FORMS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SMALL_FORM_VARIANTS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SMALL_FORM_VARIANTS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SMALL_FORM_VARIANTS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_PRESENTATION_FORMS_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_PRESENTATION_FORMS_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_PRESENTATION_FORMS_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SPECIALS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SPECIALS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SPECIALS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HALFWIDTH_AND_FULLWIDTH_FORMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HALFWIDTH_AND_FULLWIDTH_FORMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HALFWIDTH_AND_FULLWIDTH_FORMS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_ITALIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OLD_ITALIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OLD_ITALIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GOTHIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GOTHIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GOTHIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_DESERET(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_DESERET;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, DESERET, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BYZANTINE_MUSICAL_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BYZANTINE_MUSICAL_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BYZANTINE_MUSICAL_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MUSICAL_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MUSICAL_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MUSICAL_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MATHEMATICAL_ALPHANUMERIC_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MATHEMATICAL_ALPHANUMERIC_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MATHEMATICAL_ALPHANUMERIC_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAGS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAGS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 @brief Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_SUPPLEMENTARY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_SUPPLEMENTARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_SUPPLEMENTARY, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 @brief Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAGALOG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAGALOG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAGALOG, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HANUNOO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HANUNOO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HANUNOO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BUHID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BUHID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BUHID, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAGBANWA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAGBANWA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAGBANWA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_ARROWS_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_ARROWS_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_ARROWS_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_ARROWS_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_ARROWS_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_ARROWS_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_MATHEMATICAL_OPERATORS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_MATHEMATICAL_OPERATORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_MATHEMATICAL_OPERATORS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KATAKANA_PHONETIC_EXTENSIONS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KATAKANA_PHONETIC_EXTENSIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KATAKANA_PHONETIC_EXTENSIONS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_VARIATION_SELECTORS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_VARIATION_SELECTORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, VARIATION_SELECTORS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTARY_PRIVATE_USE_AREA_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTARY_PRIVATE_USE_AREA_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTARY_PRIVATE_USE_AREA_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTARY_PRIVATE_USE_AREA_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTARY_PRIVATE_USE_AREA_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTARY_PRIVATE_USE_AREA_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LIMBU(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LIMBU;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LIMBU, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_LE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAI_LE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAI_LE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KHMER_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KHMER_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KHMER_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PHONETIC_EXTENSIONS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PHONETIC_EXTENSIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PHONETIC_EXTENSIONS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_SYMBOLS_AND_ARROWS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_SYMBOLS_AND_ARROWS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_SYMBOLS_AND_ARROWS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_YIJING_HEXAGRAM_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_YIJING_HEXAGRAM_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, YIJING_HEXAGRAM_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LINEAR_B_SYLLABARY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LINEAR_B_SYLLABARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LINEAR_B_SYLLABARY, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LINEAR_B_IDEOGRAMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LINEAR_B_IDEOGRAMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LINEAR_B_IDEOGRAMS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_AEGEAN_NUMBERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_AEGEAN_NUMBERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, AEGEAN_NUMBERS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_UGARITIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_UGARITIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, UGARITIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SHAVIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SHAVIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SHAVIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OSMANYA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OSMANYA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OSMANYA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CYPRIOT_SYLLABARY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CYPRIOT_SYLLABARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CYPRIOT_SYLLABARY, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_XUAN_JING_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAI_XUAN_JING_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAI_XUAN_JING_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_VARIATION_SELECTORS_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_VARIATION_SELECTORS_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, VARIATION_SELECTORS_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ANCIENT_GREEK_MUSICAL_NOTATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ANCIENT_GREEK_MUSICAL_NOTATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ANCIENT_GREEK_MUSICAL_NOTATION, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ANCIENT_GREEK_NUMBERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ANCIENT_GREEK_NUMBERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ANCIENT_GREEK_NUMBERS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BUGINESE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BUGINESE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BUGINESE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_STROKES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_STROKES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_STROKES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_DIACRITICAL_MARKS_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COPTIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COPTIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COPTIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC_EXTENDED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC_EXTENDED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC_EXTENDED, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GEORGIAN_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GEORGIAN_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GEORGIAN_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GLAGOLITIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GLAGOLITIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GLAGOLITIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KHAROSHTHI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KHAROSHTHI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KHAROSHTHI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MODIFIER_TONE_LETTERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MODIFIER_TONE_LETTERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MODIFIER_TONE_LETTERS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_NEW_TAI_LUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_NEW_TAI_LUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, NEW_TAI_LUE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_PERSIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OLD_PERSIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OLD_PERSIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PHONETIC_EXTENSIONS_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PHONETIC_EXTENSIONS_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PHONETIC_EXTENSIONS_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_PUNCTUATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_PUNCTUATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_PUNCTUATION, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SYLOTI_NAGRI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SYLOTI_NAGRI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SYLOTI_NAGRI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TIFINAGH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TIFINAGH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TIFINAGH, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_VERTICAL_FORMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_VERTICAL_FORMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, VERTICAL_FORMS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_NKO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_NKO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, NKO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BALINESE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BALINESE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BALINESE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_C(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_C;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_C, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_D(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_D;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_D, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PHAGS_PA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PHAGS_PA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PHAGS_PA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PHOENICIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PHOENICIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PHOENICIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CUNEIFORM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CUNEIFORM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CUNEIFORM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CUNEIFORM_NUMBERS_AND_PUNCTUATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CUNEIFORM_NUMBERS_AND_PUNCTUATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CUNEIFORM_NUMBERS_AND_PUNCTUATION, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COUNTING_ROD_NUMERALS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COUNTING_ROD_NUMERALS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COUNTING_ROD_NUMERALS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUNDANESE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUNDANESE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUNDANESE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LEPCHA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LEPCHA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LEPCHA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OL_CHIKI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OL_CHIKI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OL_CHIKI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_EXTENDED_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_EXTENDED_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_EXTENDED_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_VAI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_VAI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, VAI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_EXTENDED_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_EXTENDED_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_EXTENDED_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SAURASHTRA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SAURASHTRA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SAURASHTRA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KAYAH_LI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KAYAH_LI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KAYAH_LI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_REJANG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_REJANG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, REJANG, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CHAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CHAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CHAM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ANCIENT_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ANCIENT_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ANCIENT_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PHAISTOS_DISC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PHAISTOS_DISC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PHAISTOS_DISC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LYCIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LYCIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LYCIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CARIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CARIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CARIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LYDIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LYDIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LYDIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MAHJONG_TILES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MAHJONG_TILES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MAHJONG_TILES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_DOMINO_TILES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_DOMINO_TILES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, DOMINO_TILES, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SAMARITAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SAMARITAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SAMARITAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_THAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAI_THAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAI_THAM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_VEDIC_EXTENSIONS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_VEDIC_EXTENSIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, VEDIC_EXTENSIONS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LISU(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LISU;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LISU, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BAMUM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BAMUM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BAMUM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COMMON_INDIC_NUMBER_FORMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COMMON_INDIC_NUMBER_FORMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COMMON_INDIC_NUMBER_FORMS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_DEVANAGARI_EXTENDED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_DEVANAGARI_EXTENDED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, DEVANAGARI_EXTENDED, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_JAMO_EXTENDED_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_JAMO_EXTENDED_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_JAMO_EXTENDED_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_JAVANESE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_JAVANESE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, JAVANESE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MYANMAR_EXTENDED_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MYANMAR_EXTENDED_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MYANMAR_EXTENDED_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAI_VIET(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAI_VIET;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAI_VIET, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MEETEI_MAYEK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MEETEI_MAYEK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MEETEI_MAYEK, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HANGUL_JAMO_EXTENDED_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HANGUL_JAMO_EXTENDED_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HANGUL_JAMO_EXTENDED_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_IMPERIAL_ARAMAIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_IMPERIAL_ARAMAIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, IMPERIAL_ARAMAIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_SOUTH_ARABIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OLD_SOUTH_ARABIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OLD_SOUTH_ARABIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_AVESTAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_AVESTAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, AVESTAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_INSCRIPTIONAL_PARTHIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_INSCRIPTIONAL_PARTHIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, INSCRIPTIONAL_PARTHIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_INSCRIPTIONAL_PAHLAVI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_INSCRIPTIONAL_PAHLAVI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, INSCRIPTIONAL_PAHLAVI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_TURKIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OLD_TURKIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OLD_TURKIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_RUMI_NUMERAL_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_RUMI_NUMERAL_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, RUMI_NUMERAL_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KAITHI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KAITHI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KAITHI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_EGYPTIAN_HIEROGLYPHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_EGYPTIAN_HIEROGLYPHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, EGYPTIAN_HIEROGLYPHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_ALPHANUMERIC_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_ALPHANUMERIC_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_ALPHANUMERIC_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ENCLOSED_IDEOGRAPHIC_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MANDAIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MANDAIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MANDAIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BATAK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BATAK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BATAK, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ETHIOPIC_EXTENDED_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ETHIOPIC_EXTENDED_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ETHIOPIC_EXTENDED_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BRAHMI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BRAHMI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BRAHMI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BAMUM_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BAMUM_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BAMUM_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KANA_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KANA_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KANA_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PLAYING_CARDS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PLAYING_CARDS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PLAYING_CARDS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_EMOTICONS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_EMOTICONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, EMOTICONS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TRANSPORT_AND_MAP_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TRANSPORT_AND_MAP_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TRANSPORT_AND_MAP_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ALCHEMICAL_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ALCHEMICAL_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ALCHEMICAL_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_EXTENDED_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_EXTENDED_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_EXTENDED_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CHAKMA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CHAKMA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CHAKMA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MEETEI_MAYEK_EXTENSIONS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MEETEI_MAYEK_EXTENSIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MEETEI_MAYEK_EXTENSIONS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MEROITIC_CURSIVE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MEROITIC_CURSIVE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MEROITIC_CURSIVE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MEROITIC_HIEROGLYPHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MEROITIC_HIEROGLYPHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MEROITIC_HIEROGLYPHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MIAO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MIAO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MIAO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SHARADA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SHARADA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SHARADA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SORA_SOMPENG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SORA_SOMPENG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SORA_SOMPENG, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUNDANESE_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUNDANESE_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUNDANESE_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TAKRI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TAKRI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TAKRI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BASSA_VAH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BASSA_VAH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BASSA_VAH, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CAUCASIAN_ALBANIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CAUCASIAN_ALBANIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CAUCASIAN_ALBANIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COPTIC_EPACT_NUMBERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COPTIC_EPACT_NUMBERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COPTIC_EPACT_NUMBERS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_COMBINING_DIACRITICAL_MARKS_EXTENDED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_COMBINING_DIACRITICAL_MARKS_EXTENDED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, COMBINING_DIACRITICAL_MARKS_EXTENDED, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_DUPLOYAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_DUPLOYAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, DUPLOYAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ELBASAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ELBASAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ELBASAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GEOMETRIC_SHAPES_EXTENDED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GEOMETRIC_SHAPES_EXTENDED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GEOMETRIC_SHAPES_EXTENDED, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GRANTHA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GRANTHA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GRANTHA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KHOJKI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KHOJKI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KHOJKI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_KHUDAWADI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_KHUDAWADI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, KHUDAWADI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LATIN_EXTENDED_E(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LATIN_EXTENDED_E;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LATIN_EXTENDED_E, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_LINEAR_A(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_LINEAR_A;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, LINEAR_A, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MAHAJANI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MAHAJANI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MAHAJANI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MANICHAEAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MANICHAEAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MANICHAEAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MENDE_KIKAKUI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MENDE_KIKAKUI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MENDE_KIKAKUI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MODI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MODI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MODI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MRO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MRO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MRO, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MYANMAR_EXTENDED_B(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MYANMAR_EXTENDED_B;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MYANMAR_EXTENDED_B, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_NABATAEAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_NABATAEAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, NABATAEAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_NORTH_ARABIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OLD_NORTH_ARABIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OLD_NORTH_ARABIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_PERMIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OLD_PERMIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OLD_PERMIC, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ORNAMENTAL_DINGBATS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ORNAMENTAL_DINGBATS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ORNAMENTAL_DINGBATS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PAHAWH_HMONG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PAHAWH_HMONG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PAHAWH_HMONG, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PALMYRENE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PALMYRENE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PALMYRENE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PAU_CIN_HAU(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PAU_CIN_HAU;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PAU_CIN_HAU, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_PSALTER_PAHLAVI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_PSALTER_PAHLAVI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, PSALTER_PAHLAVI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SHORTHAND_FORMAT_CONTROLS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SHORTHAND_FORMAT_CONTROLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SHORTHAND_FORMAT_CONTROLS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SIDDHAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SIDDHAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SIDDHAM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SINHALA_ARCHAIC_NUMBERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SINHALA_ARCHAIC_NUMBERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SINHALA_ARCHAIC_NUMBERS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_ARROWS_C(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_ARROWS_C;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_ARROWS_C, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TIRHUTA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TIRHUTA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TIRHUTA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_WARANG_CITI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_WARANG_CITI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, WARANG_CITI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_AHOM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_AHOM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, AHOM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ANATOLIAN_HIEROGLYPHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ANATOLIAN_HIEROGLYPHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ANATOLIAN_HIEROGLYPHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CHEROKEE_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CHEROKEE_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CHEROKEE_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_EARLY_DYNASTIC_CUNEIFORM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_EARLY_DYNASTIC_CUNEIFORM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, EARLY_DYNASTIC_CUNEIFORM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_HATRAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_HATRAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, HATRAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MULTANI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MULTANI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MULTANI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OLD_HUNGARIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OLD_HUNGARIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OLD_HUNGARIAN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_SUTTON_SIGNWRITING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_SUTTON_SIGNWRITING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, SUTTON_SIGNWRITING, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_ADLAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ADLAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, ADLAM, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_BHAIKSUKI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_BHAIKSUKI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, BHAIKSUKI, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_CYRILLIC_EXTENDED_C(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_CYRILLIC_EXTENDED_C;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, CYRILLIC_EXTENDED_C, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_GLAGOLITIC_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_GLAGOLITIC_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, GLAGOLITIC_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MARCHEN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MARCHEN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MARCHEN, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_MONGOLIAN_SUPPLEMENT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_MONGOLIAN_SUPPLEMENT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, MONGOLIAN_SUPPLEMENT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_NEWA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_NEWA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, NEWA, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_OSAGE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_OSAGE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, OSAGE, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TANGUT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TANGUT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TANGUT, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_TANGUT_COMPONENTS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_TANGUT_COMPONENTS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, TANGUT_COMPONENTS, AndroidIcuLangUCharacter_UnicodeBlock *)

/*!
 */
inline AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_get_INVALID_CODE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_INVALID_CODE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuLangUCharacter_UnicodeBlock, INVALID_CODE, AndroidIcuLangUCharacter_UnicodeBlock *)

FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_getInstanceWithInt_(jint id_);

FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_ofWithInt_(jint ch);

FOUNDATION_EXPORT AndroidIcuLangUCharacter_UnicodeBlock *AndroidIcuLangUCharacter_UnicodeBlock_forNameWithNSString_(NSString *blockName);

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_UnicodeBlock)

#endif

#if !defined (AndroidIcuLangUCharacter_EastAsianWidth_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_EastAsianWidth))
#define AndroidIcuLangUCharacter_EastAsianWidth_

/*!
 @brief East Asian Width constants.
 - seealso: UProperty#EAST_ASIAN_WIDTH
 - seealso: UCharacter#getIntPropertyValue
 */
@protocol AndroidIcuLangUCharacter_EastAsianWidth < JavaObject >

@end

@interface AndroidIcuLangUCharacter_EastAsianWidth : NSObject
@property (readonly, class) jint NEUTRAL NS_SWIFT_NAME(NEUTRAL);
@property (readonly, class) jint AMBIGUOUS NS_SWIFT_NAME(AMBIGUOUS);
@property (readonly, class) jint HALFWIDTH NS_SWIFT_NAME(HALFWIDTH);
@property (readonly, class) jint FULLWIDTH NS_SWIFT_NAME(FULLWIDTH);
@property (readonly, class) jint NARROW NS_SWIFT_NAME(NARROW);
@property (readonly, class) jint WIDE NS_SWIFT_NAME(WIDE);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)NEUTRAL;

+ (jint)AMBIGUOUS;

+ (jint)HALFWIDTH;

+ (jint)FULLWIDTH;

+ (jint)NARROW;

+ (jint)WIDE;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_EastAsianWidth)

/*!
 */
inline jint AndroidIcuLangUCharacter_EastAsianWidth_get_NEUTRAL(void);
#define AndroidIcuLangUCharacter_EastAsianWidth_NEUTRAL 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_EastAsianWidth, NEUTRAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_EastAsianWidth_get_AMBIGUOUS(void);
#define AndroidIcuLangUCharacter_EastAsianWidth_AMBIGUOUS 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_EastAsianWidth, AMBIGUOUS, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_EastAsianWidth_get_HALFWIDTH(void);
#define AndroidIcuLangUCharacter_EastAsianWidth_HALFWIDTH 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_EastAsianWidth, HALFWIDTH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_EastAsianWidth_get_FULLWIDTH(void);
#define AndroidIcuLangUCharacter_EastAsianWidth_FULLWIDTH 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_EastAsianWidth, FULLWIDTH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_EastAsianWidth_get_NARROW(void);
#define AndroidIcuLangUCharacter_EastAsianWidth_NARROW 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_EastAsianWidth, NARROW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_EastAsianWidth_get_WIDE(void);
#define AndroidIcuLangUCharacter_EastAsianWidth_WIDE 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_EastAsianWidth, WIDE, jint)

/*!
 @brief One more than the highest normal EastAsianWidth value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.EAST_ASIAN_WIDTH).
 */
inline jint AndroidIcuLangUCharacter_EastAsianWidth_get_COUNT(void);
#define AndroidIcuLangUCharacter_EastAsianWidth_COUNT 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_EastAsianWidth, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_EastAsianWidth)

#endif

#if !defined (AndroidIcuLangUCharacter_DecompositionType_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_DecompositionType))
#define AndroidIcuLangUCharacter_DecompositionType_

/*!
 @brief Decomposition Type constants.
 - seealso: UProperty#DECOMPOSITION_TYPE
 */
@protocol AndroidIcuLangUCharacter_DecompositionType < JavaObject >

@end

@interface AndroidIcuLangUCharacter_DecompositionType : NSObject
@property (readonly, class) jint NONE NS_SWIFT_NAME(NONE);
@property (readonly, class) jint CANONICAL NS_SWIFT_NAME(CANONICAL);
@property (readonly, class) jint COMPAT NS_SWIFT_NAME(COMPAT);
@property (readonly, class) jint CIRCLE NS_SWIFT_NAME(CIRCLE);
@property (readonly, class) jint FINAL NS_SWIFT_NAME(FINAL);
@property (readonly, class) jint FONT NS_SWIFT_NAME(FONT);
@property (readonly, class) jint FRACTION NS_SWIFT_NAME(FRACTION);
@property (readonly, class) jint INITIAL NS_SWIFT_NAME(INITIAL);
@property (readonly, class) jint ISOLATED NS_SWIFT_NAME(ISOLATED);
@property (readonly, class) jint MEDIAL NS_SWIFT_NAME(MEDIAL);
@property (readonly, class) jint NARROW NS_SWIFT_NAME(NARROW);
@property (readonly, class) jint NOBREAK NS_SWIFT_NAME(NOBREAK);
@property (readonly, class) jint SMALL NS_SWIFT_NAME(SMALL);
@property (readonly, class) jint SQUARE NS_SWIFT_NAME(SQUARE);
@property (readonly, class) jint SUB NS_SWIFT_NAME(SUB);
@property (readonly, class) jint SUPER NS_SWIFT_NAME(SUPER);
@property (readonly, class) jint VERTICAL NS_SWIFT_NAME(VERTICAL);
@property (readonly, class) jint WIDE NS_SWIFT_NAME(WIDE);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)NONE;

+ (jint)CANONICAL;

+ (jint)COMPAT;

+ (jint)CIRCLE;

+ (jint)FINAL;

+ (jint)FONT;

+ (jint)FRACTION;

+ (jint)INITIAL;

+ (jint)ISOLATED;

+ (jint)MEDIAL;

+ (jint)NARROW;

+ (jint)NOBREAK;

+ (jint)SMALL;

+ (jint)SQUARE;

+ (jint)SUB;

+ (jint)SUPER;

+ (jint)VERTICAL;

+ (jint)WIDE;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_DecompositionType)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_NONE(void);
#define AndroidIcuLangUCharacter_DecompositionType_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, NONE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_CANONICAL(void);
#define AndroidIcuLangUCharacter_DecompositionType_CANONICAL 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, CANONICAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_COMPAT(void);
#define AndroidIcuLangUCharacter_DecompositionType_COMPAT 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, COMPAT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_CIRCLE(void);
#define AndroidIcuLangUCharacter_DecompositionType_CIRCLE 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, CIRCLE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_FINAL(void);
#define AndroidIcuLangUCharacter_DecompositionType_FINAL 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, FINAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_FONT(void);
#define AndroidIcuLangUCharacter_DecompositionType_FONT 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, FONT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_FRACTION(void);
#define AndroidIcuLangUCharacter_DecompositionType_FRACTION 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, FRACTION, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_INITIAL(void);
#define AndroidIcuLangUCharacter_DecompositionType_INITIAL 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, INITIAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_ISOLATED(void);
#define AndroidIcuLangUCharacter_DecompositionType_ISOLATED 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, ISOLATED, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_MEDIAL(void);
#define AndroidIcuLangUCharacter_DecompositionType_MEDIAL 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, MEDIAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_NARROW(void);
#define AndroidIcuLangUCharacter_DecompositionType_NARROW 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, NARROW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_NOBREAK(void);
#define AndroidIcuLangUCharacter_DecompositionType_NOBREAK 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, NOBREAK, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_SMALL(void);
#define AndroidIcuLangUCharacter_DecompositionType_SMALL 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, SMALL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_SQUARE(void);
#define AndroidIcuLangUCharacter_DecompositionType_SQUARE 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, SQUARE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_SUB(void);
#define AndroidIcuLangUCharacter_DecompositionType_SUB 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, SUB, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_SUPER(void);
#define AndroidIcuLangUCharacter_DecompositionType_SUPER 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, SUPER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_VERTICAL(void);
#define AndroidIcuLangUCharacter_DecompositionType_VERTICAL 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, VERTICAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_WIDE(void);
#define AndroidIcuLangUCharacter_DecompositionType_WIDE 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, WIDE, jint)

/*!
 @brief One more than the highest normal DecompositionType value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.DECOMPOSITION_TYPE).
 */
inline jint AndroidIcuLangUCharacter_DecompositionType_get_COUNT(void);
#define AndroidIcuLangUCharacter_DecompositionType_COUNT 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_DecompositionType, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_DecompositionType)

#endif

#if !defined (AndroidIcuLangUCharacter_JoiningType_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_JoiningType))
#define AndroidIcuLangUCharacter_JoiningType_

/*!
 @brief Joining Type constants.
 - seealso: UProperty#JOINING_TYPE
 */
@protocol AndroidIcuLangUCharacter_JoiningType < JavaObject >

@end

@interface AndroidIcuLangUCharacter_JoiningType : NSObject
@property (readonly, class) jint NON_JOINING NS_SWIFT_NAME(NON_JOINING);
@property (readonly, class) jint JOIN_CAUSING NS_SWIFT_NAME(JOIN_CAUSING);
@property (readonly, class) jint DUAL_JOINING NS_SWIFT_NAME(DUAL_JOINING);
@property (readonly, class) jint LEFT_JOINING NS_SWIFT_NAME(LEFT_JOINING);
@property (readonly, class) jint RIGHT_JOINING NS_SWIFT_NAME(RIGHT_JOINING);
@property (readonly, class) jint TRANSPARENT NS_SWIFT_NAME(TRANSPARENT);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)NON_JOINING;

+ (jint)JOIN_CAUSING;

+ (jint)DUAL_JOINING;

+ (jint)LEFT_JOINING;

+ (jint)RIGHT_JOINING;

+ (jint)TRANSPARENT;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_JoiningType)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningType_get_NON_JOINING(void);
#define AndroidIcuLangUCharacter_JoiningType_NON_JOINING 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningType, NON_JOINING, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningType_get_JOIN_CAUSING(void);
#define AndroidIcuLangUCharacter_JoiningType_JOIN_CAUSING 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningType, JOIN_CAUSING, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningType_get_DUAL_JOINING(void);
#define AndroidIcuLangUCharacter_JoiningType_DUAL_JOINING 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningType, DUAL_JOINING, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningType_get_LEFT_JOINING(void);
#define AndroidIcuLangUCharacter_JoiningType_LEFT_JOINING 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningType, LEFT_JOINING, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningType_get_RIGHT_JOINING(void);
#define AndroidIcuLangUCharacter_JoiningType_RIGHT_JOINING 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningType, RIGHT_JOINING, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningType_get_TRANSPARENT(void);
#define AndroidIcuLangUCharacter_JoiningType_TRANSPARENT 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningType, TRANSPARENT, jint)

/*!
 @brief One more than the highest normal JoiningType value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.JOINING_TYPE).
 */
inline jint AndroidIcuLangUCharacter_JoiningType_get_COUNT(void);
#define AndroidIcuLangUCharacter_JoiningType_COUNT 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningType, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_JoiningType)

#endif

#if !defined (AndroidIcuLangUCharacter_JoiningGroup_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_JoiningGroup))
#define AndroidIcuLangUCharacter_JoiningGroup_

/*!
 @brief Joining Group constants.
 - seealso: UProperty#JOINING_GROUP
 */
@protocol AndroidIcuLangUCharacter_JoiningGroup < JavaObject >

@end

@interface AndroidIcuLangUCharacter_JoiningGroup : NSObject
@property (readonly, class) jint NO_JOINING_GROUP NS_SWIFT_NAME(NO_JOINING_GROUP);
@property (readonly, class) jint AIN NS_SWIFT_NAME(AIN);
@property (readonly, class) jint ALAPH NS_SWIFT_NAME(ALAPH);
@property (readonly, class) jint ALEF NS_SWIFT_NAME(ALEF);
@property (readonly, class) jint BEH NS_SWIFT_NAME(BEH);
@property (readonly, class) jint BETH NS_SWIFT_NAME(BETH);
@property (readonly, class) jint DAL NS_SWIFT_NAME(DAL);
@property (readonly, class) jint DALATH_RISH NS_SWIFT_NAME(DALATH_RISH);
@property (readonly, class) jint E NS_SWIFT_NAME(E);
@property (readonly, class) jint FEH NS_SWIFT_NAME(FEH);
@property (readonly, class) jint FINAL_SEMKATH NS_SWIFT_NAME(FINAL_SEMKATH);
@property (readonly, class) jint GAF NS_SWIFT_NAME(GAF);
@property (readonly, class) jint GAMAL NS_SWIFT_NAME(GAMAL);
@property (readonly, class) jint HAH NS_SWIFT_NAME(HAH);
@property (readonly, class) jint TEH_MARBUTA_GOAL NS_SWIFT_NAME(TEH_MARBUTA_GOAL);
@property (readonly, class) jint HAMZA_ON_HEH_GOAL NS_SWIFT_NAME(HAMZA_ON_HEH_GOAL);
@property (readonly, class) jint HE NS_SWIFT_NAME(HE);
@property (readonly, class) jint HEH NS_SWIFT_NAME(HEH);
@property (readonly, class) jint HEH_GOAL NS_SWIFT_NAME(HEH_GOAL);
@property (readonly, class) jint HETH NS_SWIFT_NAME(HETH);
@property (readonly, class) jint KAF NS_SWIFT_NAME(KAF);
@property (readonly, class) jint KAPH NS_SWIFT_NAME(KAPH);
@property (readonly, class) jint KNOTTED_HEH NS_SWIFT_NAME(KNOTTED_HEH);
@property (readonly, class) jint LAM NS_SWIFT_NAME(LAM);
@property (readonly, class) jint LAMADH NS_SWIFT_NAME(LAMADH);
@property (readonly, class) jint MEEM NS_SWIFT_NAME(MEEM);
@property (readonly, class) jint MIM NS_SWIFT_NAME(MIM);
@property (readonly, class) jint NOON NS_SWIFT_NAME(NOON);
@property (readonly, class) jint NUN NS_SWIFT_NAME(NUN);
@property (readonly, class) jint PE NS_SWIFT_NAME(PE);
@property (readonly, class) jint QAF NS_SWIFT_NAME(QAF);
@property (readonly, class) jint QAPH NS_SWIFT_NAME(QAPH);
@property (readonly, class) jint REH NS_SWIFT_NAME(REH);
@property (readonly, class) jint REVERSED_PE NS_SWIFT_NAME(REVERSED_PE);
@property (readonly, class) jint SAD NS_SWIFT_NAME(SAD);
@property (readonly, class) jint SADHE NS_SWIFT_NAME(SADHE);
@property (readonly, class) jint SEEN NS_SWIFT_NAME(SEEN);
@property (readonly, class) jint SEMKATH NS_SWIFT_NAME(SEMKATH);
@property (readonly, class) jint SHIN NS_SWIFT_NAME(SHIN);
@property (readonly, class) jint SWASH_KAF NS_SWIFT_NAME(SWASH_KAF);
@property (readonly, class) jint SYRIAC_WAW NS_SWIFT_NAME(SYRIAC_WAW);
@property (readonly, class) jint TAH NS_SWIFT_NAME(TAH);
@property (readonly, class) jint TAW NS_SWIFT_NAME(TAW);
@property (readonly, class) jint TEH_MARBUTA NS_SWIFT_NAME(TEH_MARBUTA);
@property (readonly, class) jint TETH NS_SWIFT_NAME(TETH);
@property (readonly, class) jint WAW NS_SWIFT_NAME(WAW);
@property (readonly, class) jint YEH NS_SWIFT_NAME(YEH);
@property (readonly, class) jint YEH_BARREE NS_SWIFT_NAME(YEH_BARREE);
@property (readonly, class) jint YEH_WITH_TAIL NS_SWIFT_NAME(YEH_WITH_TAIL);
@property (readonly, class) jint YUDH NS_SWIFT_NAME(YUDH);
@property (readonly, class) jint YUDH_HE NS_SWIFT_NAME(YUDH_HE);
@property (readonly, class) jint ZAIN NS_SWIFT_NAME(ZAIN);
@property (readonly, class) jint FE NS_SWIFT_NAME(FE);
@property (readonly, class) jint KHAPH NS_SWIFT_NAME(KHAPH);
@property (readonly, class) jint ZHAIN NS_SWIFT_NAME(ZHAIN);
@property (readonly, class) jint BURUSHASKI_YEH_BARREE NS_SWIFT_NAME(BURUSHASKI_YEH_BARREE);
@property (readonly, class) jint FARSI_YEH NS_SWIFT_NAME(FARSI_YEH);
@property (readonly, class) jint NYA NS_SWIFT_NAME(NYA);
@property (readonly, class) jint ROHINGYA_YEH NS_SWIFT_NAME(ROHINGYA_YEH);
@property (readonly, class) jint MANICHAEAN_ALEPH NS_SWIFT_NAME(MANICHAEAN_ALEPH);
@property (readonly, class) jint MANICHAEAN_AYIN NS_SWIFT_NAME(MANICHAEAN_AYIN);
@property (readonly, class) jint MANICHAEAN_BETH NS_SWIFT_NAME(MANICHAEAN_BETH);
@property (readonly, class) jint MANICHAEAN_DALETH NS_SWIFT_NAME(MANICHAEAN_DALETH);
@property (readonly, class) jint MANICHAEAN_DHAMEDH NS_SWIFT_NAME(MANICHAEAN_DHAMEDH);
@property (readonly, class) jint MANICHAEAN_FIVE NS_SWIFT_NAME(MANICHAEAN_FIVE);
@property (readonly, class) jint MANICHAEAN_GIMEL NS_SWIFT_NAME(MANICHAEAN_GIMEL);
@property (readonly, class) jint MANICHAEAN_HETH NS_SWIFT_NAME(MANICHAEAN_HETH);
@property (readonly, class) jint MANICHAEAN_HUNDRED NS_SWIFT_NAME(MANICHAEAN_HUNDRED);
@property (readonly, class) jint MANICHAEAN_KAPH NS_SWIFT_NAME(MANICHAEAN_KAPH);
@property (readonly, class) jint MANICHAEAN_LAMEDH NS_SWIFT_NAME(MANICHAEAN_LAMEDH);
@property (readonly, class) jint MANICHAEAN_MEM NS_SWIFT_NAME(MANICHAEAN_MEM);
@property (readonly, class) jint MANICHAEAN_NUN NS_SWIFT_NAME(MANICHAEAN_NUN);
@property (readonly, class) jint MANICHAEAN_ONE NS_SWIFT_NAME(MANICHAEAN_ONE);
@property (readonly, class) jint MANICHAEAN_PE NS_SWIFT_NAME(MANICHAEAN_PE);
@property (readonly, class) jint MANICHAEAN_QOPH NS_SWIFT_NAME(MANICHAEAN_QOPH);
@property (readonly, class) jint MANICHAEAN_RESH NS_SWIFT_NAME(MANICHAEAN_RESH);
@property (readonly, class) jint MANICHAEAN_SADHE NS_SWIFT_NAME(MANICHAEAN_SADHE);
@property (readonly, class) jint MANICHAEAN_SAMEKH NS_SWIFT_NAME(MANICHAEAN_SAMEKH);
@property (readonly, class) jint MANICHAEAN_TAW NS_SWIFT_NAME(MANICHAEAN_TAW);
@property (readonly, class) jint MANICHAEAN_TEN NS_SWIFT_NAME(MANICHAEAN_TEN);
@property (readonly, class) jint MANICHAEAN_TETH NS_SWIFT_NAME(MANICHAEAN_TETH);
@property (readonly, class) jint MANICHAEAN_THAMEDH NS_SWIFT_NAME(MANICHAEAN_THAMEDH);
@property (readonly, class) jint MANICHAEAN_TWENTY NS_SWIFT_NAME(MANICHAEAN_TWENTY);
@property (readonly, class) jint MANICHAEAN_WAW NS_SWIFT_NAME(MANICHAEAN_WAW);
@property (readonly, class) jint MANICHAEAN_YODH NS_SWIFT_NAME(MANICHAEAN_YODH);
@property (readonly, class) jint MANICHAEAN_ZAYIN NS_SWIFT_NAME(MANICHAEAN_ZAYIN);
@property (readonly, class) jint STRAIGHT_WAW NS_SWIFT_NAME(STRAIGHT_WAW);
@property (readonly, class) jint AFRICAN_FEH NS_SWIFT_NAME(AFRICAN_FEH);
@property (readonly, class) jint AFRICAN_NOON NS_SWIFT_NAME(AFRICAN_NOON);
@property (readonly, class) jint AFRICAN_QAF NS_SWIFT_NAME(AFRICAN_QAF);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)NO_JOINING_GROUP;

+ (jint)AIN;

+ (jint)ALAPH;

+ (jint)ALEF;

+ (jint)BEH;

+ (jint)BETH;

+ (jint)DAL;

+ (jint)DALATH_RISH;

+ (jint)E;

+ (jint)FEH;

+ (jint)FINAL_SEMKATH;

+ (jint)GAF;

+ (jint)GAMAL;

+ (jint)HAH;

+ (jint)TEH_MARBUTA_GOAL;

+ (jint)HAMZA_ON_HEH_GOAL;

+ (jint)HE;

+ (jint)HEH;

+ (jint)HEH_GOAL;

+ (jint)HETH;

+ (jint)KAF;

+ (jint)KAPH;

+ (jint)KNOTTED_HEH;

+ (jint)LAM;

+ (jint)LAMADH;

+ (jint)MEEM;

+ (jint)MIM;

+ (jint)NOON;

+ (jint)NUN;

+ (jint)PE;

+ (jint)QAF;

+ (jint)QAPH;

+ (jint)REH;

+ (jint)REVERSED_PE;

+ (jint)SAD;

+ (jint)SADHE;

+ (jint)SEEN;

+ (jint)SEMKATH;

+ (jint)SHIN;

+ (jint)SWASH_KAF;

+ (jint)SYRIAC_WAW;

+ (jint)TAH;

+ (jint)TAW;

+ (jint)TEH_MARBUTA;

+ (jint)TETH;

+ (jint)WAW;

+ (jint)YEH;

+ (jint)YEH_BARREE;

+ (jint)YEH_WITH_TAIL;

+ (jint)YUDH;

+ (jint)YUDH_HE;

+ (jint)ZAIN;

+ (jint)FE;

+ (jint)KHAPH;

+ (jint)ZHAIN;

+ (jint)BURUSHASKI_YEH_BARREE;

+ (jint)FARSI_YEH;

+ (jint)NYA;

+ (jint)ROHINGYA_YEH;

+ (jint)MANICHAEAN_ALEPH;

+ (jint)MANICHAEAN_AYIN;

+ (jint)MANICHAEAN_BETH;

+ (jint)MANICHAEAN_DALETH;

+ (jint)MANICHAEAN_DHAMEDH;

+ (jint)MANICHAEAN_FIVE;

+ (jint)MANICHAEAN_GIMEL;

+ (jint)MANICHAEAN_HETH;

+ (jint)MANICHAEAN_HUNDRED;

+ (jint)MANICHAEAN_KAPH;

+ (jint)MANICHAEAN_LAMEDH;

+ (jint)MANICHAEAN_MEM;

+ (jint)MANICHAEAN_NUN;

+ (jint)MANICHAEAN_ONE;

+ (jint)MANICHAEAN_PE;

+ (jint)MANICHAEAN_QOPH;

+ (jint)MANICHAEAN_RESH;

+ (jint)MANICHAEAN_SADHE;

+ (jint)MANICHAEAN_SAMEKH;

+ (jint)MANICHAEAN_TAW;

+ (jint)MANICHAEAN_TEN;

+ (jint)MANICHAEAN_TETH;

+ (jint)MANICHAEAN_THAMEDH;

+ (jint)MANICHAEAN_TWENTY;

+ (jint)MANICHAEAN_WAW;

+ (jint)MANICHAEAN_YODH;

+ (jint)MANICHAEAN_ZAYIN;

+ (jint)STRAIGHT_WAW;

+ (jint)AFRICAN_FEH;

+ (jint)AFRICAN_NOON;

+ (jint)AFRICAN_QAF;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_JoiningGroup)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_NO_JOINING_GROUP(void);
#define AndroidIcuLangUCharacter_JoiningGroup_NO_JOINING_GROUP 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, NO_JOINING_GROUP, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_AIN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_AIN 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, AIN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_ALAPH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_ALAPH 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, ALAPH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_ALEF(void);
#define AndroidIcuLangUCharacter_JoiningGroup_ALEF 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, ALEF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_BEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_BEH 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, BEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_BETH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_BETH 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, BETH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_DAL(void);
#define AndroidIcuLangUCharacter_JoiningGroup_DAL 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, DAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_DALATH_RISH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_DALATH_RISH 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, DALATH_RISH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_E(void);
#define AndroidIcuLangUCharacter_JoiningGroup_E 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, E, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_FEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_FEH 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, FEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_FINAL_SEMKATH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_FINAL_SEMKATH 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, FINAL_SEMKATH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_GAF(void);
#define AndroidIcuLangUCharacter_JoiningGroup_GAF 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, GAF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_GAMAL(void);
#define AndroidIcuLangUCharacter_JoiningGroup_GAMAL 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, GAMAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_HAH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_HAH 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, HAH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_TEH_MARBUTA_GOAL(void);
#define AndroidIcuLangUCharacter_JoiningGroup_TEH_MARBUTA_GOAL 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, TEH_MARBUTA_GOAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_HAMZA_ON_HEH_GOAL(void);
#define AndroidIcuLangUCharacter_JoiningGroup_HAMZA_ON_HEH_GOAL 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, HAMZA_ON_HEH_GOAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_HE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_HE 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, HE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_HEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_HEH 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, HEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_HEH_GOAL(void);
#define AndroidIcuLangUCharacter_JoiningGroup_HEH_GOAL 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, HEH_GOAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_HETH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_HETH 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, HETH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_KAF(void);
#define AndroidIcuLangUCharacter_JoiningGroup_KAF 19
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, KAF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_KAPH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_KAPH 20
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, KAPH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_KNOTTED_HEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_KNOTTED_HEH 21
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, KNOTTED_HEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_LAM(void);
#define AndroidIcuLangUCharacter_JoiningGroup_LAM 22
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, LAM, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_LAMADH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_LAMADH 23
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, LAMADH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MEEM(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MEEM 24
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MEEM, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MIM(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MIM 25
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MIM, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_NOON(void);
#define AndroidIcuLangUCharacter_JoiningGroup_NOON 26
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, NOON, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_NUN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_NUN 27
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, NUN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_PE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_PE 28
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, PE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_QAF(void);
#define AndroidIcuLangUCharacter_JoiningGroup_QAF 29
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, QAF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_QAPH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_QAPH 30
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, QAPH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_REH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_REH 31
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, REH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_REVERSED_PE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_REVERSED_PE 32
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, REVERSED_PE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_SAD(void);
#define AndroidIcuLangUCharacter_JoiningGroup_SAD 33
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, SAD, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_SADHE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_SADHE 34
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, SADHE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_SEEN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_SEEN 35
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, SEEN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_SEMKATH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_SEMKATH 36
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, SEMKATH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_SHIN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_SHIN 37
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, SHIN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_SWASH_KAF(void);
#define AndroidIcuLangUCharacter_JoiningGroup_SWASH_KAF 38
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, SWASH_KAF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_SYRIAC_WAW(void);
#define AndroidIcuLangUCharacter_JoiningGroup_SYRIAC_WAW 39
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, SYRIAC_WAW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_TAH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_TAH 40
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, TAH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_TAW(void);
#define AndroidIcuLangUCharacter_JoiningGroup_TAW 41
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, TAW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_TEH_MARBUTA(void);
#define AndroidIcuLangUCharacter_JoiningGroup_TEH_MARBUTA 42
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, TEH_MARBUTA, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_TETH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_TETH 43
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, TETH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_WAW(void);
#define AndroidIcuLangUCharacter_JoiningGroup_WAW 44
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, WAW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_YEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_YEH 45
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, YEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_YEH_BARREE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_YEH_BARREE 46
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, YEH_BARREE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_YEH_WITH_TAIL(void);
#define AndroidIcuLangUCharacter_JoiningGroup_YEH_WITH_TAIL 47
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, YEH_WITH_TAIL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_YUDH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_YUDH 48
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, YUDH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_YUDH_HE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_YUDH_HE 49
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, YUDH_HE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_ZAIN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_ZAIN 50
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, ZAIN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_FE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_FE 51
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, FE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_KHAPH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_KHAPH 52
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, KHAPH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_ZHAIN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_ZHAIN 53
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, ZHAIN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_BURUSHASKI_YEH_BARREE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_BURUSHASKI_YEH_BARREE 54
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, BURUSHASKI_YEH_BARREE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_FARSI_YEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_FARSI_YEH 55
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, FARSI_YEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_NYA(void);
#define AndroidIcuLangUCharacter_JoiningGroup_NYA 56
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, NYA, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_ROHINGYA_YEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_ROHINGYA_YEH 57
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, ROHINGYA_YEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_ALEPH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_ALEPH 58
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_ALEPH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_AYIN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_AYIN 59
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_AYIN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_BETH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_BETH 60
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_BETH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_DALETH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_DALETH 61
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_DALETH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_DHAMEDH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_DHAMEDH 62
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_DHAMEDH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_FIVE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_FIVE 63
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_FIVE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_GIMEL(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_GIMEL 64
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_GIMEL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_HETH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_HETH 65
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_HETH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_HUNDRED(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_HUNDRED 66
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_HUNDRED, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_KAPH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_KAPH 67
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_KAPH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_LAMEDH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_LAMEDH 68
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_LAMEDH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_MEM(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_MEM 69
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_MEM, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_NUN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_NUN 70
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_NUN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_ONE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_ONE 71
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_ONE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_PE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_PE 72
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_PE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_QOPH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_QOPH 73
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_QOPH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_RESH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_RESH 74
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_RESH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_SADHE(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_SADHE 75
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_SADHE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_SAMEKH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_SAMEKH 76
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_SAMEKH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_TAW(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_TAW 77
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_TAW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_TEN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_TEN 78
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_TEN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_TETH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_TETH 79
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_TETH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_THAMEDH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_THAMEDH 80
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_THAMEDH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_TWENTY(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_TWENTY 81
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_TWENTY, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_WAW(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_WAW 82
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_WAW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_YODH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_YODH 83
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_YODH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_MANICHAEAN_ZAYIN(void);
#define AndroidIcuLangUCharacter_JoiningGroup_MANICHAEAN_ZAYIN 84
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, MANICHAEAN_ZAYIN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_STRAIGHT_WAW(void);
#define AndroidIcuLangUCharacter_JoiningGroup_STRAIGHT_WAW 85
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, STRAIGHT_WAW, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_AFRICAN_FEH(void);
#define AndroidIcuLangUCharacter_JoiningGroup_AFRICAN_FEH 86
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, AFRICAN_FEH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_AFRICAN_NOON(void);
#define AndroidIcuLangUCharacter_JoiningGroup_AFRICAN_NOON 87
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, AFRICAN_NOON, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_AFRICAN_QAF(void);
#define AndroidIcuLangUCharacter_JoiningGroup_AFRICAN_QAF 88
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, AFRICAN_QAF, jint)

/*!
 @brief One more than the highest normal JoiningGroup value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.JoiningGroup).
 */
inline jint AndroidIcuLangUCharacter_JoiningGroup_get_COUNT(void);
#define AndroidIcuLangUCharacter_JoiningGroup_COUNT 89
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_JoiningGroup, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_JoiningGroup)

#endif

#if !defined (AndroidIcuLangUCharacter_GraphemeClusterBreak_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_GraphemeClusterBreak))
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_

/*!
 @brief Grapheme Cluster Break constants.
 - seealso: UProperty#GRAPHEME_CLUSTER_BREAK
 */
@protocol AndroidIcuLangUCharacter_GraphemeClusterBreak < JavaObject >

@end

@interface AndroidIcuLangUCharacter_GraphemeClusterBreak : NSObject
@property (readonly, class) jint OTHER NS_SWIFT_NAME(OTHER);
@property (readonly, class) jint CONTROL NS_SWIFT_NAME(CONTROL);
@property (readonly, class) jint CR NS_SWIFT_NAME(CR);
@property (readonly, class) jint EXTEND NS_SWIFT_NAME(EXTEND);
@property (readonly, class) jint L NS_SWIFT_NAME(L);
@property (readonly, class) jint LF NS_SWIFT_NAME(LF);
@property (readonly, class) jint LV NS_SWIFT_NAME(LV);
@property (readonly, class) jint LVT NS_SWIFT_NAME(LVT);
@property (readonly, class) jint T NS_SWIFT_NAME(T);
@property (readonly, class) jint V NS_SWIFT_NAME(V);
@property (readonly, class) jint SPACING_MARK NS_SWIFT_NAME(SPACING_MARK);
@property (readonly, class) jint PREPEND NS_SWIFT_NAME(PREPEND);
@property (readonly, class) jint REGIONAL_INDICATOR NS_SWIFT_NAME(REGIONAL_INDICATOR);
@property (readonly, class) jint E_BASE NS_SWIFT_NAME(E_BASE);
@property (readonly, class) jint E_BASE_GAZ NS_SWIFT_NAME(E_BASE_GAZ);
@property (readonly, class) jint E_MODIFIER NS_SWIFT_NAME(E_MODIFIER);
@property (readonly, class) jint GLUE_AFTER_ZWJ NS_SWIFT_NAME(GLUE_AFTER_ZWJ);
@property (readonly, class) jint ZWJ NS_SWIFT_NAME(ZWJ);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)OTHER;

+ (jint)CONTROL;

+ (jint)CR;

+ (jint)EXTEND;

+ (jint)L;

+ (jint)LF;

+ (jint)LV;

+ (jint)LVT;

+ (jint)T;

+ (jint)V;

+ (jint)SPACING_MARK;

+ (jint)PREPEND;

+ (jint)REGIONAL_INDICATOR;

+ (jint)E_BASE;

+ (jint)E_BASE_GAZ;

+ (jint)E_MODIFIER;

+ (jint)GLUE_AFTER_ZWJ;

+ (jint)ZWJ;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_GraphemeClusterBreak)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_OTHER(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_OTHER 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, OTHER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_CONTROL(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_CONTROL 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, CONTROL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_CR(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_CR 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, CR, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_EXTEND(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_EXTEND 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, EXTEND, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_L(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_L 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, L, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_LF(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_LF 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, LF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_LV(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_LV 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, LV, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_LVT(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_LVT 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, LVT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_T(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_T 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, T, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_V(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_V 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, V, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_SPACING_MARK(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_SPACING_MARK 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, SPACING_MARK, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_PREPEND(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_PREPEND 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, PREPEND, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_REGIONAL_INDICATOR(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_REGIONAL_INDICATOR 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, REGIONAL_INDICATOR, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_E_BASE(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_E_BASE 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, E_BASE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_E_BASE_GAZ(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_E_BASE_GAZ 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, E_BASE_GAZ, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_E_MODIFIER(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_E_MODIFIER 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, E_MODIFIER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_GLUE_AFTER_ZWJ(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_GLUE_AFTER_ZWJ 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, GLUE_AFTER_ZWJ, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_ZWJ(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_ZWJ 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, ZWJ, jint)

/*!
 @brief One more than the highest normal GraphemeClusterBreak value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.GRAPHEME_CLUSTER_BREAK).
 */
inline jint AndroidIcuLangUCharacter_GraphemeClusterBreak_get_COUNT(void);
#define AndroidIcuLangUCharacter_GraphemeClusterBreak_COUNT 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_GraphemeClusterBreak, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_GraphemeClusterBreak)

#endif

#if !defined (AndroidIcuLangUCharacter_WordBreak_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_WordBreak))
#define AndroidIcuLangUCharacter_WordBreak_

/*!
 @brief Word Break constants.
 - seealso: UProperty#WORD_BREAK
 */
@protocol AndroidIcuLangUCharacter_WordBreak < JavaObject >

@end

@interface AndroidIcuLangUCharacter_WordBreak : NSObject
@property (readonly, class) jint OTHER NS_SWIFT_NAME(OTHER);
@property (readonly, class) jint ALETTER NS_SWIFT_NAME(ALETTER);
@property (readonly, class) jint FORMAT NS_SWIFT_NAME(FORMAT);
@property (readonly, class) jint KATAKANA NS_SWIFT_NAME(KATAKANA);
@property (readonly, class) jint MIDLETTER NS_SWIFT_NAME(MIDLETTER);
@property (readonly, class) jint MIDNUM NS_SWIFT_NAME(MIDNUM);
@property (readonly, class) jint NUMERIC NS_SWIFT_NAME(NUMERIC);
@property (readonly, class) jint EXTENDNUMLET NS_SWIFT_NAME(EXTENDNUMLET);
@property (readonly, class) jint CR NS_SWIFT_NAME(CR);
@property (readonly, class) jint EXTEND NS_SWIFT_NAME(EXTEND);
@property (readonly, class) jint LF NS_SWIFT_NAME(LF);
@property (readonly, class) jint MIDNUMLET NS_SWIFT_NAME(MIDNUMLET);
@property (readonly, class) jint NEWLINE NS_SWIFT_NAME(NEWLINE);
@property (readonly, class) jint REGIONAL_INDICATOR NS_SWIFT_NAME(REGIONAL_INDICATOR);
@property (readonly, class) jint HEBREW_LETTER NS_SWIFT_NAME(HEBREW_LETTER);
@property (readonly, class) jint SINGLE_QUOTE NS_SWIFT_NAME(SINGLE_QUOTE);
@property (readonly, class) jint DOUBLE_QUOTE NS_SWIFT_NAME(DOUBLE_QUOTE);
@property (readonly, class) jint E_BASE NS_SWIFT_NAME(E_BASE);
@property (readonly, class) jint E_BASE_GAZ NS_SWIFT_NAME(E_BASE_GAZ);
@property (readonly, class) jint E_MODIFIER NS_SWIFT_NAME(E_MODIFIER);
@property (readonly, class) jint GLUE_AFTER_ZWJ NS_SWIFT_NAME(GLUE_AFTER_ZWJ);
@property (readonly, class) jint ZWJ NS_SWIFT_NAME(ZWJ);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)OTHER;

+ (jint)ALETTER;

+ (jint)FORMAT;

+ (jint)KATAKANA;

+ (jint)MIDLETTER;

+ (jint)MIDNUM;

+ (jint)NUMERIC;

+ (jint)EXTENDNUMLET;

+ (jint)CR;

+ (jint)EXTEND;

+ (jint)LF;

+ (jint)MIDNUMLET;

+ (jint)NEWLINE;

+ (jint)REGIONAL_INDICATOR;

+ (jint)HEBREW_LETTER;

+ (jint)SINGLE_QUOTE;

+ (jint)DOUBLE_QUOTE;

+ (jint)E_BASE;

+ (jint)E_BASE_GAZ;

+ (jint)E_MODIFIER;

+ (jint)GLUE_AFTER_ZWJ;

+ (jint)ZWJ;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_WordBreak)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_OTHER(void);
#define AndroidIcuLangUCharacter_WordBreak_OTHER 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, OTHER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_ALETTER(void);
#define AndroidIcuLangUCharacter_WordBreak_ALETTER 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, ALETTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_FORMAT(void);
#define AndroidIcuLangUCharacter_WordBreak_FORMAT 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, FORMAT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_KATAKANA(void);
#define AndroidIcuLangUCharacter_WordBreak_KATAKANA 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, KATAKANA, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_MIDLETTER(void);
#define AndroidIcuLangUCharacter_WordBreak_MIDLETTER 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, MIDLETTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_MIDNUM(void);
#define AndroidIcuLangUCharacter_WordBreak_MIDNUM 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, MIDNUM, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_NUMERIC(void);
#define AndroidIcuLangUCharacter_WordBreak_NUMERIC 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, NUMERIC, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_EXTENDNUMLET(void);
#define AndroidIcuLangUCharacter_WordBreak_EXTENDNUMLET 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, EXTENDNUMLET, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_CR(void);
#define AndroidIcuLangUCharacter_WordBreak_CR 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, CR, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_EXTEND(void);
#define AndroidIcuLangUCharacter_WordBreak_EXTEND 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, EXTEND, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_LF(void);
#define AndroidIcuLangUCharacter_WordBreak_LF 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, LF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_MIDNUMLET(void);
#define AndroidIcuLangUCharacter_WordBreak_MIDNUMLET 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, MIDNUMLET, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_NEWLINE(void);
#define AndroidIcuLangUCharacter_WordBreak_NEWLINE 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, NEWLINE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_REGIONAL_INDICATOR(void);
#define AndroidIcuLangUCharacter_WordBreak_REGIONAL_INDICATOR 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, REGIONAL_INDICATOR, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_HEBREW_LETTER(void);
#define AndroidIcuLangUCharacter_WordBreak_HEBREW_LETTER 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, HEBREW_LETTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_SINGLE_QUOTE(void);
#define AndroidIcuLangUCharacter_WordBreak_SINGLE_QUOTE 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, SINGLE_QUOTE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_DOUBLE_QUOTE(void);
#define AndroidIcuLangUCharacter_WordBreak_DOUBLE_QUOTE 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, DOUBLE_QUOTE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_E_BASE(void);
#define AndroidIcuLangUCharacter_WordBreak_E_BASE 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, E_BASE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_E_BASE_GAZ(void);
#define AndroidIcuLangUCharacter_WordBreak_E_BASE_GAZ 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, E_BASE_GAZ, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_E_MODIFIER(void);
#define AndroidIcuLangUCharacter_WordBreak_E_MODIFIER 19
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, E_MODIFIER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_GLUE_AFTER_ZWJ(void);
#define AndroidIcuLangUCharacter_WordBreak_GLUE_AFTER_ZWJ 20
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, GLUE_AFTER_ZWJ, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_ZWJ(void);
#define AndroidIcuLangUCharacter_WordBreak_ZWJ 21
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, ZWJ, jint)

/*!
 @brief One more than the highest normal WordBreak value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.WORD_BREAK).
 */
inline jint AndroidIcuLangUCharacter_WordBreak_get_COUNT(void);
#define AndroidIcuLangUCharacter_WordBreak_COUNT 22
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_WordBreak, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_WordBreak)

#endif

#if !defined (AndroidIcuLangUCharacter_SentenceBreak_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_SentenceBreak))
#define AndroidIcuLangUCharacter_SentenceBreak_

/*!
 @brief Sentence Break constants.
 - seealso: UProperty#SENTENCE_BREAK
 */
@protocol AndroidIcuLangUCharacter_SentenceBreak < JavaObject >

@end

@interface AndroidIcuLangUCharacter_SentenceBreak : NSObject
@property (readonly, class) jint OTHER NS_SWIFT_NAME(OTHER);
@property (readonly, class) jint ATERM NS_SWIFT_NAME(ATERM);
@property (readonly, class) jint CLOSE NS_SWIFT_NAME(CLOSE);
@property (readonly, class) jint FORMAT NS_SWIFT_NAME(FORMAT);
@property (readonly, class) jint LOWER NS_SWIFT_NAME(LOWER);
@property (readonly, class) jint NUMERIC NS_SWIFT_NAME(NUMERIC);
@property (readonly, class) jint OLETTER NS_SWIFT_NAME(OLETTER);
@property (readonly, class) jint SEP NS_SWIFT_NAME(SEP);
@property (readonly, class) jint SP NS_SWIFT_NAME(SP);
@property (readonly, class) jint STERM NS_SWIFT_NAME(STERM);
@property (readonly, class) jint UPPER NS_SWIFT_NAME(UPPER);
@property (readonly, class) jint CR NS_SWIFT_NAME(CR);
@property (readonly, class) jint EXTEND NS_SWIFT_NAME(EXTEND);
@property (readonly, class) jint LF NS_SWIFT_NAME(LF);
@property (readonly, class) jint SCONTINUE NS_SWIFT_NAME(SCONTINUE);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)OTHER;

+ (jint)ATERM;

+ (jint)CLOSE;

+ (jint)FORMAT;

+ (jint)LOWER;

+ (jint)NUMERIC;

+ (jint)OLETTER;

+ (jint)SEP;

+ (jint)SP;

+ (jint)STERM;

+ (jint)UPPER;

+ (jint)CR;

+ (jint)EXTEND;

+ (jint)LF;

+ (jint)SCONTINUE;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_SentenceBreak)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_OTHER(void);
#define AndroidIcuLangUCharacter_SentenceBreak_OTHER 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, OTHER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_ATERM(void);
#define AndroidIcuLangUCharacter_SentenceBreak_ATERM 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, ATERM, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_CLOSE(void);
#define AndroidIcuLangUCharacter_SentenceBreak_CLOSE 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, CLOSE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_FORMAT(void);
#define AndroidIcuLangUCharacter_SentenceBreak_FORMAT 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, FORMAT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_LOWER(void);
#define AndroidIcuLangUCharacter_SentenceBreak_LOWER 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, LOWER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_NUMERIC(void);
#define AndroidIcuLangUCharacter_SentenceBreak_NUMERIC 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, NUMERIC, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_OLETTER(void);
#define AndroidIcuLangUCharacter_SentenceBreak_OLETTER 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, OLETTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_SEP(void);
#define AndroidIcuLangUCharacter_SentenceBreak_SEP 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, SEP, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_SP(void);
#define AndroidIcuLangUCharacter_SentenceBreak_SP 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, SP, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_STERM(void);
#define AndroidIcuLangUCharacter_SentenceBreak_STERM 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, STERM, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_UPPER(void);
#define AndroidIcuLangUCharacter_SentenceBreak_UPPER 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, UPPER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_CR(void);
#define AndroidIcuLangUCharacter_SentenceBreak_CR 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, CR, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_EXTEND(void);
#define AndroidIcuLangUCharacter_SentenceBreak_EXTEND 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, EXTEND, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_LF(void);
#define AndroidIcuLangUCharacter_SentenceBreak_LF 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, LF, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_SCONTINUE(void);
#define AndroidIcuLangUCharacter_SentenceBreak_SCONTINUE 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, SCONTINUE, jint)

/*!
 @brief One more than the highest normal SentenceBreak value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.SENTENCE_BREAK).
 */
inline jint AndroidIcuLangUCharacter_SentenceBreak_get_COUNT(void);
#define AndroidIcuLangUCharacter_SentenceBreak_COUNT 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_SentenceBreak, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_SentenceBreak)

#endif

#if !defined (AndroidIcuLangUCharacter_LineBreak_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_LineBreak))
#define AndroidIcuLangUCharacter_LineBreak_

/*!
 @brief Line Break constants.
 - seealso: UProperty#LINE_BREAK
 */
@protocol AndroidIcuLangUCharacter_LineBreak < JavaObject >

@end

@interface AndroidIcuLangUCharacter_LineBreak : NSObject
@property (readonly, class) jint UNKNOWN NS_SWIFT_NAME(UNKNOWN);
@property (readonly, class) jint AMBIGUOUS NS_SWIFT_NAME(AMBIGUOUS);
@property (readonly, class) jint ALPHABETIC NS_SWIFT_NAME(ALPHABETIC);
@property (readonly, class) jint BREAK_BOTH NS_SWIFT_NAME(BREAK_BOTH);
@property (readonly, class) jint BREAK_AFTER NS_SWIFT_NAME(BREAK_AFTER);
@property (readonly, class) jint BREAK_BEFORE NS_SWIFT_NAME(BREAK_BEFORE);
@property (readonly, class) jint MANDATORY_BREAK NS_SWIFT_NAME(MANDATORY_BREAK);
@property (readonly, class) jint CONTINGENT_BREAK NS_SWIFT_NAME(CONTINGENT_BREAK);
@property (readonly, class) jint CLOSE_PUNCTUATION NS_SWIFT_NAME(CLOSE_PUNCTUATION);
@property (readonly, class) jint COMBINING_MARK NS_SWIFT_NAME(COMBINING_MARK);
@property (readonly, class) jint CARRIAGE_RETURN NS_SWIFT_NAME(CARRIAGE_RETURN);
@property (readonly, class) jint EXCLAMATION NS_SWIFT_NAME(EXCLAMATION);
@property (readonly, class) jint GLUE NS_SWIFT_NAME(GLUE);
@property (readonly, class) jint HYPHEN NS_SWIFT_NAME(HYPHEN);
@property (readonly, class) jint IDEOGRAPHIC NS_SWIFT_NAME(IDEOGRAPHIC);
@property (readonly, class) jint INSEPERABLE NS_SWIFT_NAME(INSEPERABLE);
@property (readonly, class) jint INSEPARABLE NS_SWIFT_NAME(INSEPARABLE);
@property (readonly, class) jint INFIX_NUMERIC NS_SWIFT_NAME(INFIX_NUMERIC);
@property (readonly, class) jint LINE_FEED NS_SWIFT_NAME(LINE_FEED);
@property (readonly, class) jint NONSTARTER NS_SWIFT_NAME(NONSTARTER);
@property (readonly, class) jint NUMERIC NS_SWIFT_NAME(NUMERIC);
@property (readonly, class) jint OPEN_PUNCTUATION NS_SWIFT_NAME(OPEN_PUNCTUATION);
@property (readonly, class) jint POSTFIX_NUMERIC NS_SWIFT_NAME(POSTFIX_NUMERIC);
@property (readonly, class) jint PREFIX_NUMERIC NS_SWIFT_NAME(PREFIX_NUMERIC);
@property (readonly, class) jint QUOTATION NS_SWIFT_NAME(QUOTATION);
@property (readonly, class) jint COMPLEX_CONTEXT NS_SWIFT_NAME(COMPLEX_CONTEXT);
@property (readonly, class) jint SURROGATE NS_SWIFT_NAME(SURROGATE);
@property (readonly, class) jint SPACE NS_SWIFT_NAME(SPACE);
@property (readonly, class) jint BREAK_SYMBOLS NS_SWIFT_NAME(BREAK_SYMBOLS);
@property (readonly, class) jint ZWSPACE NS_SWIFT_NAME(ZWSPACE);
@property (readonly, class) jint NEXT_LINE NS_SWIFT_NAME(NEXT_LINE);
@property (readonly, class) jint WORD_JOINER NS_SWIFT_NAME(WORD_JOINER);
@property (readonly, class) jint H2 NS_SWIFT_NAME(H2);
@property (readonly, class) jint H3 NS_SWIFT_NAME(H3);
@property (readonly, class) jint JL NS_SWIFT_NAME(JL);
@property (readonly, class) jint JT NS_SWIFT_NAME(JT);
@property (readonly, class) jint JV NS_SWIFT_NAME(JV);
@property (readonly, class) jint CLOSE_PARENTHESIS NS_SWIFT_NAME(CLOSE_PARENTHESIS);
@property (readonly, class) jint CONDITIONAL_JAPANESE_STARTER NS_SWIFT_NAME(CONDITIONAL_JAPANESE_STARTER);
@property (readonly, class) jint HEBREW_LETTER NS_SWIFT_NAME(HEBREW_LETTER);
@property (readonly, class) jint REGIONAL_INDICATOR NS_SWIFT_NAME(REGIONAL_INDICATOR);
@property (readonly, class) jint E_BASE NS_SWIFT_NAME(E_BASE);
@property (readonly, class) jint E_MODIFIER NS_SWIFT_NAME(E_MODIFIER);
@property (readonly, class) jint ZWJ NS_SWIFT_NAME(ZWJ);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)UNKNOWN;

+ (jint)AMBIGUOUS;

+ (jint)ALPHABETIC;

+ (jint)BREAK_BOTH;

+ (jint)BREAK_AFTER;

+ (jint)BREAK_BEFORE;

+ (jint)MANDATORY_BREAK;

+ (jint)CONTINGENT_BREAK;

+ (jint)CLOSE_PUNCTUATION;

+ (jint)COMBINING_MARK;

+ (jint)CARRIAGE_RETURN;

+ (jint)EXCLAMATION;

+ (jint)GLUE;

+ (jint)HYPHEN;

+ (jint)IDEOGRAPHIC;

+ (jint)INSEPERABLE;

+ (jint)INSEPARABLE;

+ (jint)INFIX_NUMERIC;

+ (jint)LINE_FEED;

+ (jint)NONSTARTER;

+ (jint)NUMERIC;

+ (jint)OPEN_PUNCTUATION;

+ (jint)POSTFIX_NUMERIC;

+ (jint)PREFIX_NUMERIC;

+ (jint)QUOTATION;

+ (jint)COMPLEX_CONTEXT;

+ (jint)SURROGATE;

+ (jint)SPACE;

+ (jint)BREAK_SYMBOLS;

+ (jint)ZWSPACE;

+ (jint)NEXT_LINE;

+ (jint)WORD_JOINER;

+ (jint)H2;

+ (jint)H3;

+ (jint)JL;

+ (jint)JT;

+ (jint)JV;

+ (jint)CLOSE_PARENTHESIS;

+ (jint)CONDITIONAL_JAPANESE_STARTER;

+ (jint)HEBREW_LETTER;

+ (jint)REGIONAL_INDICATOR;

+ (jint)E_BASE;

+ (jint)E_MODIFIER;

+ (jint)ZWJ;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_LineBreak)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_UNKNOWN(void);
#define AndroidIcuLangUCharacter_LineBreak_UNKNOWN 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, UNKNOWN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_AMBIGUOUS(void);
#define AndroidIcuLangUCharacter_LineBreak_AMBIGUOUS 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, AMBIGUOUS, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_ALPHABETIC(void);
#define AndroidIcuLangUCharacter_LineBreak_ALPHABETIC 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, ALPHABETIC, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_BREAK_BOTH(void);
#define AndroidIcuLangUCharacter_LineBreak_BREAK_BOTH 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, BREAK_BOTH, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_BREAK_AFTER(void);
#define AndroidIcuLangUCharacter_LineBreak_BREAK_AFTER 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, BREAK_AFTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_BREAK_BEFORE(void);
#define AndroidIcuLangUCharacter_LineBreak_BREAK_BEFORE 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, BREAK_BEFORE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_MANDATORY_BREAK(void);
#define AndroidIcuLangUCharacter_LineBreak_MANDATORY_BREAK 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, MANDATORY_BREAK, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_CONTINGENT_BREAK(void);
#define AndroidIcuLangUCharacter_LineBreak_CONTINGENT_BREAK 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, CONTINGENT_BREAK, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_CLOSE_PUNCTUATION(void);
#define AndroidIcuLangUCharacter_LineBreak_CLOSE_PUNCTUATION 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, CLOSE_PUNCTUATION, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_COMBINING_MARK(void);
#define AndroidIcuLangUCharacter_LineBreak_COMBINING_MARK 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, COMBINING_MARK, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_CARRIAGE_RETURN(void);
#define AndroidIcuLangUCharacter_LineBreak_CARRIAGE_RETURN 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, CARRIAGE_RETURN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_EXCLAMATION(void);
#define AndroidIcuLangUCharacter_LineBreak_EXCLAMATION 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, EXCLAMATION, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_GLUE(void);
#define AndroidIcuLangUCharacter_LineBreak_GLUE 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, GLUE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_HYPHEN(void);
#define AndroidIcuLangUCharacter_LineBreak_HYPHEN 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, HYPHEN, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_IDEOGRAPHIC(void);
#define AndroidIcuLangUCharacter_LineBreak_IDEOGRAPHIC 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, IDEOGRAPHIC, jint)

/*!
 - seealso: #INSEPARABLE
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_INSEPERABLE(void);
#define AndroidIcuLangUCharacter_LineBreak_INSEPERABLE 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, INSEPERABLE, jint)

/*!
 @brief Renamed from the misspelled "inseperable" in Unicode 4.0.1.
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_INSEPARABLE(void);
#define AndroidIcuLangUCharacter_LineBreak_INSEPARABLE 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, INSEPARABLE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_INFIX_NUMERIC(void);
#define AndroidIcuLangUCharacter_LineBreak_INFIX_NUMERIC 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, INFIX_NUMERIC, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_LINE_FEED(void);
#define AndroidIcuLangUCharacter_LineBreak_LINE_FEED 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, LINE_FEED, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_NONSTARTER(void);
#define AndroidIcuLangUCharacter_LineBreak_NONSTARTER 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, NONSTARTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_NUMERIC(void);
#define AndroidIcuLangUCharacter_LineBreak_NUMERIC 19
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, NUMERIC, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_OPEN_PUNCTUATION(void);
#define AndroidIcuLangUCharacter_LineBreak_OPEN_PUNCTUATION 20
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, OPEN_PUNCTUATION, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_POSTFIX_NUMERIC(void);
#define AndroidIcuLangUCharacter_LineBreak_POSTFIX_NUMERIC 21
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, POSTFIX_NUMERIC, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_PREFIX_NUMERIC(void);
#define AndroidIcuLangUCharacter_LineBreak_PREFIX_NUMERIC 22
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, PREFIX_NUMERIC, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_QUOTATION(void);
#define AndroidIcuLangUCharacter_LineBreak_QUOTATION 23
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, QUOTATION, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_COMPLEX_CONTEXT(void);
#define AndroidIcuLangUCharacter_LineBreak_COMPLEX_CONTEXT 24
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, COMPLEX_CONTEXT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_SURROGATE(void);
#define AndroidIcuLangUCharacter_LineBreak_SURROGATE 25
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, SURROGATE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_SPACE(void);
#define AndroidIcuLangUCharacter_LineBreak_SPACE 26
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, SPACE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_BREAK_SYMBOLS(void);
#define AndroidIcuLangUCharacter_LineBreak_BREAK_SYMBOLS 27
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, BREAK_SYMBOLS, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_ZWSPACE(void);
#define AndroidIcuLangUCharacter_LineBreak_ZWSPACE 28
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, ZWSPACE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_NEXT_LINE(void);
#define AndroidIcuLangUCharacter_LineBreak_NEXT_LINE 29
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, NEXT_LINE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_WORD_JOINER(void);
#define AndroidIcuLangUCharacter_LineBreak_WORD_JOINER 30
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, WORD_JOINER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_H2(void);
#define AndroidIcuLangUCharacter_LineBreak_H2 31
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, H2, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_H3(void);
#define AndroidIcuLangUCharacter_LineBreak_H3 32
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, H3, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_JL(void);
#define AndroidIcuLangUCharacter_LineBreak_JL 33
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, JL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_JT(void);
#define AndroidIcuLangUCharacter_LineBreak_JT 34
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, JT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_JV(void);
#define AndroidIcuLangUCharacter_LineBreak_JV 35
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, JV, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_CLOSE_PARENTHESIS(void);
#define AndroidIcuLangUCharacter_LineBreak_CLOSE_PARENTHESIS 36
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, CLOSE_PARENTHESIS, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_CONDITIONAL_JAPANESE_STARTER(void);
#define AndroidIcuLangUCharacter_LineBreak_CONDITIONAL_JAPANESE_STARTER 37
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, CONDITIONAL_JAPANESE_STARTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_HEBREW_LETTER(void);
#define AndroidIcuLangUCharacter_LineBreak_HEBREW_LETTER 38
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, HEBREW_LETTER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_REGIONAL_INDICATOR(void);
#define AndroidIcuLangUCharacter_LineBreak_REGIONAL_INDICATOR 39
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, REGIONAL_INDICATOR, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_E_BASE(void);
#define AndroidIcuLangUCharacter_LineBreak_E_BASE 40
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, E_BASE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_E_MODIFIER(void);
#define AndroidIcuLangUCharacter_LineBreak_E_MODIFIER 41
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, E_MODIFIER, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_ZWJ(void);
#define AndroidIcuLangUCharacter_LineBreak_ZWJ 42
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, ZWJ, jint)

/*!
 @brief One more than the highest normal LineBreak value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.LINE_BREAK).
 */
inline jint AndroidIcuLangUCharacter_LineBreak_get_COUNT(void);
#define AndroidIcuLangUCharacter_LineBreak_COUNT 43
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_LineBreak, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_LineBreak)

#endif

#if !defined (AndroidIcuLangUCharacter_NumericType_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_NumericType))
#define AndroidIcuLangUCharacter_NumericType_

/*!
 @brief Numeric Type constants.
 - seealso: UProperty#NUMERIC_TYPE
 */
@protocol AndroidIcuLangUCharacter_NumericType < JavaObject >

@end

@interface AndroidIcuLangUCharacter_NumericType : NSObject
@property (readonly, class) jint NONE NS_SWIFT_NAME(NONE);
@property (readonly, class) jint DECIMAL NS_SWIFT_NAME(DECIMAL);
@property (readonly, class) jint DIGIT NS_SWIFT_NAME(DIGIT);
@property (readonly, class) jint NUMERIC NS_SWIFT_NAME(NUMERIC);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)NONE;

+ (jint)DECIMAL;

+ (jint)DIGIT;

+ (jint)NUMERIC;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_NumericType)

/*!
 */
inline jint AndroidIcuLangUCharacter_NumericType_get_NONE(void);
#define AndroidIcuLangUCharacter_NumericType_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_NumericType, NONE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_NumericType_get_DECIMAL(void);
#define AndroidIcuLangUCharacter_NumericType_DECIMAL 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_NumericType, DECIMAL, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_NumericType_get_DIGIT(void);
#define AndroidIcuLangUCharacter_NumericType_DIGIT 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_NumericType, DIGIT, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_NumericType_get_NUMERIC(void);
#define AndroidIcuLangUCharacter_NumericType_NUMERIC 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_NumericType, NUMERIC, jint)

/*!
 @brief One more than the highest normal NumericType value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.NUMERIC_TYPE).
 */
inline jint AndroidIcuLangUCharacter_NumericType_get_COUNT(void);
#define AndroidIcuLangUCharacter_NumericType_COUNT 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_NumericType, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_NumericType)

#endif

#if !defined (AndroidIcuLangUCharacter_HangulSyllableType_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_HangulSyllableType))
#define AndroidIcuLangUCharacter_HangulSyllableType_

/*!
 @brief Hangul Syllable Type constants.
 - seealso: UProperty#HANGUL_SYLLABLE_TYPE
 */
@protocol AndroidIcuLangUCharacter_HangulSyllableType < JavaObject >

@end

@interface AndroidIcuLangUCharacter_HangulSyllableType : NSObject
@property (readonly, class) jint NOT_APPLICABLE NS_SWIFT_NAME(NOT_APPLICABLE);
@property (readonly, class) jint LEADING_JAMO NS_SWIFT_NAME(LEADING_JAMO);
@property (readonly, class) jint VOWEL_JAMO NS_SWIFT_NAME(VOWEL_JAMO);
@property (readonly, class) jint TRAILING_JAMO NS_SWIFT_NAME(TRAILING_JAMO);
@property (readonly, class) jint LV_SYLLABLE NS_SWIFT_NAME(LV_SYLLABLE);
@property (readonly, class) jint LVT_SYLLABLE NS_SWIFT_NAME(LVT_SYLLABLE);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)NOT_APPLICABLE;

+ (jint)LEADING_JAMO;

+ (jint)VOWEL_JAMO;

+ (jint)TRAILING_JAMO;

+ (jint)LV_SYLLABLE;

+ (jint)LVT_SYLLABLE;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_HangulSyllableType)

/*!
 */
inline jint AndroidIcuLangUCharacter_HangulSyllableType_get_NOT_APPLICABLE(void);
#define AndroidIcuLangUCharacter_HangulSyllableType_NOT_APPLICABLE 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_HangulSyllableType, NOT_APPLICABLE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_HangulSyllableType_get_LEADING_JAMO(void);
#define AndroidIcuLangUCharacter_HangulSyllableType_LEADING_JAMO 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_HangulSyllableType, LEADING_JAMO, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_HangulSyllableType_get_VOWEL_JAMO(void);
#define AndroidIcuLangUCharacter_HangulSyllableType_VOWEL_JAMO 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_HangulSyllableType, VOWEL_JAMO, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_HangulSyllableType_get_TRAILING_JAMO(void);
#define AndroidIcuLangUCharacter_HangulSyllableType_TRAILING_JAMO 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_HangulSyllableType, TRAILING_JAMO, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_HangulSyllableType_get_LV_SYLLABLE(void);
#define AndroidIcuLangUCharacter_HangulSyllableType_LV_SYLLABLE 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_HangulSyllableType, LV_SYLLABLE, jint)

/*!
 */
inline jint AndroidIcuLangUCharacter_HangulSyllableType_get_LVT_SYLLABLE(void);
#define AndroidIcuLangUCharacter_HangulSyllableType_LVT_SYLLABLE 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_HangulSyllableType, LVT_SYLLABLE, jint)

/*!
 @brief One more than the highest normal HangulSyllableType value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.HANGUL_SYLLABLE_TYPE).
 */
inline jint AndroidIcuLangUCharacter_HangulSyllableType_get_COUNT(void);
#define AndroidIcuLangUCharacter_HangulSyllableType_COUNT 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_HangulSyllableType, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_HangulSyllableType)

#endif

#if !defined (AndroidIcuLangUCharacter_BidiPairedBracketType_) && (INCLUDE_ALL_AndroidIcuLangUCharacter || defined(INCLUDE_AndroidIcuLangUCharacter_BidiPairedBracketType))
#define AndroidIcuLangUCharacter_BidiPairedBracketType_

/*!
 @brief Bidi Paired Bracket Type constants.
 - seealso: UProperty#BIDI_PAIRED_BRACKET_TYPE
 */
@protocol AndroidIcuLangUCharacter_BidiPairedBracketType < JavaObject >

@end

@interface AndroidIcuLangUCharacter_BidiPairedBracketType : NSObject
@property (readonly, class) jint NONE NS_SWIFT_NAME(NONE);
@property (readonly, class) jint OPEN NS_SWIFT_NAME(OPEN);
@property (readonly, class) jint CLOSE NS_SWIFT_NAME(CLOSE);
@property (readonly, class) jint COUNT NS_SWIFT_NAME(COUNT);

+ (jint)NONE;

+ (jint)OPEN;

+ (jint)CLOSE;

+ (jint)COUNT;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUCharacter_BidiPairedBracketType)

/*!
 @brief Not a paired bracket.
 */
inline jint AndroidIcuLangUCharacter_BidiPairedBracketType_get_NONE(void);
#define AndroidIcuLangUCharacter_BidiPairedBracketType_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_BidiPairedBracketType, NONE, jint)

/*!
 @brief Open paired bracket.
 */
inline jint AndroidIcuLangUCharacter_BidiPairedBracketType_get_OPEN(void);
#define AndroidIcuLangUCharacter_BidiPairedBracketType_OPEN 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_BidiPairedBracketType, OPEN, jint)

/*!
 @brief Close paired bracket.
 */
inline jint AndroidIcuLangUCharacter_BidiPairedBracketType_get_CLOSE(void);
#define AndroidIcuLangUCharacter_BidiPairedBracketType_CLOSE 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_BidiPairedBracketType, CLOSE, jint)

/*!
 @brief One more than the highest normal BidiPairedBracketType value.
 The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.BIDI_PAIRED_BRACKET_TYPE).
 */
inline jint AndroidIcuLangUCharacter_BidiPairedBracketType_get_COUNT(void);
#define AndroidIcuLangUCharacter_BidiPairedBracketType_COUNT 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUCharacter_BidiPairedBracketType, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUCharacter_BidiPairedBracketType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_AndroidIcuLangUCharacter")
