//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/XPath.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathXPath")
#ifdef RESTRICT_OrgApacheXpathXPath
#define INCLUDE_ALL_OrgApacheXpathXPath 0
#else
#define INCLUDE_ALL_OrgApacheXpathXPath 1
#endif
#undef RESTRICT_OrgApacheXpathXPath

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXpathXPath_) && (INCLUDE_ALL_OrgApacheXpathXPath || defined(INCLUDE_OrgApacheXpathXPath))
#define OrgApacheXpathXPath_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_OrgApacheXpathExpressionOwner 1
#define INCLUDE_OrgApacheXpathExpressionOwner 1
#include "org/apache/xpath/ExpressionOwner.h"

@class IOSObjectArray;
@class JavaUtilVector;
@class OrgApacheXpathCompilerFunctionTable;
@class OrgApacheXpathExpression;
@class OrgApacheXpathObjectsXObject;
@class OrgApacheXpathXPathContext;
@class OrgApacheXpathXPathVisitor;
@protocol JavaxXmlTransformErrorListener;
@protocol JavaxXmlTransformSourceLocator;
@protocol OrgApacheXmlUtilsPrefixResolver;
@protocol OrgW3cDomNode;

/*!
 @brief The XPath class wraps an expression object and provides general services 
  for execution of that expression.
 */
@interface OrgApacheXpathXPath : NSObject < JavaIoSerializable, OrgApacheXpathExpressionOwner > {
 @public
  /*!
   @brief The pattern string, mainly kept around for diagnostic purposes.
   */
  NSString *m_patternString_;
}
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);
@property (readonly, class) jint SELECT NS_SWIFT_NAME(SELECT);
@property (readonly, class) jint MATCH NS_SWIFT_NAME(MATCH);
@property (readonly, class) jdouble MATCH_SCORE_NONE NS_SWIFT_NAME(MATCH_SCORE_NONE);
@property (readonly, class) jdouble MATCH_SCORE_QNAME NS_SWIFT_NAME(MATCH_SCORE_QNAME);
@property (readonly, class) jdouble MATCH_SCORE_NSWILD NS_SWIFT_NAME(MATCH_SCORE_NSWILD);
@property (readonly, class) jdouble MATCH_SCORE_NODETEST NS_SWIFT_NAME(MATCH_SCORE_NODETEST);
@property (readonly, class) jdouble MATCH_SCORE_OTHER NS_SWIFT_NAME(MATCH_SCORE_OTHER);

+ (jlong)serialVersionUID;

+ (jint)SELECT;

+ (jint)MATCH;

+ (jdouble)MATCH_SCORE_NONE;

+ (jdouble)MATCH_SCORE_QNAME;

+ (jdouble)MATCH_SCORE_NSWILD;

+ (jdouble)MATCH_SCORE_NODETEST;

+ (jdouble)MATCH_SCORE_OTHER;

#pragma mark Public

/*!
 @brief Construct an XPath object.
 @param expr The Expression object.
 @throw javax.xml.transform.TransformerExceptionif syntax or other error.
 */
- (instancetype __nonnull)initWithOrgApacheXpathExpression:(OrgApacheXpathExpression *)expr;

/*!
 @brief Construct an XPath object.
 (Needs review -sc) This method initializes an XPathParser/
  Compiler and compiles the expression.
 @param exprString The XPath expression.
 @param locator The location of the expression, may be null.
 @param prefixResolver A prefix resolver to use to resolve prefixes to                         namespace URIs.
 @param type one of <code>SELECT</code>  or <code>MATCH</code> .
 @throw javax.xml.transform.TransformerExceptionif syntax or other error.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)exprString
        withJavaxXmlTransformSourceLocator:(id<JavaxXmlTransformSourceLocator>)locator
       withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)prefixResolver
                                   withInt:(jint)type;

/*!
 @brief Construct an XPath object.
 (Needs review -sc) This method initializes an XPathParser/
  Compiler and compiles the expression.
 @param exprString The XPath expression.
 @param locator The location of the expression, may be null.
 @param prefixResolver A prefix resolver to use to resolve prefixes to                         namespace URIs.
 @param type one of <code>SELECT</code>  or <code>MATCH</code> .
 @param errorListener The error listener, or null if default should be used.
 @throw javax.xml.transform.TransformerExceptionif syntax or other error.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)exprString
        withJavaxXmlTransformSourceLocator:(id<JavaxXmlTransformSourceLocator>)locator
       withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)prefixResolver
                                   withInt:(jint)type
        withJavaxXmlTransformErrorListener:(id<JavaxXmlTransformErrorListener>)errorListener;

/*!
 @brief Construct an XPath object.
 (Needs review -sc) This method initializes an XPathParser/
  Compiler and compiles the expression.
 @param exprString The XPath expression.
 @param locator The location of the expression, may be null.
 @param prefixResolver A prefix resolver to use to resolve prefixes to                         namespace URIs.
 @param type one of <code>SELECT</code>  or <code>MATCH</code> .
 @param errorListener The error listener, or null if default should be used.
 @throw javax.xml.transform.TransformerExceptionif syntax or other error.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)exprString
        withJavaxXmlTransformSourceLocator:(id<JavaxXmlTransformSourceLocator>)locator
       withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)prefixResolver
                                   withInt:(jint)type
        withJavaxXmlTransformErrorListener:(id<JavaxXmlTransformErrorListener>)errorListener
   withOrgApacheXpathCompilerFunctionTable:(OrgApacheXpathCompilerFunctionTable *)aTable;

/*!
 @brief Tell the user of an assertion error, and probably throw an
  exception.
 @param b If false, a runtime exception will be thrown.
 @param msg The assertion message, which should be informative.
 @throw RuntimeExceptionif the b argument is false.
 */
- (void)assertionWithBoolean:(jboolean)b
                withNSString:(NSString *)msg;

/*!
 @brief Given an expression and a context, evaluate the XPath
  and return the result.
 @param xctxt The execution context.
 @param contextNode The node that "." expresses.
 @param namespaceContext The context in which namespaces in the  XPath are supposed to be expanded.
 @throw TransformerExceptionthrown if the active ProblemListener decides
  the error condition is severe enough to halt processing.
 @throw javax.xml.transform.TransformerException
 */
- (jboolean)bool__WithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                         withInt:(jint)contextNode
             withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)namespaceContext;

/*!
 @brief This will traverse the heararchy, calling the visitor for 
  each member.If the called visitor method returns 
  false, the subtree should not be called.
 @param owner The owner of the visitor, where that path may be                rewritten if needed.
 @param visitor The visitor whose appropriate method will be called.
 */
- (void)callVisitorsWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                       withOrgApacheXpathXPathVisitor:(OrgApacheXpathXPathVisitor *)visitor;

/*!
 @brief Tell the user of an error, and probably throw an
  exception.
 @param xctxt The XPath runtime context.
 @param sourceNode Not used.
 @param msg An error msgkey that corresponds to one of the constants found              in 
 <code>org.apache.xpath.res.XPATHErrorResources</code> , which is              a key for a format string.
 @param args An array of arguments represented in the format string, which               may be null.
 @throw TransformerExceptionif the current ErrorListoner determines to 
                               throw an exception.
 */
- (void)errorWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                    withInt:(jint)sourceNode
                               withNSString:(NSString *)msg
                          withNSObjectArray:(IOSObjectArray *)args;

/*!
 @brief Given an expression and a context, evaluate the XPath
  and return the result.
 @param xctxt The execution context.
 @param contextNode The node that "." expresses.
 @param namespaceContext The context in which namespaces in the  XPath are supposed to be expanded.
 @throw TransformerExceptionthrown if the active ProblemListener decides
  the error condition is severe enough to halt processing.
 @throw javax.xml.transform.TransformerException
 */
- (OrgApacheXpathObjectsXObject *)executeWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                                                withInt:(jint)contextNode
                                    withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)namespaceContext;

/*!
 @brief Given an expression and a context, evaluate the XPath
  and return the result.
 @param xctxt The execution context.
 @param contextNode The node that "." expresses.
 @param namespaceContext The context in which namespaces in the  XPath are supposed to be expanded.
 @return The result of the XPath or null if callbacks are used.
 @throw TransformerExceptionthrown if
  the error condition is severe enough to halt processing.
 @throw javax.xml.transform.TransformerException
 */
- (OrgApacheXpathObjectsXObject *)executeWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                                      withOrgW3cDomNode:(id<OrgW3cDomNode>)contextNode
                                    withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)namespaceContext;

/*!
 @brief This function is used to fixup variables from QNames to stack frame 
  indexes at stylesheet build time.
 @param vars List of QNames that correspond to variables.  This list   should be searched backwards for the first qualified name that 
   corresponds to the variable reference qname.  The position of the 
   QName in the vector from the start of the vector will be its position 
   in the stack frame (but variables above the globalsTop value will need 
   to be offset to the current stack frame).
 */
- (void)fixupVariablesWithJavaUtilVector:(JavaUtilVector *)vars
                                 withInt:(jint)globalsSize;

/*!
 @brief Get the raw Expression object that this class wraps.
 @return the raw Expression object, which should not normally be null.
 */
- (OrgApacheXpathExpression *)getExpression;

/*!
 @brief Get the SourceLocator on the expression object.
 @return the SourceLocator on the expression object, which may be null.
 */
- (id<JavaxXmlTransformSourceLocator>)getLocator;

/*!
 @brief Get the match score of the given node.
 @param xctxt XPath runtime context.
 @param context The current source tree context node.
 @return score, one of <code>MATCH_SCORE_NODETEST</code>,
  <code>MATCH_SCORE_NONE</code>, <code>MATCH_SCORE_OTHER</code>, 
  or <code>MATCH_SCORE_QNAME</code>.
 @throw javax.xml.transform.TransformerException
 */
- (jdouble)getMatchScoreWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                               withInt:(jint)context;

/*!
 @brief Return the XPath string associated with this object.
 @return the XPath string associated with this object.
 */
- (NSString *)getPatternString;

/*!
 @brief Set the raw expression object for this object.
 @param exp the raw Expression object, which should not normally be null.
 */
- (void)setExpressionWithOrgApacheXpathExpression:(OrgApacheXpathExpression *)exp;

/*!
 @brief Warn the user of an problem.
 @param xctxt The XPath runtime context.
 @param sourceNode Not used.
 @param msg An error msgkey that corresponds to one of the constants found              in 
 <code>org.apache.xpath.res.XPATHErrorResources</code> , which is              a key for a format string.
 @param args An array of arguments represented in the format string, which               may be null.
 @throw TransformerExceptionif the current ErrorListoner determines to 
                               throw an exception.
 */
- (void)warnWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                   withInt:(jint)sourceNode
                              withNSString:(NSString *)msg
                         withNSObjectArray:(IOSObjectArray *)args;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathXPath)

J2OBJC_FIELD_SETTER(OrgApacheXpathXPath, m_patternString_, NSString *)

inline jlong OrgApacheXpathXPath_get_serialVersionUID(void);
#define OrgApacheXpathXPath_serialVersionUID 3976493477939110553LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, serialVersionUID, jlong)

/*!
 @brief Represents a select type expression.
 */
inline jint OrgApacheXpathXPath_get_SELECT(void);
#define OrgApacheXpathXPath_SELECT 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, SELECT, jint)

/*!
 @brief Represents a match type expression.
 */
inline jint OrgApacheXpathXPath_get_MATCH(void);
#define OrgApacheXpathXPath_MATCH 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, MATCH, jint)

/*!
 @brief The match score if no match is made.
 */
inline jdouble OrgApacheXpathXPath_get_MATCH_SCORE_NONE(void);
#define OrgApacheXpathXPath_MATCH_SCORE_NONE -INFINITY
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, MATCH_SCORE_NONE, jdouble)

/*!
 @brief The match score if the pattern has the form
  of a QName optionally preceded by an @@ character.
 */
inline jdouble OrgApacheXpathXPath_get_MATCH_SCORE_QNAME(void);
#define OrgApacheXpathXPath_MATCH_SCORE_QNAME 0.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, MATCH_SCORE_QNAME, jdouble)

/*!
 @brief The match score if the pattern pattern has the form NCName:*.
 */
inline jdouble OrgApacheXpathXPath_get_MATCH_SCORE_NSWILD(void);
#define OrgApacheXpathXPath_MATCH_SCORE_NSWILD -0.25
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, MATCH_SCORE_NSWILD, jdouble)

/*!
 @brief The match score if the pattern consists of just a NodeTest.
 */
inline jdouble OrgApacheXpathXPath_get_MATCH_SCORE_NODETEST(void);
#define OrgApacheXpathXPath_MATCH_SCORE_NODETEST -0.5
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, MATCH_SCORE_NODETEST, jdouble)

/*!
 @brief The match score if the pattern consists of something
  other than just a NodeTest or just a qname.
 */
inline jdouble OrgApacheXpathXPath_get_MATCH_SCORE_OTHER(void);
#define OrgApacheXpathXPath_MATCH_SCORE_OTHER 0.5
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPath, MATCH_SCORE_OTHER, jdouble)

FOUNDATION_EXPORT void OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_withJavaxXmlTransformErrorListener_(OrgApacheXpathXPath *self, NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type, id<JavaxXmlTransformErrorListener> errorListener);

FOUNDATION_EXPORT OrgApacheXpathXPath *new_OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_withJavaxXmlTransformErrorListener_(NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type, id<JavaxXmlTransformErrorListener> errorListener) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPath *create_OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_withJavaxXmlTransformErrorListener_(NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type, id<JavaxXmlTransformErrorListener> errorListener);

FOUNDATION_EXPORT void OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_withJavaxXmlTransformErrorListener_withOrgApacheXpathCompilerFunctionTable_(OrgApacheXpathXPath *self, NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type, id<JavaxXmlTransformErrorListener> errorListener, OrgApacheXpathCompilerFunctionTable *aTable);

FOUNDATION_EXPORT OrgApacheXpathXPath *new_OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_withJavaxXmlTransformErrorListener_withOrgApacheXpathCompilerFunctionTable_(NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type, id<JavaxXmlTransformErrorListener> errorListener, OrgApacheXpathCompilerFunctionTable *aTable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPath *create_OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_withJavaxXmlTransformErrorListener_withOrgApacheXpathCompilerFunctionTable_(NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type, id<JavaxXmlTransformErrorListener> errorListener, OrgApacheXpathCompilerFunctionTable *aTable);

FOUNDATION_EXPORT void OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_(OrgApacheXpathXPath *self, NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type);

FOUNDATION_EXPORT OrgApacheXpathXPath *new_OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_(NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPath *create_OrgApacheXpathXPath_initWithNSString_withJavaxXmlTransformSourceLocator_withOrgApacheXmlUtilsPrefixResolver_withInt_(NSString *exprString, id<JavaxXmlTransformSourceLocator> locator, id<OrgApacheXmlUtilsPrefixResolver> prefixResolver, jint type);

FOUNDATION_EXPORT void OrgApacheXpathXPath_initWithOrgApacheXpathExpression_(OrgApacheXpathXPath *self, OrgApacheXpathExpression *expr);

FOUNDATION_EXPORT OrgApacheXpathXPath *new_OrgApacheXpathXPath_initWithOrgApacheXpathExpression_(OrgApacheXpathExpression *expr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPath *create_OrgApacheXpathXPath_initWithOrgApacheXpathExpression_(OrgApacheXpathExpression *expr);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathXPath)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathXPath")
