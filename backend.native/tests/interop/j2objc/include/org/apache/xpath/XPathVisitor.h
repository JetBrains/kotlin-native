//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/XPathVisitor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathXPathVisitor")
#ifdef RESTRICT_OrgApacheXpathXPathVisitor
#define INCLUDE_ALL_OrgApacheXpathXPathVisitor 0
#else
#define INCLUDE_ALL_OrgApacheXpathXPathVisitor 1
#endif
#undef RESTRICT_OrgApacheXpathXPathVisitor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXpathXPathVisitor_) && (INCLUDE_ALL_OrgApacheXpathXPathVisitor || defined(INCLUDE_OrgApacheXpathXPathVisitor))
#define OrgApacheXpathXPathVisitor_

@class OrgApacheXpathAxesLocPathIterator;
@class OrgApacheXpathAxesUnionPathIterator;
@class OrgApacheXpathExpression;
@class OrgApacheXpathFunctionsFunction;
@class OrgApacheXpathObjectsXNumber;
@class OrgApacheXpathObjectsXString;
@class OrgApacheXpathOperationsOperation;
@class OrgApacheXpathOperationsUnaryOperation;
@class OrgApacheXpathOperationsVariable;
@class OrgApacheXpathPatternsNodeTest;
@class OrgApacheXpathPatternsStepPattern;
@class OrgApacheXpathPatternsUnionPattern;
@protocol OrgApacheXpathExpressionOwner;

/*!
 @brief A derivation from this class can be passed to a class that implements 
  the XPathVisitable interface, to have the appropriate method called 
  for each component of the XPath.Aside from possible other uses, the 
  main intention is to provide a reasonable means to perform expression 
  rewriting.
 <p>Each method has the form  
 <code>boolean visitComponentType(ExpressionOwner owner, ComponentType compType)</code>. 
  The ExpressionOwner argument is the owner of the component, and can 
  be used to reset the expression for rewriting.  If a method returns 
  false, the sub hierarchy will not be traversed.</p>
   
 <p>This class is meant to be a base class that will be derived by concrete classes, 
  and doesn't much except return true for each method.</p>
 */
@interface OrgApacheXpathXPathVisitor : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Visit a binary operation.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param op The operation object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitBinaryOperationWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                            withOrgApacheXpathOperationsOperation:(OrgApacheXpathOperationsOperation *)op;

/*!
 @brief Visit a function.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param func The function reference object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitFunctionWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                       withOrgApacheXpathFunctionsFunction:(OrgApacheXpathFunctionsFunction *)func;

/*!
 @brief Visit a LocationPath.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param path The LocationPath object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitLocationPathWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                         withOrgApacheXpathAxesLocPathIterator:(OrgApacheXpathAxesLocPathIterator *)path;

/*!
 @brief Visit a match pattern.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param pattern The match pattern object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitMatchPatternWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                         withOrgApacheXpathPatternsStepPattern:(OrgApacheXpathPatternsStepPattern *)pattern;

/*!
 @brief Visit a number literal.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param num The number literal object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitNumberLiteralWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                               withOrgApacheXpathObjectsXNumber:(OrgApacheXpathObjectsXNumber *)num;

/*!
 @brief Visit a predicate within a location path.Note that there isn't a 
  proper unique component for predicates, and that the expression will 
  be called also for whatever type Expression is.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param pred The predicate object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitPredicateWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                               withOrgApacheXpathExpression:(OrgApacheXpathExpression *)pred;

/*!
 @brief Visit a step within a location path.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param step The Step object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitStepWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                    withOrgApacheXpathPatternsNodeTest:(OrgApacheXpathPatternsNodeTest *)step;

/*!
 @brief Visit a string literal.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param str The string literal object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitStringLiteralWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                               withOrgApacheXpathObjectsXString:(OrgApacheXpathObjectsXString *)str;

/*!
 @brief Visit a unary operation.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param op The operation object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitUnaryOperationWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                      withOrgApacheXpathOperationsUnaryOperation:(OrgApacheXpathOperationsUnaryOperation *)op;

/*!
 @brief Visit a UnionPath.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param path The UnionPath object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitUnionPathWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                    withOrgApacheXpathAxesUnionPathIterator:(OrgApacheXpathAxesUnionPathIterator *)path;

/*!
 @brief Visit a union pattern.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param pattern The union pattern object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitUnionPatternWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                        withOrgApacheXpathPatternsUnionPattern:(OrgApacheXpathPatternsUnionPattern *)pattern;

/*!
 @brief Visit a variable reference.
 @param owner The owner of the expression, to which the expression can                be reset if rewriting takes place.
 @param var The variable reference object.
 @return true if the sub expressions should be traversed.
 */
- (jboolean)visitVariableRefWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                         withOrgApacheXpathOperationsVariable:(OrgApacheXpathOperationsVariable *)var;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathXPathVisitor)

FOUNDATION_EXPORT void OrgApacheXpathXPathVisitor_init(OrgApacheXpathXPathVisitor *self);

FOUNDATION_EXPORT OrgApacheXpathXPathVisitor *new_OrgApacheXpathXPathVisitor_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPathVisitor *create_OrgApacheXpathXPathVisitor_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathXPathVisitor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathXPathVisitor")
