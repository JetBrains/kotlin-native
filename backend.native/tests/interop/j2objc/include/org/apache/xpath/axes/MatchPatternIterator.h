//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/MatchPatternIterator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator")
#ifdef RESTRICT_OrgApacheXpathAxesMatchPatternIterator
#define INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator 1
#endif
#undef RESTRICT_OrgApacheXpathAxesMatchPatternIterator

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXpathAxesMatchPatternIterator_) && (INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator || defined(INCLUDE_OrgApacheXpathAxesMatchPatternIterator))
#define OrgApacheXpathAxesMatchPatternIterator_

#define RESTRICT_OrgApacheXpathAxesLocPathIterator 1
#define INCLUDE_OrgApacheXpathAxesLocPathIterator 1
#include "org/apache/xpath/axes/LocPathIterator.h"

@class OrgApacheXmlDtmDTMAxisTraverser;
@class OrgApacheXpathCompilerCompiler;
@class OrgApacheXpathPatternsStepPattern;
@class OrgApacheXpathXPathContext;
@protocol OrgApacheXmlUtilsPrefixResolver;

/*!
 @brief This class treats a  
 <a href="http://www.w3.org/TR/xpath#location-paths">LocationPath</a> as a 
  filtered iteration over the tree, evaluating each node in a super axis 
  traversal against the LocationPath interpreted as a match pattern.This 
  class is useful to find nodes in document order that are complex paths 
  whose steps probably criss-cross each other.
 */
@interface OrgApacheXpathAxesMatchPatternIterator : OrgApacheXpathAxesLocPathIterator {
 @public
  /*!
   @brief This is the select pattern, translated into a match pattern.
   */
  OrgApacheXpathPatternsStepPattern *m_pattern_;
  /*!
   @brief The traversal axis from where the nodes will be filtered.
   */
  jint m_superAxis_;
  /*!
   @brief The DTM inner traversal class, that corresponds to the super axis.
   */
  OrgApacheXmlDtmDTMAxisTraverser *m_traverser_;
}
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

/*!
 @brief Test whether a specified node is visible in the logical view of a
  TreeWalker or NodeIterator.This function will be called by the
  implementation of TreeWalker and NodeIterator; it is not intended to
  be called directly from user code.
 @param n The node to check to see if it passes the filter or not.
 @return a constant to determine whether the node is accepted,
    rejected, or skipped, as defined  above .
 */
- (jshort)acceptNodeWithInt:(jint)n
withOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

/*!
 @brief Detaches the iterator from the set which it iterated over, releasing
  any computational resources and placing the iterator in the INVALID
  state.After<code>detach</code> has been invoked, calls to 
 <code>nextNode</code> or<code>previousNode</code> will raise the
  exception INVALID_STATE_ERR.
 */
- (void)detach;

/*!
 @brief Returns the next node in the set and advances the position of the
  iterator in the set.After a NodeIterator is created, the first call
  to nextNode() returns the first node in the set.
 @return The next <code>Node</code> in the set being iterated over, or
    <code>null</code> if there are no more members in that set.
 */
- (jint)nextNode;

/*!
 @brief Initialize the context values for this expression
  after it is cloned.
 @param context The XPath runtime context for this  transformation.
 */
- (void)setRootWithInt:(jint)context
                withId:(id)environment;

#pragma mark Protected

/*!
 @brief Get the next node via getNextXXX.Bottlenecked for derived class override.
 @return The next node on the axis, or DTM.NULL.
 */
- (jint)getNextNode;

#pragma mark Package-Private

/*!
 @brief Create a LocPathIterator object, including creation
  of step walkers from the opcode list, and call back
  into the Compiler to create predicate expressions.
 @param compiler The Compiler which is creating  this expression.
 @param opPos The position of this iterator in the  opcode list from the compiler.
 @param analysis Analysis bits that give general information about the   LocationPath.
 @throw javax.xml.transform.TransformerException
 */
- (instancetype __nonnull)initWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                         withInt:(jint)opPos
                                                         withInt:(jint)analysis;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)arg0
                                                         withInt:(jint)arg1
                                                         withInt:(jint)arg2
                                                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesMatchPatternIterator)

J2OBJC_FIELD_SETTER(OrgApacheXpathAxesMatchPatternIterator, m_pattern_, OrgApacheXpathPatternsStepPattern *)
J2OBJC_FIELD_SETTER(OrgApacheXpathAxesMatchPatternIterator, m_traverser_, OrgApacheXmlDtmDTMAxisTraverser *)

inline jlong OrgApacheXpathAxesMatchPatternIterator_get_serialVersionUID(void);
#define OrgApacheXpathAxesMatchPatternIterator_serialVersionUID -5201153767396296474LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesMatchPatternIterator, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXpathAxesMatchPatternIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathAxesMatchPatternIterator *self, OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis);

FOUNDATION_EXPORT OrgApacheXpathAxesMatchPatternIterator *new_OrgApacheXpathAxesMatchPatternIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesMatchPatternIterator *create_OrgApacheXpathAxesMatchPatternIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesMatchPatternIterator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator")
