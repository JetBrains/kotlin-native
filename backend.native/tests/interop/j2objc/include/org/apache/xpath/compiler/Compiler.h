//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/compiler/Compiler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathCompilerCompiler")
#ifdef RESTRICT_OrgApacheXpathCompilerCompiler
#define INCLUDE_ALL_OrgApacheXpathCompilerCompiler 0
#else
#define INCLUDE_ALL_OrgApacheXpathCompilerCompiler 1
#endif
#undef RESTRICT_OrgApacheXpathCompilerCompiler

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXpathCompilerCompiler_) && (INCLUDE_ALL_OrgApacheXpathCompilerCompiler || defined(INCLUDE_OrgApacheXpathCompilerCompiler))
#define OrgApacheXpathCompilerCompiler_

#define RESTRICT_OrgApacheXpathCompilerOpMap 1
#define INCLUDE_OrgApacheXpathCompilerOpMap 1
#include "org/apache/xpath/compiler/OpMap.h"

@class IOSObjectArray;
@class OrgApacheXpathCompilerFunctionTable;
@class OrgApacheXpathExpression;
@class OrgApacheXpathPatternsStepPattern;
@protocol JavaxXmlTransformErrorListener;
@protocol JavaxXmlTransformSourceLocator;
@protocol OrgApacheXmlUtilsPrefixResolver;

/*!
 @brief An instance of this class compiles an XPath string expression into 
  a Expression object.This class compiles the string into a sequence 
  of operation codes (op map) and then builds from that into an Expression 
  tree.
 */
@interface OrgApacheXpathCompilerCompiler : OrgApacheXpathCompilerOpMap {
 @public
  /*!
   @brief The error listener where errors will be sent.If this is null, errors 
   and warnings will be sent to System.err.
   May be null.
   */
  id<JavaxXmlTransformErrorListener> m_errorHandler_;
  /*!
   @brief The source locator for the expression being compiled.May be null.
   */
  id<JavaxXmlTransformSourceLocator> m_locator_;
}

#pragma mark Public

/*!
 @brief Construct a Compiler instance that has a null error listener and a 
  null source locator.
 */
- (instancetype __nonnull)init;

/*!
 @brief Construct a Compiler object with a specific ErrorListener and 
  SourceLocator where the expression is located.
 @param errorHandler Error listener where messages will be sent, or null                       if messages should be sent to System err.
 @param locator The location object where the expression lives, which                  may be null, but which, if not null, must be valid over 
                  the long haul, in other words, it will not be cloned.
 @param fTable The FunctionTable object where the xpath build-in                  functions are stored.
 */
- (instancetype __nonnull)initWithJavaxXmlTransformErrorListener:(id<JavaxXmlTransformErrorListener>)errorHandler
                              withJavaxXmlTransformSourceLocator:(id<JavaxXmlTransformSourceLocator>)locator
                         withOrgApacheXpathCompilerFunctionTable:(OrgApacheXpathCompilerFunctionTable *)fTable;

/*!
 @brief Tell the user of an assertion error, and probably throw an
  exception.
 @param b If false, a runtime exception will be thrown.
 @param msg The assertion message, which should be informative.
 @throw RuntimeExceptionif the b argument is false.
 */
- (void)assertionWithBoolean:(jboolean)b
                withNSString:(NSString *)msg;

/*!
 @brief Execute the XPath object from a given opcode position.
 @param opPos The current position in the xpath.m_opMap array.
 @return The result of the XPath.
 @throw TransformerExceptionif there is a syntax or other error.
 */
- (OrgApacheXpathExpression *)compileWithInt:(jint)opPos;

/*!
 @brief Count the number of predicates in the step.
 @param opPos The position of the first predicate the m_opMap array.
 @return The number of predicates for this step.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (jint)countPredicatesWithInt:(jint)opPos;

/*!
 @brief Tell the user of an error, and probably throw an
  exception.
 @param msg An error msgkey that corresponds to one of the constants found              in 
 <code>org.apache.xpath.res.XPATHErrorResources</code> , which is              a key for a format string.
 @param args An array of arguments represented in the format string, which               may be null.
 @throw TransformerExceptionif the current ErrorListoner determines to 
                               throw an exception.
 */
- (void)errorWithNSString:(NSString *)msg
        withNSObjectArray:(IOSObjectArray *)args;

/*!
 @brief Compile a zero or more predicates for a given match pattern.
 @param opPos The position of the first predicate the m_opMap array.
 @return reference to array of <code>org.apache.xpath.Expression</code> instances.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (IOSObjectArray *)getCompiledPredicatesWithInt:(jint)opPos;

/*!
 @brief Get the level of the location path or union being constructed.
 @return 0 if it is a top-level path.
 */
- (jint)getLocationPathDepth;

/*!
 @brief Get the current namespace context for the xpath.
 @return The current prefix resolver, *may* be null, though hopefully not.
 */
- (id<OrgApacheXmlUtilsPrefixResolver>)getNamespaceContext;

/*!
 @brief Get a <code>org.w3c.dom.traversal.NodeFilter</code> bit set that tells what 
  to show for a given node test.
 @param opPos the op map position for the location step.
 @return <code>org.w3c.dom.traversal.NodeFilter</code> bit set that tells what 
          to show for a given node test.
 */
- (jint)getWhatToShowWithInt:(jint)opPos;

/*!
 @brief Compile a location path.The LocPathIterator itself may create 
 <code>org.apache.xpath.axes.AxesWalker</code> children.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.axes.LocPathIterator</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)locationPathWithInt:(jint)opPos;

/*!
 @brief Compile a location match pattern unit expression.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.patterns.StepPattern</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)locationPathPatternWithInt:(jint)opPos;

/*!
 @brief Compile a location step predicate expression.
 @param opPos The current position in the m_opMap array.
 @return the contained predicate expression.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)predicateWithInt:(jint)opPos;

/*!
 @brief Set the current namespace context for the xpath.
 @param pr The resolver for prefixes in the XPath expression.
 */
- (void)setNamespaceContextWithOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)pr;

/*!
 @brief Warn the user of an problem.
 @param msg An error msgkey that corresponds to one of the constants found              in 
 <code>org.apache.xpath.res.XPATHErrorResources</code> , which is              a key for a format string.
 @param args An array of arguments represented in the format string, which               may be null.
 @throw TransformerExceptionif the current ErrorListoner determines to 
                               throw an exception.
 */
- (void)warnWithNSString:(NSString *)msg
       withNSObjectArray:(IOSObjectArray *)args;

#pragma mark Protected

/*!
 @brief Compile an 'and' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.And</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)and__WithInt:(jint)opPos;

/*!
 @brief Compile a function argument.
 @param opPos The current position in the m_opMap array.
 @return reference to the argument expression.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)argWithInt:(jint)opPos;

/*!
 @brief Compile a 'boolean(...)' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Bool</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)bool__WithInt:(jint)opPos;

/*!
 @brief Compile a 'div' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Div</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)divWithInt:(jint)opPos;

/*!
 @brief Compile a '=' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Equals</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)equalsWithInt:(jint)opPos;

/*!
 @brief Compile an expression group.
 @param opPos The current position in the m_opMap array.
 @return reference to the contained expression.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)groupWithInt:(jint)opPos;

/*!
 @brief Compile a '>' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Gt</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)gtWithInt:(jint)opPos;

/*!
 @brief Compile a '>=' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Gte</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)gteWithInt:(jint)opPos;

/*!
 @brief Compile a literal string value.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.objects.XString</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)literalWithInt:(jint)opPos;

/*!
 @brief Compile a '<' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Lt</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)ltWithInt:(jint)opPos;

/*!
 @brief Compile a '<=' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Lte</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)lteWithInt:(jint)opPos;

/*!
 @brief Compile an entire match pattern expression.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.patterns.UnionPattern</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)matchPatternWithInt:(jint)opPos;

/*!
 @brief Compile a '-' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Minus</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)minusWithInt:(jint)opPos;

/*!
 @brief Compile a 'mod' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Mod</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)modWithInt:(jint)opPos;

/*!
 @brief Compile a '*' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Mult</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)multWithInt:(jint)opPos;

/*!
 @brief Compile a unary '-' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Neg</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)negWithInt:(jint)opPos;

/*!
 @brief Compile a '!
 =' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.NotEquals</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)notequalsWithInt:(jint)opPos;

/*!
 @brief Compile a 'number(...)' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Number</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)numberWithInt:(jint)opPos;

/*!
 @brief Compile a literal number value.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.objects.XNumber</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)numberlitWithInt:(jint)opPos;

/*!
 @brief Compile an 'or' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Or</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)or__WithInt:(jint)opPos;

/*!
 @brief Compile a '+' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Plus</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)plusWithInt:(jint)opPos;

/*!
 @brief Compile a step pattern unit expression, used for both location paths 
  and match patterns.
 @param opPos The current position in the m_opMap array.
 @param stepCount The number of steps to expect.
 @param ancestorPattern The owning StepPattern, which may be null.
 @return reference to <code>org.apache.xpath.patterns.StepPattern</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathPatternsStepPattern *)stepPatternWithInt:(jint)opPos
                                                  withInt:(jint)stepCount
                    withOrgApacheXpathPatternsStepPattern:(OrgApacheXpathPatternsStepPattern *)ancestorPattern;

/*!
 @brief Compile a 'string(...)' operation.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.String</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)stringWithInt:(jint)opPos;

/*!
 @brief Compile a location path union.The UnionPathIterator itself may create 
 <code>org.apache.xpath.axes.LocPathIterator</code> children.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.axes.LocPathIterator</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)union__WithInt:(jint)opPos;

/*!
 @brief Compile a variable reference.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.operations.Variable</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)variableWithInt:(jint)opPos;

#pragma mark Package-Private

/*!
 @brief Compile a built-in XPath function.
 @param opPos The current position in the m_opMap array.
 @return reference to <code>org.apache.xpath.functions.Function</code> instance.
 @throw TransformerExceptionif a error occurs creating the Expression.
 */
- (OrgApacheXpathExpression *)compileFunctionWithInt:(jint)opPos;

/*!
 @brief Get the function table
 */
- (OrgApacheXpathCompilerFunctionTable *)getFunctionTable;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathCompilerCompiler)

J2OBJC_FIELD_SETTER(OrgApacheXpathCompilerCompiler, m_errorHandler_, id<JavaxXmlTransformErrorListener>)
J2OBJC_FIELD_SETTER(OrgApacheXpathCompilerCompiler, m_locator_, id<JavaxXmlTransformSourceLocator>)

FOUNDATION_EXPORT void OrgApacheXpathCompilerCompiler_initWithJavaxXmlTransformErrorListener_withJavaxXmlTransformSourceLocator_withOrgApacheXpathCompilerFunctionTable_(OrgApacheXpathCompilerCompiler *self, id<JavaxXmlTransformErrorListener> errorHandler, id<JavaxXmlTransformSourceLocator> locator, OrgApacheXpathCompilerFunctionTable *fTable);

FOUNDATION_EXPORT OrgApacheXpathCompilerCompiler *new_OrgApacheXpathCompilerCompiler_initWithJavaxXmlTransformErrorListener_withJavaxXmlTransformSourceLocator_withOrgApacheXpathCompilerFunctionTable_(id<JavaxXmlTransformErrorListener> errorHandler, id<JavaxXmlTransformSourceLocator> locator, OrgApacheXpathCompilerFunctionTable *fTable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathCompilerCompiler *create_OrgApacheXpathCompilerCompiler_initWithJavaxXmlTransformErrorListener_withJavaxXmlTransformSourceLocator_withOrgApacheXpathCompilerFunctionTable_(id<JavaxXmlTransformErrorListener> errorHandler, id<JavaxXmlTransformSourceLocator> locator, OrgApacheXpathCompilerFunctionTable *fTable);

FOUNDATION_EXPORT void OrgApacheXpathCompilerCompiler_init(OrgApacheXpathCompilerCompiler *self);

FOUNDATION_EXPORT OrgApacheXpathCompilerCompiler *new_OrgApacheXpathCompilerCompiler_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathCompilerCompiler *create_OrgApacheXpathCompilerCompiler_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathCompilerCompiler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathCompilerCompiler")
