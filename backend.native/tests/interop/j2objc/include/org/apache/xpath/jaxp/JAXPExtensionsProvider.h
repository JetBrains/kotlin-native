//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/jaxp/JAXPExtensionsProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathJaxpJAXPExtensionsProvider")
#ifdef RESTRICT_OrgApacheXpathJaxpJAXPExtensionsProvider
#define INCLUDE_ALL_OrgApacheXpathJaxpJAXPExtensionsProvider 0
#else
#define INCLUDE_ALL_OrgApacheXpathJaxpJAXPExtensionsProvider 1
#endif
#undef RESTRICT_OrgApacheXpathJaxpJAXPExtensionsProvider

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXpathJaxpJAXPExtensionsProvider_) && (INCLUDE_ALL_OrgApacheXpathJaxpJAXPExtensionsProvider || defined(INCLUDE_OrgApacheXpathJaxpJAXPExtensionsProvider))
#define OrgApacheXpathJaxpJAXPExtensionsProvider_

#define RESTRICT_OrgApacheXpathExtensionsProvider 1
#define INCLUDE_OrgApacheXpathExtensionsProvider 1
#include "org/apache/xpath/ExtensionsProvider.h"

@class JavaUtilVector;
@class OrgApacheXpathFunctionsFuncExtFunction;
@protocol JavaxXmlXpathXPathFunctionResolver;

/*!
 @author Ramesh Mandava ( ramesh.mandava@@sun.com )
 */
@interface OrgApacheXpathJaxpJAXPExtensionsProvider : NSObject < OrgApacheXpathExtensionsProvider >

#pragma mark Public

- (instancetype __nonnull)initWithJavaxXmlXpathXPathFunctionResolver:(id<JavaxXmlXpathXPathFunctionResolver>)resolver;

- (instancetype __nonnull)initWithJavaxXmlXpathXPathFunctionResolver:(id<JavaxXmlXpathXPathFunctionResolver>)resolver
                                                         withBoolean:(jboolean)featureSecureProcessing;

/*!
 @brief Is the extension element available?
 */
- (jboolean)elementAvailableWithNSString:(NSString *)ns
                            withNSString:(NSString *)elemName;

/*!
 @brief Execute the extension function.
 */
- (id)extFunctionWithOrgApacheXpathFunctionsFuncExtFunction:(OrgApacheXpathFunctionsFuncExtFunction *)extFunction
                                         withJavaUtilVector:(JavaUtilVector *)argVec;

/*!
 @brief Execute the extension function.
 */
- (id)extFunctionWithNSString:(NSString *)ns
                 withNSString:(NSString *)funcName
           withJavaUtilVector:(JavaUtilVector *)argVec
                       withId:(id)methodKey;

/*!
 @brief Is the extension function available?
 */
- (jboolean)functionAvailableWithNSString:(NSString *)ns
                             withNSString:(NSString *)funcName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathJaxpJAXPExtensionsProvider)

FOUNDATION_EXPORT void OrgApacheXpathJaxpJAXPExtensionsProvider_initWithJavaxXmlXpathXPathFunctionResolver_(OrgApacheXpathJaxpJAXPExtensionsProvider *self, id<JavaxXmlXpathXPathFunctionResolver> resolver);

FOUNDATION_EXPORT OrgApacheXpathJaxpJAXPExtensionsProvider *new_OrgApacheXpathJaxpJAXPExtensionsProvider_initWithJavaxXmlXpathXPathFunctionResolver_(id<JavaxXmlXpathXPathFunctionResolver> resolver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathJaxpJAXPExtensionsProvider *create_OrgApacheXpathJaxpJAXPExtensionsProvider_initWithJavaxXmlXpathXPathFunctionResolver_(id<JavaxXmlXpathXPathFunctionResolver> resolver);

FOUNDATION_EXPORT void OrgApacheXpathJaxpJAXPExtensionsProvider_initWithJavaxXmlXpathXPathFunctionResolver_withBoolean_(OrgApacheXpathJaxpJAXPExtensionsProvider *self, id<JavaxXmlXpathXPathFunctionResolver> resolver, jboolean featureSecureProcessing);

FOUNDATION_EXPORT OrgApacheXpathJaxpJAXPExtensionsProvider *new_OrgApacheXpathJaxpJAXPExtensionsProvider_initWithJavaxXmlXpathXPathFunctionResolver_withBoolean_(id<JavaxXmlXpathXPathFunctionResolver> resolver, jboolean featureSecureProcessing) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathJaxpJAXPExtensionsProvider *create_OrgApacheXpathJaxpJAXPExtensionsProvider_initWithJavaxXmlXpathXPathFunctionResolver_withBoolean_(id<JavaxXmlXpathXPathFunctionResolver> resolver, jboolean featureSecureProcessing);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathJaxpJAXPExtensionsProvider)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathJaxpJAXPExtensionsProvider")
