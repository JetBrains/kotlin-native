//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/ExpressionNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathExpressionNode")
#ifdef RESTRICT_OrgApacheXpathExpressionNode
#define INCLUDE_ALL_OrgApacheXpathExpressionNode 0
#else
#define INCLUDE_ALL_OrgApacheXpathExpressionNode 1
#endif
#undef RESTRICT_OrgApacheXpathExpressionNode

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXpathExpressionNode_) && (INCLUDE_ALL_OrgApacheXpathExpressionNode || defined(INCLUDE_OrgApacheXpathExpressionNode))
#define OrgApacheXpathExpressionNode_

#define RESTRICT_JavaxXmlTransformSourceLocator 1
#define INCLUDE_JavaxXmlTransformSourceLocator 1
#include "javax/xml/transform/SourceLocator.h"

/*!
 @brief A class that implements this interface can construct expressions, 
  give information about child and parent expressions,
  and give the originating source information.A class that implements 
  this interface does not lay any claim to being directly executable.
 <p>Note: This interface should not be considered stable.  Only exprSetParent 
  and exprGetParent can be counted on to work reliably.  Work in progress.</p>
 */
@protocol OrgApacheXpathExpressionNode < JavaxXmlTransformSourceLocator, JavaObject >

/*!
 @brief This pair of methods are used to inform the node of its
     parent.
 */
- (void)exprSetParentWithOrgApacheXpathExpressionNode:(id<OrgApacheXpathExpressionNode>)n;

- (id<OrgApacheXpathExpressionNode>)exprGetParent;

/*!
 @brief This method tells the node to add its argument to the node's
     list of children.
 */
- (void)exprAddChildWithOrgApacheXpathExpressionNode:(id<OrgApacheXpathExpressionNode>)n
                                             withInt:(jint)i;

/*!
 @brief This method returns a child node.The children are numbered
      from zero, left to right.
 */
- (id<OrgApacheXpathExpressionNode>)exprGetChildWithInt:(jint)i;

/*!
 @brief Return the number of children the node has.
 */
- (jint)exprGetNumChildren;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathExpressionNode)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathExpressionNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathExpressionNode")
