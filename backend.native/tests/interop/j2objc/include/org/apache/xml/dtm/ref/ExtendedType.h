//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/dtm/ref/ExtendedType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlDtmRefExtendedType")
#ifdef RESTRICT_OrgApacheXmlDtmRefExtendedType
#define INCLUDE_ALL_OrgApacheXmlDtmRefExtendedType 0
#else
#define INCLUDE_ALL_OrgApacheXmlDtmRefExtendedType 1
#endif
#undef RESTRICT_OrgApacheXmlDtmRefExtendedType

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXmlDtmRefExtendedType_) && (INCLUDE_ALL_OrgApacheXmlDtmRefExtendedType || defined(INCLUDE_OrgApacheXmlDtmRefExtendedType))
#define OrgApacheXmlDtmRefExtendedType_

/*!
 @brief The class ExtendedType represents an extended type object used by
  ExpandedNameTable.
 */
@interface OrgApacheXmlDtmRefExtendedType : NSObject

#pragma mark Public

/*!
 @brief Create an ExtendedType object from node type, namespace and local name.
 The hash code is calculated from the node type, namespace and local name.
 @param nodetype Type of the node
 @param namespace_ Namespace of the node
 @param localName Local name of the node
 */
- (instancetype __nonnull)initWithInt:(jint)nodetype
                         withNSString:(NSString *)namespace_
                         withNSString:(NSString *)localName;

/*!
 @brief Create an ExtendedType object from node type, namespace, local name
  and a given hash code.
 @param nodetype Type of the node
 @param namespace_ Namespace of the node
 @param localName Local name of the node
 @param hash_ The given hash code
 */
- (instancetype __nonnull)initWithInt:(jint)nodetype
                         withNSString:(NSString *)namespace_
                         withNSString:(NSString *)localName
                              withInt:(jint)hash_;

/*!
 @brief Test if this ExtendedType object is equal to the given ExtendedType.
 @param other The other ExtendedType object to test for equality
 @return true if the two ExtendedType objects are equal.
 */
- (jboolean)equalsWithOrgApacheXmlDtmRefExtendedType:(OrgApacheXmlDtmRefExtendedType *)other;

/*!
 @brief Return the local name
 */
- (NSString *)getLocalName;

/*!
 @brief Return the namespace
 */
- (NSString *)getNamespace;

/*!
 @brief Return the node type
 */
- (jint)getNodeType;

/*!
 @brief Override the hashCode() method in the Object class
 */
- (NSUInteger)hash;

#pragma mark Protected

/*!
 @brief Redefine this ExtendedType object to represent a different extended type.
 This is intended to be used ONLY on the hashET object. Using it elsewhere
  will mess up existing hashtable entries!
 */
- (void)redefineWithInt:(jint)nodetype
           withNSString:(NSString *)namespace_
           withNSString:(NSString *)localName;

/*!
 @brief Redefine this ExtendedType object to represent a different extended type.
 This is intended to be used ONLY on the hashET object. Using it elsewhere
  will mess up existing hashtable entries!
 */
- (void)redefineWithInt:(jint)nodetype
           withNSString:(NSString *)namespace_
           withNSString:(NSString *)localName
                withInt:(jint)hash_;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlDtmRefExtendedType)

FOUNDATION_EXPORT void OrgApacheXmlDtmRefExtendedType_initWithInt_withNSString_withNSString_(OrgApacheXmlDtmRefExtendedType *self, jint nodetype, NSString *namespace_, NSString *localName);

FOUNDATION_EXPORT OrgApacheXmlDtmRefExtendedType *new_OrgApacheXmlDtmRefExtendedType_initWithInt_withNSString_withNSString_(jint nodetype, NSString *namespace_, NSString *localName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefExtendedType *create_OrgApacheXmlDtmRefExtendedType_initWithInt_withNSString_withNSString_(jint nodetype, NSString *namespace_, NSString *localName);

FOUNDATION_EXPORT void OrgApacheXmlDtmRefExtendedType_initWithInt_withNSString_withNSString_withInt_(OrgApacheXmlDtmRefExtendedType *self, jint nodetype, NSString *namespace_, NSString *localName, jint hash_);

FOUNDATION_EXPORT OrgApacheXmlDtmRefExtendedType *new_OrgApacheXmlDtmRefExtendedType_initWithInt_withNSString_withNSString_withInt_(jint nodetype, NSString *namespace_, NSString *localName, jint hash_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefExtendedType *create_OrgApacheXmlDtmRefExtendedType_initWithInt_withNSString_withNSString_withInt_(jint nodetype, NSString *namespace_, NSString *localName, jint hash_);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmRefExtendedType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlDtmRefExtendedType")
