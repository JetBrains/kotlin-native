//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/res/XMLMessages.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlResXMLMessages")
#ifdef RESTRICT_OrgApacheXmlResXMLMessages
#define INCLUDE_ALL_OrgApacheXmlResXMLMessages 0
#else
#define INCLUDE_ALL_OrgApacheXmlResXMLMessages 1
#endif
#undef RESTRICT_OrgApacheXmlResXMLMessages

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXmlResXMLMessages_) && (INCLUDE_ALL_OrgApacheXmlResXMLMessages || defined(INCLUDE_OrgApacheXmlResXMLMessages))
#define OrgApacheXmlResXMLMessages_

@class IOSObjectArray;
@class JavaUtilListResourceBundle;
@class JavaUtilLocale;

/*!
 @brief A utility class for issuing XML error messages.
 */
@interface OrgApacheXmlResXMLMessages : NSObject {
 @public
  /*!
   @brief The local object to use.
   */
  JavaUtilLocale *fLocale_;
}
@property (readonly, copy, class) NSString *BAD_CODE NS_SWIFT_NAME(BAD_CODE);
@property (readonly, copy, class) NSString *FORMAT_FAILED NS_SWIFT_NAME(FORMAT_FAILED);

+ (NSString *)BAD_CODE;

+ (NSString *)FORMAT_FAILED;

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Creates a message from the specified key and replacement
  arguments, localized to the given locale.
 @param fResourceBundle The resource bundle to use.
 @param msgKey The message key to use.
 @param args The arguments to be used as replacement text                   in the message created.
 @return The formatted message string.
 */
+ (NSString *)createMsgWithJavaUtilListResourceBundle:(JavaUtilListResourceBundle *)fResourceBundle
                                         withNSString:(NSString *)msgKey
                                    withNSObjectArray:(IOSObjectArray *)args;

/*!
 @brief Creates a message from the specified key and replacement
  arguments, localized to the given locale.
 @param msgKey The key for the message text.
 @param args The arguments to be used as replacement text                   in the message created.
 @return The formatted message string.
 */
+ (NSString *)createXMLMessageWithNSString:(NSString *)msgKey
                         withNSObjectArray:(IOSObjectArray *)args;

/*!
 @brief Get the Locale object that is being used.
 @return non-null reference to Locale object.
 */
- (JavaUtilLocale *)getLocale;

/*!
 @brief Set the Locale object to use.
 @param locale non-null reference to Locale object.
 */
- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale;

@end

J2OBJC_STATIC_INIT(OrgApacheXmlResXMLMessages)

J2OBJC_FIELD_SETTER(OrgApacheXmlResXMLMessages, fLocale_, JavaUtilLocale *)

/*!
 @brief String to use if a bad message code is used.
 */
inline NSString *OrgApacheXmlResXMLMessages_get_BAD_CODE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlResXMLMessages_BAD_CODE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlResXMLMessages, BAD_CODE, NSString *)

/*!
 @brief String to use if the message format operation failed.
 */
inline NSString *OrgApacheXmlResXMLMessages_get_FORMAT_FAILED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlResXMLMessages_FORMAT_FAILED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlResXMLMessages, FORMAT_FAILED, NSString *)

FOUNDATION_EXPORT void OrgApacheXmlResXMLMessages_init(OrgApacheXmlResXMLMessages *self);

FOUNDATION_EXPORT OrgApacheXmlResXMLMessages *new_OrgApacheXmlResXMLMessages_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlResXMLMessages *create_OrgApacheXmlResXMLMessages_init(void);

FOUNDATION_EXPORT NSString *OrgApacheXmlResXMLMessages_createXMLMessageWithNSString_withNSObjectArray_(NSString *msgKey, IOSObjectArray *args);

FOUNDATION_EXPORT NSString *OrgApacheXmlResXMLMessages_createMsgWithJavaUtilListResourceBundle_withNSString_withNSObjectArray_(JavaUtilListResourceBundle *fResourceBundle, NSString *msgKey, IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlResXMLMessages)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlResXMLMessages")
