//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/StringVector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsStringVector")
#ifdef RESTRICT_OrgApacheXmlUtilsStringVector
#define INCLUDE_ALL_OrgApacheXmlUtilsStringVector 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsStringVector 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsStringVector

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXmlUtilsStringVector_) && (INCLUDE_ALL_OrgApacheXmlUtilsStringVector || defined(INCLUDE_OrgApacheXmlUtilsStringVector))
#define OrgApacheXmlUtilsStringVector_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSObjectArray;

/*!
 @brief A very simple table that stores a list of strings, optimized
  for small lists.
 */
@interface OrgApacheXmlUtilsStringVector : NSObject < JavaIoSerializable > {
 @public
  /*!
   */
  jint m_blocksize_;
  /*!
   */
  IOSObjectArray *m_map_;
  /*!
   */
  jint m_firstFree_;
  /*!
   */
  jint m_mapSize_;
}
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

/*!
 @brief Default constructor.Note that the default
  block size is very small, for small lists.
 */
- (instancetype __nonnull)init;

/*!
 @brief Construct a StringVector, using the given block size.
 @param blocksize Size of the blocks to allocate
 */
- (instancetype __nonnull)initWithInt:(jint)blocksize;

/*!
 @brief Append a string onto the vector.
 @param value Sting to add to the vector
 */
- (void)addElementWithNSString:(NSString *)value;

/*!
 @brief Tell if the table contains the given string.
 @param s String to look for
 @return True if the string is in this table
 */
- (jboolean)containsWithNSString:(NSString *)s;

/*!
 @brief Tell if the table contains the given string.Ignore case.
 @param s String to find
 @return True if the String is in this vector
 */
- (jboolean)containsIgnoreCaseWithNSString:(NSString *)s;

/*!
 @brief Get the nth element.
 @param i Index of string to find
 @return String at given index
 */
- (NSString *)elementAtWithInt:(jint)i;

/*!
 @brief Get the length of the list.
 @return Number of strings in the list
 */
- (jint)getLength;

/*!
 @brief Get the string at the tail of this vector without popping.
 @return The string at the tail of this vector.
 */
- (NSString *)peek;

/*!
 @brief Pop the tail of this vector.
 @return The String last added to this vector or null not found.
  The string is removed from the vector.
 */
- (NSString *)pop;

/*!
 @brief Tell if the table contains the given string.
 @param s String to push into the vector
 */
- (void)pushWithNSString:(NSString *)s;

/*!
 @brief Get the length of the list.
 @return Number of strings in the list
 */
- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsStringVector)

J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsStringVector, m_map_, IOSObjectArray *)

inline jlong OrgApacheXmlUtilsStringVector_get_serialVersionUID(void);
#define OrgApacheXmlUtilsStringVector_serialVersionUID 4995234972032919748LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsStringVector, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXmlUtilsStringVector_init(OrgApacheXmlUtilsStringVector *self);

FOUNDATION_EXPORT OrgApacheXmlUtilsStringVector *new_OrgApacheXmlUtilsStringVector_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsStringVector *create_OrgApacheXmlUtilsStringVector_init(void);

FOUNDATION_EXPORT void OrgApacheXmlUtilsStringVector_initWithInt_(OrgApacheXmlUtilsStringVector *self, jint blocksize);

FOUNDATION_EXPORT OrgApacheXmlUtilsStringVector *new_OrgApacheXmlUtilsStringVector_initWithInt_(jint blocksize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsStringVector *create_OrgApacheXmlUtilsStringVector_initWithInt_(jint blocksize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsStringVector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsStringVector")
