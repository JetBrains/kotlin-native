//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/transformer/KeyTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTransformerKeyTable")
#ifdef RESTRICT_OrgApacheXalanTransformerKeyTable
#define INCLUDE_ALL_OrgApacheXalanTransformerKeyTable 0
#else
#define INCLUDE_ALL_OrgApacheXalanTransformerKeyTable 1
#endif
#undef RESTRICT_OrgApacheXalanTransformerKeyTable

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXalanTransformerKeyTable_) && (INCLUDE_ALL_OrgApacheXalanTransformerKeyTable || defined(INCLUDE_OrgApacheXalanTransformerKeyTable))
#define OrgApacheXalanTransformerKeyTable_

@class JavaUtilVector;
@class OrgApacheXalanTransformerKeyIterator;
@class OrgApacheXmlUtilsQName;
@class OrgApacheXpathObjectsXNodeSet;
@class OrgApacheXpathXPathContext;
@protocol OrgApacheXmlUtilsPrefixResolver;
@protocol OrgApacheXmlUtilsXMLString;

/*!
 @brief Table of element keys, keyed by document node.An instance of this
  class is keyed by a Document node that should be matched with the
  root of the current context.
 */
@interface OrgApacheXalanTransformerKeyTable : NSObject

#pragma mark Public

/*!
 @brief Build a keys table.
 @param doc The owner document key.
 @param nscontext The stylesheet's namespace context.
 @param name The key name
 @param keyDeclarations The stylesheet's xsl:key declarations.
 @throw javax.xml.transform.TransformerException
 */
- (instancetype __nonnull)initWithInt:(jint)doc
  withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)nscontext
           withOrgApacheXmlUtilsQName:(OrgApacheXmlUtilsQName *)name
                   withJavaUtilVector:(JavaUtilVector *)keyDeclarations
       withOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

/*!
 @brief Get the document root matching this key.
 @return the document root matching this key
 */
- (jint)getDocKey;

/*!
 @brief Get Key Name for this KeyTable
 @return Key name
 */
- (OrgApacheXmlUtilsQName *)getKeyTableName;

/*!
 @brief Given a valid element key, return the corresponding node list.
 @param name The name of the key, which must match the 'name' attribute on xsl:key.
 @param ref The value that must match the value found by the 'match' attribute on xsl:key.
 @return a set of nodes referenced by the key named <CODE>name</CODE> and the reference <CODE>ref</CODE>. If no node is referenced by this key, an empty node set is returned.
 */
- (OrgApacheXpathObjectsXNodeSet *)getNodeSetDTMByKeyWithOrgApacheXmlUtilsQName:(OrgApacheXmlUtilsQName *)name
                                                 withOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)ref;

#pragma mark Package-Private

- (OrgApacheXalanTransformerKeyIterator *)getKeyIterator;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTransformerKeyTable)

FOUNDATION_EXPORT void OrgApacheXalanTransformerKeyTable_initWithInt_withOrgApacheXmlUtilsPrefixResolver_withOrgApacheXmlUtilsQName_withJavaUtilVector_withOrgApacheXpathXPathContext_(OrgApacheXalanTransformerKeyTable *self, jint doc, id<OrgApacheXmlUtilsPrefixResolver> nscontext, OrgApacheXmlUtilsQName *name, JavaUtilVector *keyDeclarations, OrgApacheXpathXPathContext *xctxt);

FOUNDATION_EXPORT OrgApacheXalanTransformerKeyTable *new_OrgApacheXalanTransformerKeyTable_initWithInt_withOrgApacheXmlUtilsPrefixResolver_withOrgApacheXmlUtilsQName_withJavaUtilVector_withOrgApacheXpathXPathContext_(jint doc, id<OrgApacheXmlUtilsPrefixResolver> nscontext, OrgApacheXmlUtilsQName *name, JavaUtilVector *keyDeclarations, OrgApacheXpathXPathContext *xctxt) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTransformerKeyTable *create_OrgApacheXalanTransformerKeyTable_initWithInt_withOrgApacheXmlUtilsPrefixResolver_withOrgApacheXmlUtilsQName_withJavaUtilVector_withOrgApacheXpathXPathContext_(jint doc, id<OrgApacheXmlUtilsPrefixResolver> nscontext, OrgApacheXmlUtilsQName *name, JavaUtilVector *keyDeclarations, OrgApacheXpathXPathContext *xctxt);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTransformerKeyTable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTransformerKeyTable")
