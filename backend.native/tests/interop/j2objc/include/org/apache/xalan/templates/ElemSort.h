//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/templates/ElemSort.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemSort")
#ifdef RESTRICT_OrgApacheXalanTemplatesElemSort
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemSort 0
#else
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemSort 1
#endif
#undef RESTRICT_OrgApacheXalanTemplatesElemSort

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXalanTemplatesElemSort_) && (INCLUDE_ALL_OrgApacheXalanTemplatesElemSort || defined(INCLUDE_OrgApacheXalanTemplatesElemSort))
#define OrgApacheXalanTemplatesElemSort_

#define RESTRICT_OrgApacheXalanTemplatesElemTemplateElement 1
#define INCLUDE_OrgApacheXalanTemplatesElemTemplateElement 1
#include "org/apache/xalan/templates/ElemTemplateElement.h"

@class OrgApacheXalanTemplatesAVT;
@class OrgApacheXalanTemplatesStylesheetRoot;
@class OrgApacheXpathXPath;
@protocol OrgW3cDomNode;

/*!
 @brief Implement xsl:sort.
 @code

   <!ELEMENT xsl:sort EMPTY>
   <!ATTLIST xsl:sort
    select %expr; "."
    lang %avt; #IMPLIED
    data-type %avt; "text"
    order %avt; "ascending"
    case-order %avt; #IMPLIED 
  >
   <!-- xsl:sort cannot occur after any other elements or
 any non-whitespace character -->
   
@endcode
 - seealso: <a href="http://www.w3.org/TR/xslt#sorting">sorting in XSLT Specification</a>
 */
@interface OrgApacheXalanTemplatesElemSort : OrgApacheXalanTemplatesElemTemplateElement
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Add a child to the child list.
 @param newChild Child to add to the child list
 @return Child just added to the child list
 @throw DOMException
 */
- (id<OrgW3cDomNode>)appendChildWithOrgW3cDomNode:(id<OrgW3cDomNode>)newChild;

/*!
 @brief This function is called after everything else has been
  recomposed, and allows the template to set remaining
  values that may be based on some other property that
  depends on recomposition.
 */
- (void)composeWithOrgApacheXalanTemplatesStylesheetRoot:(OrgApacheXalanTemplatesStylesheetRoot *)sroot;

/*!
 @brief Get the "case-order" attribute.
 case-order has the value upper-first or lower-first; this applies
  when data-type="text", and specifies that upper-case letters should
  sort before lower-case letters or vice-versa respectively.
  For example, if lang="en", then A a B b are sorted with
  case-order="upper-first" and a A b B are sorted with case-order="lower-first".
  The default value is language dependent.
 @return The value of the "case-order" attribute
 */
- (OrgApacheXalanTemplatesAVT *)getCaseOrder;

/*!
 @brief Get the "data-type" attribute.
 <code>data-type</code> specifies the data type of the
  strings; the following values are allowed: 
 <ul>
  <li>
  <code>text</code> specifies that the sort keys should be
  sorted lexicographically in the culturally correct manner for the
  language specified by <code>lang</code>.
  </li>
  <li>
  <code>number</code> specifies that the sort keys should be
  converted to numbers and then sorted according to the numeric value;
  the sort key is converted to a number as if by a call to the 
 <b><a href="http://www.w3.org/TR/xpath#function-number">number</a></b> function; the <code>lang</code>
  attribute is ignored. 
 </li>
  <li>
  A <a href="http://www.w3.org/TR/REC-xml-names#NT-QName">QName</a> with a prefix
  is expanded into an <a href="http://www.w3.org/TR/xpath#dt-expanded-name">expanded-name</a> as described
  in <a href="#qname">[<b>2.4 Qualified Names</b>]</a>; the expanded-name identifies the data-type;
  the behavior in this case is not specified by this document. 
 </li>
  </ul>
  <p>The default value is <code>text</code>.</p>
  <blockquote>
  <b>NOTE: </b>The XSL Working Group plans that future versions of XSLT will
  leverage XML Schemas to define further values for this
  attribute.</blockquote>
 @return The value of the "data-type" attribute
 */
- (OrgApacheXalanTemplatesAVT *)getDataType;

/*!
 @brief Get the "lang" attribute.
 lang specifies the language of the sort keys; it has the same
  range of values as xml:lang [XML]; if no lang value is
  specified, the language should be determined from the system environment.
 @return The value of the "lang" attribute
 */
- (OrgApacheXalanTemplatesAVT *)getLang;

/*!
 @brief Return the node name.
 @return The element's name
 */
- (NSString *)getNodeName;

/*!
 @brief Get the "order" attribute.
 order specifies whether the strings should be sorted in ascending
  or descending order; ascending specifies ascending order; descending
  specifies descending order; the default is ascending.
 @return The value of the "order" attribute
 */
- (OrgApacheXalanTemplatesAVT *)getOrder;

/*!
 @brief Get the "select" attribute.
 xsl:sort has a select attribute whose value is an expression.
  For each node to be processed, the expression is evaluated
  with that node as the current node and with the complete
  list of nodes being processed in unsorted order as the current
  node list. The resulting object is converted to a string as if
  by a call to the string function; this string is used as the
  sort key for that node. The default value of the select attribute
  is ., which will cause the string-value of the current node to
  be used as the sort key.
 @return The value of the "select" attribute
 */
- (OrgApacheXpathXPath *)getSelect;

/*!
 @brief Get an int constant identifying the type of element.
 - seealso: org.apache.xalan.templates.Constants
 @return The token ID of the element
 */
- (jint)getXSLToken;

/*!
 @brief Set the "case-order" attribute.
 case-order has the value upper-first or lower-first; this applies
  when data-type="text", and specifies that upper-case letters should
  sort before lower-case letters or vice-versa respectively.
  For example, if lang="en", then A a B b are sorted with
  case-order="upper-first" and a A b B are sorted with case-order="lower-first".
  The default value is language dependent.
 @param v The value to set for the "case-order" attribute
 */
- (void)setCaseOrderWithOrgApacheXalanTemplatesAVT:(OrgApacheXalanTemplatesAVT *)v;

/*!
 @brief Set the "data-type" attribute.
 <code>data-type</code> specifies the data type of the
  strings; the following values are allowed: 
 <ul>
  <li>
  <code>text</code> specifies that the sort keys should be
  sorted lexicographically in the culturally correct manner for the
  language specified by <code>lang</code>.
  </li>
  <li>
  <code>number</code> specifies that the sort keys should be
  converted to numbers and then sorted according to the numeric value;
  the sort key is converted to a number as if by a call to the 
 <b><a href="http://www.w3.org/TR/xpath#function-number">number</a></b> function; the <code>lang</code>
  attribute is ignored. 
 </li>
  <li>
  A <a href="http://www.w3.org/TR/REC-xml-names#NT-QName">QName</a> with a prefix
  is expanded into an <a href="http://www.w3.org/TR/xpath#dt-expanded-name">expanded-name</a> as described
  in <a href="#qname">[<b>2.4 Qualified Names</b>]</a>; the expanded-name identifies the data-type;
  the behavior in this case is not specified by this document. 
 </li>
  </ul>
  <p>The default value is <code>text</code>.</p>
  <blockquote>
  <b>NOTE: </b>The XSL Working Group plans that future versions of XSLT will
  leverage XML Schemas to define further values for this
  attribute.</blockquote>
 @param v Value to set for the "data-type" attribute
 */
- (void)setDataTypeWithOrgApacheXalanTemplatesAVT:(OrgApacheXalanTemplatesAVT *)v;

/*!
 @brief Set the "lang" attribute.
 lang specifies the language of the sort keys; it has the same
  range of values as xml:lang [XML]; if no lang value is
  specified, the language should be determined from the system environment.
 @param v The value to set for the "lang" attribute
 */
- (void)setLangWithOrgApacheXalanTemplatesAVT:(OrgApacheXalanTemplatesAVT *)v;

/*!
 @brief Set the "order" attribute.
 order specifies whether the strings should be sorted in ascending
  or descending order; ascending specifies ascending order; descending
  specifies descending order; the default is ascending.
 @param v The value to set for the "order" attribute
 */
- (void)setOrderWithOrgApacheXalanTemplatesAVT:(OrgApacheXalanTemplatesAVT *)v;

/*!
 @brief Set the "select" attribute.
 xsl:sort has a select attribute whose value is an expression.
  For each node to be processed, the expression is evaluated
  with that node as the current node and with the complete
  list of nodes being processed in unsorted order as the current
  node list. The resulting object is converted to a string as if
  by a call to the string function; this string is used as the
  sort key for that node. The default value of the select attribute
  is ., which will cause the string-value of the current node to
  be used as the sort key.
 @param v Value to set for the "select" attribute
 */
- (void)setSelectWithOrgApacheXpathXPath:(OrgApacheXpathXPath *)v;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTemplatesElemSort)

inline jlong OrgApacheXalanTemplatesElemSort_get_serialVersionUID(void);
#define OrgApacheXalanTemplatesElemSort_serialVersionUID -4991510257335851938LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXalanTemplatesElemSort, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXalanTemplatesElemSort_init(OrgApacheXalanTemplatesElemSort *self);

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemSort *new_OrgApacheXalanTemplatesElemSort_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemSort *create_OrgApacheXalanTemplatesElemSort_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTemplatesElemSort)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemSort")
