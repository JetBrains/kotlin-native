//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/transformer/TreeWalker2Result.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTransformerTreeWalker2Result")
#ifdef RESTRICT_OrgApacheXalanTransformerTreeWalker2Result
#define INCLUDE_ALL_OrgApacheXalanTransformerTreeWalker2Result 0
#else
#define INCLUDE_ALL_OrgApacheXalanTransformerTreeWalker2Result 1
#endif
#undef RESTRICT_OrgApacheXalanTransformerTreeWalker2Result

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXalanTransformerTreeWalker2Result_) && (INCLUDE_ALL_OrgApacheXalanTransformerTreeWalker2Result || defined(INCLUDE_OrgApacheXalanTransformerTreeWalker2Result))
#define OrgApacheXalanTransformerTreeWalker2Result_

#define RESTRICT_OrgApacheXmlDtmRefDTMTreeWalker 1
#define INCLUDE_OrgApacheXmlDtmRefDTMTreeWalker 1
#include "org/apache/xml/dtm/ref/DTMTreeWalker.h"

@class OrgApacheXalanTransformerTransformerImpl;
@protocol OrgApacheXmlDtmDTM;
@protocol OrgApacheXmlSerializerSerializationHandler;
@protocol OrgXmlSaxContentHandler;

/*!
 @brief Handle a walk of a tree, but screen out attributes for
  the result tree.
 */
@interface OrgApacheXalanTransformerTreeWalker2Result : OrgApacheXmlDtmRefDTMTreeWalker {
 @public
  /*!
   @brief The transformer instance
   */
  OrgApacheXalanTransformerTransformerImpl *m_transformer_;
  /*!
   @brief The result tree handler
   */
  id<OrgApacheXmlSerializerSerializationHandler> m_handler_;
  /*!
   @brief Node where to start the tree walk
   */
  jint m_startNode_;
}

#pragma mark Public

/*!
 @brief Constructor.
 @param transformer Non-null transformer instance
 @param handler The Result tree handler to use
 */
- (instancetype __nonnull)initWithOrgApacheXalanTransformerTransformerImpl:(OrgApacheXalanTransformerTransformerImpl *)transformer
                            withOrgApacheXmlSerializerSerializationHandler:(id<OrgApacheXmlSerializerSerializationHandler>)handler;

/*!
 @brief Perform a pre-order traversal non-recursive style.
 @param pos Start node for traversal
 @throw TransformerException
 */
- (void)traverseWithInt:(jint)pos;

#pragma mark Protected

/*!
 @brief End processing of given node
 @param node Node we just finished processing
 @throw org.xml.sax.SAXException
 */
- (void)endNodeWithInt:(jint)node;

/*!
 @brief Start traversal of the tree at the given node
 @param node Starting node for traversal
 @throw TransformerException
 */
- (void)startNodeWithInt:(jint)node;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)arg0
                                   withOrgApacheXmlDtmDTM:(id<OrgApacheXmlDtmDTM>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTransformerTreeWalker2Result)

J2OBJC_FIELD_SETTER(OrgApacheXalanTransformerTreeWalker2Result, m_transformer_, OrgApacheXalanTransformerTransformerImpl *)
J2OBJC_FIELD_SETTER(OrgApacheXalanTransformerTreeWalker2Result, m_handler_, id<OrgApacheXmlSerializerSerializationHandler>)

FOUNDATION_EXPORT void OrgApacheXalanTransformerTreeWalker2Result_initWithOrgApacheXalanTransformerTransformerImpl_withOrgApacheXmlSerializerSerializationHandler_(OrgApacheXalanTransformerTreeWalker2Result *self, OrgApacheXalanTransformerTransformerImpl *transformer, id<OrgApacheXmlSerializerSerializationHandler> handler);

FOUNDATION_EXPORT OrgApacheXalanTransformerTreeWalker2Result *new_OrgApacheXalanTransformerTreeWalker2Result_initWithOrgApacheXalanTransformerTransformerImpl_withOrgApacheXmlSerializerSerializationHandler_(OrgApacheXalanTransformerTransformerImpl *transformer, id<OrgApacheXmlSerializerSerializationHandler> handler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTransformerTreeWalker2Result *create_OrgApacheXalanTransformerTreeWalker2Result_initWithOrgApacheXalanTransformerTransformerImpl_withOrgApacheXmlSerializerSerializationHandler_(OrgApacheXalanTransformerTransformerImpl *transformer, id<OrgApacheXmlSerializerSerializationHandler> handler);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTransformerTreeWalker2Result)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTransformerTreeWalker2Result")
