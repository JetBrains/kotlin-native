//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/processor/ProcessorInclude.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanProcessorProcessorInclude")
#ifdef RESTRICT_OrgApacheXalanProcessorProcessorInclude
#define INCLUDE_ALL_OrgApacheXalanProcessorProcessorInclude 0
#else
#define INCLUDE_ALL_OrgApacheXalanProcessorProcessorInclude 1
#endif
#undef RESTRICT_OrgApacheXalanProcessorProcessorInclude

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXalanProcessorProcessorInclude_) && (INCLUDE_ALL_OrgApacheXalanProcessorProcessorInclude || defined(INCLUDE_OrgApacheXalanProcessorProcessorInclude))
#define OrgApacheXalanProcessorProcessorInclude_

#define RESTRICT_OrgApacheXalanProcessorXSLTElementProcessor 1
#define INCLUDE_OrgApacheXalanProcessorXSLTElementProcessor 1
#include "org/apache/xalan/processor/XSLTElementProcessor.h"

@class OrgApacheXalanProcessorStylesheetHandler;
@protocol JavaxXmlTransformSource;
@protocol OrgXmlSaxAttributes;

/*!
 @brief TransformerFactory class for xsl:include markup.
 - seealso: <a href="http://www.w3.org/TR/xslt#dtd">XSLT DTD</a>
 - seealso: <a href="http://www.w3.org/TR/xslt#include">include in XSLT Specification</a>
 */
@interface OrgApacheXalanProcessorProcessorInclude : OrgApacheXalanProcessorXSLTElementProcessor
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Get the base identifier with which this stylesheet is associated.
 @return non-null reference to the href attribute string, or 
          null if setHref has not been called.
 */
- (NSString *)getHref;

/*!
 @brief Get the base identifier with which this stylesheet is associated.
 @param baseIdent Should be a non-null reference to a valid URL string.
 */
- (void)setHrefWithNSString:(NSString *)baseIdent;

/*!
 @brief Receive notification of the start of an xsl:include element.
 @param handler The calling StylesheetHandler/TemplatesBuilder.
 @param uri The Namespace URI, or the empty string if the         element has no Namespace URI or if Namespace
          processing is not being performed.
 @param localName The local name (without prefix), or the         empty string if Namespace processing is not being
          performed.
 @param rawName The raw XML 1.0 name (with prefix), or the         empty string if raw names are not available.
 @param attributes The attributes attached to the element.  If         there are no attributes, it shall be an empty
          Attributes object.
 @throw org.xml.sax.SAXExceptionAny SAX exception, possibly
             wrapping another exception.
 */
- (void)startElementWithOrgApacheXalanProcessorStylesheetHandler:(OrgApacheXalanProcessorStylesheetHandler *)handler
                                                    withNSString:(NSString *)uri
                                                    withNSString:(NSString *)localName
                                                    withNSString:(NSString *)rawName
                                         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)attributes;

#pragma mark Protected

/*!
 @brief Get the error number associated with this type of stylesheet including itself
 @return the appropriate error number
 */
- (NSString *)getStylesheetInclErr;

/*!
 @brief Get the stylesheet type associated with an included stylesheet
 @return the type of the stylesheet
 */
- (jint)getStylesheetType;

/*!
 @brief Set off a new parse for an included or imported stylesheet.This will 
  set the <code>StylesheetHandler</code> to a new state, and recurse in with 
  a new set of parse events.
 Once this function returns, the state of 
  the StylesheetHandler should be restored.
 @param handler non-null reference to current StylesheetHandler that is constructing the Templates.
 @param uri The Namespace URI, which should be the XSLT namespace.
 @param localName The local name (without prefix), which should be "include" or "import".
 @param rawName The qualified name (with prefix).
 @param attributes The list of attributes on the xsl:include or xsl:import element.
 @throw org.xml.sax.SAXExceptionAny SAX exception, possibly
             wrapping another exception.
 */
- (void)parseWithOrgApacheXalanProcessorStylesheetHandler:(OrgApacheXalanProcessorStylesheetHandler *)handler
                                             withNSString:(NSString *)uri
                                             withNSString:(NSString *)localName
                                             withNSString:(NSString *)rawName
                                  withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)attributes;

/*!
 @brief This method does nothing, but a class that extends this class could
  over-ride it and do some processing of the source.
 @param handler The calling StylesheetHandler/TemplatesBuilder.
 @param source The source of the included stylesheet.
 @return the same or an equivalent source to what was passed in.
 */
- (id<JavaxXmlTransformSource>)processSourceWithOrgApacheXalanProcessorStylesheetHandler:(OrgApacheXalanProcessorStylesheetHandler *)handler
                                                             withJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanProcessorProcessorInclude)

inline jlong OrgApacheXalanProcessorProcessorInclude_get_serialVersionUID(void);
#define OrgApacheXalanProcessorProcessorInclude_serialVersionUID -4570078731972673481LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXalanProcessorProcessorInclude, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXalanProcessorProcessorInclude_init(OrgApacheXalanProcessorProcessorInclude *self);

FOUNDATION_EXPORT OrgApacheXalanProcessorProcessorInclude *new_OrgApacheXalanProcessorProcessorInclude_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanProcessorProcessorInclude *create_OrgApacheXalanProcessorProcessorInclude_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanProcessorProcessorInclude)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanProcessorProcessorInclude")
