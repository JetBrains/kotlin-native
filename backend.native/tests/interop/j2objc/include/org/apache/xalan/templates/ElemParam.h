//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/templates/ElemParam.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemParam")
#ifdef RESTRICT_OrgApacheXalanTemplatesElemParam
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemParam 0
#else
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemParam 1
#endif
#undef RESTRICT_OrgApacheXalanTemplatesElemParam

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXalanTemplatesElemParam_) && (INCLUDE_ALL_OrgApacheXalanTemplatesElemParam || defined(INCLUDE_OrgApacheXalanTemplatesElemParam))
#define OrgApacheXalanTemplatesElemParam_

#define RESTRICT_OrgApacheXalanTemplatesElemVariable 1
#define INCLUDE_OrgApacheXalanTemplatesElemVariable 1
#include "org/apache/xalan/templates/ElemVariable.h"

@class OrgApacheXalanTemplatesStylesheetRoot;
@class OrgApacheXalanTransformerTransformerImpl;

/*!
 @brief Implement xsl:param.
 @code

   <!ELEMENT xsl:param %template;>
   <!ATTLIST xsl:param
    name %qname; #REQUIRED
    select %expr; #IMPLIED 
  >
   
@endcode
 - seealso: <a href="http://www.w3.org/TR/xslt#variables">variables in XSLT Specification</a>
 */
@interface OrgApacheXalanTemplatesElemParam : OrgApacheXalanTemplatesElemVariable {
 @public
  jint m_qnameID_;
}
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

/*!
 @brief Constructor ElemParam
 */
- (instancetype __nonnull)init;

/*!
 @brief Copy constructor.
 @param param Element from an xsl:param
 @throw TransformerException
 */
- (instancetype __nonnull)initWithOrgApacheXalanTemplatesElemParam:(OrgApacheXalanTemplatesElemParam *)param;

/*!
 @brief This function is called after everything else has been
  recomposed, and allows the template to set remaining
  values that may be based on some other property that
  depends on recomposition.
 */
- (void)composeWithOrgApacheXalanTemplatesStylesheetRoot:(OrgApacheXalanTemplatesStylesheetRoot *)sroot;

/*!
 @brief Execute a variable declaration and push it onto the variable stack.
 - seealso: <a href="http://www.w3.org/TR/xslt#variables">variables in XSLT Specification</a>
 @param transformer non-null reference to the the current transform-time state.
 @throw TransformerException
 */
- (void)executeWithOrgApacheXalanTransformerTransformerImpl:(OrgApacheXalanTransformerTransformerImpl *)transformer;

/*!
 @brief Return the node name.
 @return The element's name
 */
- (NSString *)getNodeName;

/*!
 @brief Get an int constant identifying the type of element.
 - seealso: org.apache.xalan.templates.Constants
 @return The token ID of the element
 */
- (jint)getXSLToken;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheXalanTemplatesElemVariable:(OrgApacheXalanTemplatesElemVariable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTemplatesElemParam)

inline jlong OrgApacheXalanTemplatesElemParam_get_serialVersionUID(void);
#define OrgApacheXalanTemplatesElemParam_serialVersionUID -1131781475589006431LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXalanTemplatesElemParam, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXalanTemplatesElemParam_init(OrgApacheXalanTemplatesElemParam *self);

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemParam *new_OrgApacheXalanTemplatesElemParam_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemParam *create_OrgApacheXalanTemplatesElemParam_init(void);

FOUNDATION_EXPORT void OrgApacheXalanTemplatesElemParam_initWithOrgApacheXalanTemplatesElemParam_(OrgApacheXalanTemplatesElemParam *self, OrgApacheXalanTemplatesElemParam *param);

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemParam *new_OrgApacheXalanTemplatesElemParam_initWithOrgApacheXalanTemplatesElemParam_(OrgApacheXalanTemplatesElemParam *param) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemParam *create_OrgApacheXalanTemplatesElemParam_initWithOrgApacheXalanTemplatesElemParam_(OrgApacheXalanTemplatesElemParam *param);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTemplatesElemParam)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemParam")
