//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/templates/ElemExtensionDecl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemExtensionDecl")
#ifdef RESTRICT_OrgApacheXalanTemplatesElemExtensionDecl
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemExtensionDecl 0
#else
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemExtensionDecl 1
#endif
#undef RESTRICT_OrgApacheXalanTemplatesElemExtensionDecl

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheXalanTemplatesElemExtensionDecl_) && (INCLUDE_ALL_OrgApacheXalanTemplatesElemExtensionDecl || defined(INCLUDE_OrgApacheXalanTemplatesElemExtensionDecl))
#define OrgApacheXalanTemplatesElemExtensionDecl_

#define RESTRICT_OrgApacheXalanTemplatesElemTemplateElement 1
#define INCLUDE_OrgApacheXalanTemplatesElemTemplateElement 1
#include "org/apache/xalan/templates/ElemTemplateElement.h"

@class OrgApacheXalanTemplatesStylesheetRoot;
@class OrgApacheXalanTransformerTransformerImpl;
@class OrgApacheXmlUtilsStringVector;

/*!
 @brief Implement the declaration of an extension element
 */
@interface OrgApacheXalanTemplatesElemExtensionDecl : OrgApacheXalanTemplatesElemTemplateElement
@property (readonly, class) jlong serialVersionUID NS_SWIFT_NAME(serialVersionUID);

+ (jlong)serialVersionUID;

#pragma mark Public

/*!
 @brief Constructor ElemExtensionDecl
 */
- (instancetype __nonnull)init;

- (void)composeWithOrgApacheXalanTemplatesStylesheetRoot:(OrgApacheXalanTemplatesStylesheetRoot *)sroot;

/*!
 @brief Get the element at the given index
 @param i Index of element to get
 @return The element at the given index
 @throw ArrayIndexOutOfBoundsException
 */
- (NSString *)getElementWithInt:(jint)i;

/*!
 @brief Return the count of elements defined for this extension element
 @return the count of elements defined for this extension element
 */
- (jint)getElementCount;

/*!
 @brief Get StringVector of elements defined for this extension
 @return StringVector of elements defined for this extension
 */
- (OrgApacheXmlUtilsStringVector *)getElements;

/*!
 @brief Get a function at a given index in this extension element
 @param i Index of function to get
 @return Name of Function at given index
 @throw ArrayIndexOutOfBoundsException
 */
- (NSString *)getFunctionWithInt:(jint)i;

/*!
 @brief Get count of functions defined in this extension element
 @return count of functions defined in this extension element
 */
- (jint)getFunctionCount;

/*!
 @brief Get the names of functions defined in this extension
 @return StringVector holding the names of functions defined in this extension
 */
- (OrgApacheXmlUtilsStringVector *)getFunctions;

/*!
 @brief Get the prefix for this extension element
 @return Prefix for this extension element
 */
- (NSString *)getPrefix;

/*!
 @brief Get an int constant identifying the type of element.
 - seealso: org.apache.xalan.templates.Constants
 @return The token ID for this element
 */
- (jint)getXSLToken;

/*!
 @brief This function will be called on top-level elements
  only, just before the transform begins.
 @param transformer The XSLT TransformerFactory.
 @throw TransformerException
 */
- (void)runtimeInitWithOrgApacheXalanTransformerTransformerImpl:(OrgApacheXalanTransformerTransformerImpl *)transformer;

/*!
 @brief Set StringVector of elements for this extension
 @param v StringVector of elements to set
 */
- (void)setElementsWithOrgApacheXmlUtilsStringVector:(OrgApacheXmlUtilsStringVector *)v;

/*!
 @brief Set the names of functions defined in this extension
 @param v StringVector holding the names of functions defined in this extension
 */
- (void)setFunctionsWithOrgApacheXmlUtilsStringVector:(OrgApacheXmlUtilsStringVector *)v;

/*!
 @brief Set the prefix for this extension element
 @param v Prefix to set for this extension element
 */
- (void)setPrefixWithNSString:(NSString *)v;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTemplatesElemExtensionDecl)

inline jlong OrgApacheXalanTemplatesElemExtensionDecl_get_serialVersionUID(void);
#define OrgApacheXalanTemplatesElemExtensionDecl_serialVersionUID -4692738885172766789LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXalanTemplatesElemExtensionDecl, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXalanTemplatesElemExtensionDecl_init(OrgApacheXalanTemplatesElemExtensionDecl *self);

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemExtensionDecl *new_OrgApacheXalanTemplatesElemExtensionDecl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemExtensionDecl *create_OrgApacheXalanTemplatesElemExtensionDecl_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTemplatesElemExtensionDecl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemExtensionDecl")
