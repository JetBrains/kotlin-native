//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/luni/src/main/java/org/xml/sax/helpers/LocatorImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgXmlSaxHelpersLocatorImpl")
#ifdef RESTRICT_OrgXmlSaxHelpersLocatorImpl
#define INCLUDE_ALL_OrgXmlSaxHelpersLocatorImpl 0
#else
#define INCLUDE_ALL_OrgXmlSaxHelpersLocatorImpl 1
#endif
#undef RESTRICT_OrgXmlSaxHelpersLocatorImpl

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgXmlSaxHelpersLocatorImpl_) && (INCLUDE_ALL_OrgXmlSaxHelpersLocatorImpl || defined(INCLUDE_OrgXmlSaxHelpersLocatorImpl))
#define OrgXmlSaxHelpersLocatorImpl_

#define RESTRICT_OrgXmlSaxLocator 1
#define INCLUDE_OrgXmlSaxLocator 1
#include "org/xml/sax/Locator.h"

/*!
 @brief Provide an optional convenience implementation of Locator.
 <blockquote>
  <em>This module, both source code and documentation, is in the
  Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>
  See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>
  for further information. 
 </blockquote>
  
 <p>This class is available mainly for application writers, who
  can use it to make a persistent snapshot of a locator at any
  point during a document parse:</p>
  
 @code

  Locator locator;
  Locator startloc;
  public void setLocator (Locator locator)
  {
          // note the locator
    this.locator = locator;
  }
  public void startDocument ()
  {
          // save the location of the start of the document
          // for future use.
    Locator startloc = new LocatorImpl(locator);
  }
 
@endcode
  
 <p>Normally, parser writers will not use this class, since it
  is more efficient to provide location information only when
  requested, rather than constantly updating a Locator object.</p>
 @since SAX 1.0
 @author David Megginson
 @version 2.0.1 (sax2r2)
 - seealso: org.xml.sax.LocatorLocator
 */
@interface OrgXmlSaxHelpersLocatorImpl : NSObject < OrgXmlSaxLocator >

#pragma mark Public

/*!
 @brief Zero-argument constructor.
 <p>This will not normally be useful, since the main purpose
  of this class is to make a snapshot of an existing Locator.</p>
 */
- (instancetype __nonnull)init;

/*!
 @brief Copy constructor.
 <p>Create a persistent copy of the current state of a locator.
  When the original locator changes, this copy will still keep
  the original values (and it can be used outside the scope of
  DocumentHandler methods).</p>
 @param locator The locator to copy.
 */
- (instancetype __nonnull)initWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator;

/*!
 @brief Return the saved column number (1-based).
 @return The column number as an integer, or -1 if none is available.
 - seealso: org.xml.sax.Locator#getColumnNumber
 - seealso: #setColumnNumber
 */
- (jint)getColumnNumber;

/*!
 @brief Return the saved line number (1-based).
 @return The line number as an integer, or -1 if none is available.
 - seealso: org.xml.sax.Locator#getLineNumber
 - seealso: #setLineNumber
 */
- (jint)getLineNumber;

/*!
 @brief Return the saved public identifier.
 @return The public identifier as a string, or null if none
          is available.
 - seealso: org.xml.sax.Locator#getPublicId
 - seealso: #setPublicId
 */
- (NSString *)getPublicId;

/*!
 @brief Return the saved system identifier.
 @return The system identifier as a string, or null if none
          is available.
 - seealso: org.xml.sax.Locator#getSystemId
 - seealso: #setSystemId
 */
- (NSString *)getSystemId;

/*!
 @brief Set the column number for this locator (1-based).
 @param columnNumber The column number, or -1 if none is available.
 - seealso: #getColumnNumber
 */
- (void)setColumnNumberWithInt:(jint)columnNumber;

/*!
 @brief Set the line number for this locator (1-based).
 @param lineNumber The line number, or -1 if none is available.
 - seealso: #getLineNumber
 */
- (void)setLineNumberWithInt:(jint)lineNumber;

/*!
 @brief Set the public identifier for this locator.
 @param publicId The new public identifier, or null         if none is available.
 - seealso: #getPublicId
 */
- (void)setPublicIdWithNSString:(NSString *)publicId;

/*!
 @brief Set the system identifier for this locator.
 @param systemId The new system identifier, or null         if none is available.
 - seealso: #getSystemId
 */
- (void)setSystemIdWithNSString:(NSString *)systemId;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgXmlSaxHelpersLocatorImpl)

FOUNDATION_EXPORT void OrgXmlSaxHelpersLocatorImpl_init(OrgXmlSaxHelpersLocatorImpl *self);

FOUNDATION_EXPORT OrgXmlSaxHelpersLocatorImpl *new_OrgXmlSaxHelpersLocatorImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgXmlSaxHelpersLocatorImpl *create_OrgXmlSaxHelpersLocatorImpl_init(void);

FOUNDATION_EXPORT void OrgXmlSaxHelpersLocatorImpl_initWithOrgXmlSaxLocator_(OrgXmlSaxHelpersLocatorImpl *self, id<OrgXmlSaxLocator> locator);

FOUNDATION_EXPORT OrgXmlSaxHelpersLocatorImpl *new_OrgXmlSaxHelpersLocatorImpl_initWithOrgXmlSaxLocator_(id<OrgXmlSaxLocator> locator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgXmlSaxHelpersLocatorImpl *create_OrgXmlSaxHelpersLocatorImpl_initWithOrgXmlSaxLocator_(id<OrgXmlSaxLocator> locator);

J2OBJC_TYPE_LITERAL_HEADER(OrgXmlSaxHelpersLocatorImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgXmlSaxHelpersLocatorImpl")
