//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/exceptions/misusing/UnfinishedMockingSessionException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException")
#ifdef RESTRICT_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException
#define INCLUDE_ALL_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException 0
#else
#define INCLUDE_ALL_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException 1
#endif
#undef RESTRICT_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoExceptionsMisusingUnfinishedMockingSessionException_) && (INCLUDE_ALL_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException || defined(INCLUDE_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException))
#define OrgMockitoExceptionsMisusingUnfinishedMockingSessionException_

#define RESTRICT_OrgMockitoExceptionsBaseMockitoException 1
#define INCLUDE_OrgMockitoExceptionsBaseMockitoException 1
#include "org/mockito/exceptions/base/MockitoException.h"

@class JavaLangThrowable;

/*!
 @brief This exception prevents the user from forgetting to use <code>MockitoSession.finishMocking()</code>.
 When <code>MockitoSession</code> is started is used
  it needs to be concluded with <code>MockitoSession.finishMocking()</code>.
  <p>
  For details on mocking session lifecycle see <code>MockitoSessionBuilder.startMocking()</code>
  and <code>MockitoSession.finishMocking()</code>. For examples of use see <code>MockitoSession</code>.
 @since 2.7.0
 */
@interface OrgMockitoExceptionsMisusingUnfinishedMockingSessionException : OrgMockitoExceptionsBaseMockitoException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoExceptionsMisusingUnfinishedMockingSessionException)

FOUNDATION_EXPORT void OrgMockitoExceptionsMisusingUnfinishedMockingSessionException_initWithNSString_(OrgMockitoExceptionsMisusingUnfinishedMockingSessionException *self, NSString *message);

FOUNDATION_EXPORT OrgMockitoExceptionsMisusingUnfinishedMockingSessionException *new_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoExceptionsMisusingUnfinishedMockingSessionException *create_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException_initWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoExceptionsMisusingUnfinishedMockingSessionException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoExceptionsMisusingUnfinishedMockingSessionException")
