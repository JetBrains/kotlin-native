//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/exceptions/misusing/InjectMocksException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoExceptionsMisusingInjectMocksException")
#ifdef RESTRICT_OrgMockitoExceptionsMisusingInjectMocksException
#define INCLUDE_ALL_OrgMockitoExceptionsMisusingInjectMocksException 0
#else
#define INCLUDE_ALL_OrgMockitoExceptionsMisusingInjectMocksException 1
#endif
#undef RESTRICT_OrgMockitoExceptionsMisusingInjectMocksException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoExceptionsMisusingInjectMocksException_) && (INCLUDE_ALL_OrgMockitoExceptionsMisusingInjectMocksException || defined(INCLUDE_OrgMockitoExceptionsMisusingInjectMocksException))
#define OrgMockitoExceptionsMisusingInjectMocksException_

#define RESTRICT_OrgMockitoExceptionsBaseMockitoException 1
#define INCLUDE_OrgMockitoExceptionsBaseMockitoException 1
#include "org/mockito/exceptions/base/MockitoException.h"

@class JavaLangThrowable;

/*!
 @brief Thrown when creation of test subject annotated with InjectMocks fails.
 */
@interface OrgMockitoExceptionsMisusingInjectMocksException : OrgMockitoExceptionsBaseMockitoException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)message
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoExceptionsMisusingInjectMocksException)

FOUNDATION_EXPORT void OrgMockitoExceptionsMisusingInjectMocksException_initWithNSString_withJavaLangThrowable_(OrgMockitoExceptionsMisusingInjectMocksException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgMockitoExceptionsMisusingInjectMocksException *new_OrgMockitoExceptionsMisusingInjectMocksException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoExceptionsMisusingInjectMocksException *create_OrgMockitoExceptionsMisusingInjectMocksException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoExceptionsMisusingInjectMocksException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoExceptionsMisusingInjectMocksException")
