//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/plugins/AnnotationEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoPluginsAnnotationEngine")
#ifdef RESTRICT_OrgMockitoPluginsAnnotationEngine
#define INCLUDE_ALL_OrgMockitoPluginsAnnotationEngine 0
#else
#define INCLUDE_ALL_OrgMockitoPluginsAnnotationEngine 1
#endif
#undef RESTRICT_OrgMockitoPluginsAnnotationEngine

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoPluginsAnnotationEngine_) && (INCLUDE_ALL_OrgMockitoPluginsAnnotationEngine || defined(INCLUDE_OrgMockitoPluginsAnnotationEngine))
#define OrgMockitoPluginsAnnotationEngine_

@class IOSClass;

/*!
 @brief Configures test via annotations.
 <p>Mockito default engine handles the logic behind &#064;Mock, &#064;Captor, &#064;Spy and &#064;InjectMocks annotations. 
 <p>This interface is an extension point that make possible to use a different annotation engine allowing to extend
  or replace mockito default engine. 
 <p>
  If you are interested then see implementations or source code of <code>org.mockito.MockitoAnnotations.initMocks(Object)</code>
  
 <p>This plugin mechanism supersedes the <code>org.mockito.configuration.IMockitoConfiguration</code>
  in regard of switching mockito components.
 */
@protocol OrgMockitoPluginsAnnotationEngine < JavaObject >

/*!
 @brief Processes the test instance to configure annotated members.
 @param clazz Class where to extract field information, check implementation for details
 @param testInstance Test instance
 */
- (void)processWithIOSClass:(IOSClass *)clazz
                     withId:(id)testInstance;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoPluginsAnnotationEngine)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoPluginsAnnotationEngine)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoPluginsAnnotationEngine")
