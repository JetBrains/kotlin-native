//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/listeners/VerificationStartedListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoListenersVerificationStartedListener")
#ifdef RESTRICT_OrgMockitoListenersVerificationStartedListener
#define INCLUDE_ALL_OrgMockitoListenersVerificationStartedListener 0
#else
#define INCLUDE_ALL_OrgMockitoListenersVerificationStartedListener 1
#endif
#undef RESTRICT_OrgMockitoListenersVerificationStartedListener

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoListenersVerificationStartedListener_) && (INCLUDE_ALL_OrgMockitoListenersVerificationStartedListener || defined(INCLUDE_OrgMockitoListenersVerificationStartedListener))
#define OrgMockitoListenersVerificationStartedListener_

@protocol OrgMockitoListenersVerificationStartedEvent;

/*!
 @brief This listener gets notified when the user starts verification.
 It allows to replace the mock object for verification.
  This API is not needed for regular Mockito users who want to write beautiful and clean tests.
  It is only needed for advanced framework integrations where there are multiple layers of proxying.
  An example framework that leverages this API is <a href="https://projects.spring.io/spring-boot/">Spring Boot</a>.
  For details about the use case see <a href="https://github.com/mockito/mockito/issues/1191">issue 1191</a>.
  For sample code see <code>VerificationStartedListenerTest</code> class.
  Mockito is Open Source so feel free to dive into the code! 
 <p>
  How can you add listeners?
  The listener is attached to the mock object during creation: 
 <pre class="code"><code class="java">
      List mock = Mockito.mock(List.class, withSettings().verificationStartedListeners(myListener)); 
 
@endcode
  When multiple listeners are added, they are notified in order.
  There is no reason to add multiple listeners but we wanted to keep the API simple and consistent with how we manage Mock object listeners.
  See <code>org.mockito.MockSettings.verificationStartedListeners(VerificationStartedListener...)</code>.
  <p>
  When is the listener notified? 
 <pre class="code"><code class="java">
      //given verification:
      verify(mock).someMethod();
      //let's slit it into 2 distinct steps so that it is easy to explain:
      //step 1
      verify(mock);
      //step 2
      mock.someMethod();
      //the listener is notified during step 1
      //step 2 is when Mockito attempts to verify the method call 
 
@endcode
  <p>
  What can I do when the listener is notified?
  The main reason we added this listener to the API is to allow to replace the mock object that is about to be verified.
  This is a pretty hardcore use case, needed by other frameworks that wrap Mockito with another layer of proxying.
  Such framework may need to unwrap the outer proxy layer and pass genuine Mockito mock to the verification.
  For specific use case how it is needed by Spring Boot, see <a href="https://github.com/mockito/mockito/issues/1191">issue 1191</a>.
  <p>
  When do I use the listener?
  Unless you write a framework that integrates with Mockito, there is no reason for you to use this API.
  Keep mocking and writing great unit tests!
 @since 2.11.0
 */
@protocol OrgMockitoListenersVerificationStartedListener < JavaObject >

/*!
 @brief Triggered when the user calls <code>Mockito.verify()</code>.
 For details see <code>VerificationStartedListener</code>.
 @param event object that allows to identify and replace mock for verification.
 @since 2.11.0
 */
- (void)onVerificationStartedWithOrgMockitoListenersVerificationStartedEvent:(id<OrgMockitoListenersVerificationStartedEvent>)event;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoListenersVerificationStartedListener)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoListenersVerificationStartedListener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoListenersVerificationStartedListener")
