//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/util/reflection/InstanceField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionInstanceField")
#ifdef RESTRICT_OrgMockitoInternalUtilReflectionInstanceField
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionInstanceField 0
#else
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionInstanceField 1
#endif
#undef RESTRICT_OrgMockitoInternalUtilReflectionInstanceField

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalUtilReflectionInstanceField_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionInstanceField || defined(INCLUDE_OrgMockitoInternalUtilReflectionInstanceField))
#define OrgMockitoInternalUtilReflectionInstanceField_

@class IOSClass;
@class JavaLangReflectField;
@protocol JavaLangAnnotationAnnotation;

/*!
 @brief Represents an accessible instance field.
 Contains the instance reference on which the field can be read adn write.
 */
@interface OrgMockitoInternalUtilReflectionInstanceField : NSObject

#pragma mark Public

/*!
 @brief Create a new InstanceField.
 @param field The field that should be accessed, note that no checks are performed to ensure               the field belong to this instance class.
 @param instance The instance from which the field shall be accessed.
 */
- (instancetype __nonnull)initWithJavaLangReflectField:(JavaLangReflectField *)field
                                                withId:(id)instance;

/*!
 @brief Returns the annotation instance for the given annotation type.
 @param annotationClass Tha annotation type to retrieve.
 @return The annotation instance.
 */
- (id<JavaLangAnnotationAnnotation>)annotationWithIOSClass:(IOSClass *)annotationClass;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

/*!
 @brief Check if the field is annotated by the given annotation.
 @param annotationClass The annotation type to check.
 @return <code>true</code> if the field is annotated by this annotation, else <code>false</code>.
 */
- (jboolean)isAnnotatedByWithIOSClass:(IOSClass *)annotationClass;

/*!
 @brief Check that the field is not null.
 @return <code>true</code> if <code>null</code>, else <code>false</code>.
 */
- (jboolean)isNull;

/*!
 @brief Check if the field is synthetic.
 @return <code>true</code> if the field is synthetic, else <code>false</code>.
 */
- (jboolean)isSynthetic;

/*!
 @brief Returns the JDK <code>Field</code> instance.
 @return The actual <code>Field</code> instance.
 */
- (JavaLangReflectField *)jdkField;

/*!
 @brief Returns the name of the field.
 @return Name of the field.
 */
- (NSString *)name;

/*!
 @brief Safely read the field.
 @return the field value.
 - seealso: FieldReader
 */
- (id)read;

/*!
 @brief Set the given value to the field of this instance.
 @param value The value that should be written to the field.
 - seealso: FieldSetter
 */
- (void)setWithId:(id)value;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionInstanceField)

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionInstanceField_initWithJavaLangReflectField_withId_(OrgMockitoInternalUtilReflectionInstanceField *self, JavaLangReflectField *field, id instance);

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionInstanceField *new_OrgMockitoInternalUtilReflectionInstanceField_initWithJavaLangReflectField_withId_(JavaLangReflectField *field, id instance) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionInstanceField *create_OrgMockitoInternalUtilReflectionInstanceField_initWithJavaLangReflectField_withId_(JavaLangReflectField *field, id instance);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionInstanceField)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionInstanceField")
