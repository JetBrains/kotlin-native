//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/invocation/ArgumentMatcherAction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalInvocationArgumentMatcherAction")
#ifdef RESTRICT_OrgMockitoInternalInvocationArgumentMatcherAction
#define INCLUDE_ALL_OrgMockitoInternalInvocationArgumentMatcherAction 0
#else
#define INCLUDE_ALL_OrgMockitoInternalInvocationArgumentMatcherAction 1
#endif
#undef RESTRICT_OrgMockitoInternalInvocationArgumentMatcherAction

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalInvocationArgumentMatcherAction_) && (INCLUDE_ALL_OrgMockitoInternalInvocationArgumentMatcherAction || defined(INCLUDE_OrgMockitoInternalInvocationArgumentMatcherAction))
#define OrgMockitoInternalInvocationArgumentMatcherAction_

@protocol OrgMockitoArgumentMatcher;

@protocol OrgMockitoInternalInvocationArgumentMatcherAction < JavaObject >

/*!
 @brief Implementations must apply the given matcher to the argument and return 
 <code>true</code> if the operation was successful or <code>false</code>
  if not.In this case no more matchers and arguments will be passed by 
 <code>MatcherApplicationStrategy.forEachMatcherAndArgument(ArgumentMatcherAction)</code> to this method.
  .
 @param matcher to process the argument, never 
  <code> null </code>
 @param argument to be processed by the matcher, can be 
  <code> null </code>
 @return <ul>
          <li><code>true</code> if the <b>matcher</b> was successfully
          applied to the <b>argument</b> and the next pair of matcher and
          argument should be passed         
 <li><code>false</code> otherwise
          </ul>
 */
- (jboolean)applyWithOrgMockitoArgumentMatcher:(id<OrgMockitoArgumentMatcher>)matcher
                                        withId:(id)argument;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalInvocationArgumentMatcherAction)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalInvocationArgumentMatcherAction)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalInvocationArgumentMatcherAction")
