//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/junit/StubbingArgMismatches.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalJunitStubbingArgMismatches")
#ifdef RESTRICT_OrgMockitoInternalJunitStubbingArgMismatches
#define INCLUDE_ALL_OrgMockitoInternalJunitStubbingArgMismatches 0
#else
#define INCLUDE_ALL_OrgMockitoInternalJunitStubbingArgMismatches 1
#endif
#undef RESTRICT_OrgMockitoInternalJunitStubbingArgMismatches

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalJunitStubbingArgMismatches_) && (INCLUDE_ALL_OrgMockitoInternalJunitStubbingArgMismatches || defined(INCLUDE_OrgMockitoInternalJunitStubbingArgMismatches))
#define OrgMockitoInternalJunitStubbingArgMismatches_

@protocol JavaUtilMap;
@protocol OrgMockitoInternalUtilMockitoLogger;
@protocol OrgMockitoInvocationInvocation;

/*!
 @brief Contains stubbing arg mismatches, knows how to format them
 */
@interface OrgMockitoInternalJunitStubbingArgMismatches : NSObject {
 @public
  id<JavaUtilMap> mismatches_;
}

#pragma mark Public

- (void)addWithOrgMockitoInvocationInvocation:(id<OrgMockitoInvocationInvocation>)invocation
           withOrgMockitoInvocationInvocation:(id<OrgMockitoInvocationInvocation>)stubbing;

- (void)formatWithNSString:(NSString *)testName
withOrgMockitoInternalUtilMockitoLogger:(id<OrgMockitoInternalUtilMockitoLogger>)logger;

- (jint)size;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalJunitStubbingArgMismatches)

J2OBJC_FIELD_SETTER(OrgMockitoInternalJunitStubbingArgMismatches, mismatches_, id<JavaUtilMap>)

FOUNDATION_EXPORT void OrgMockitoInternalJunitStubbingArgMismatches_initPackagePrivate(OrgMockitoInternalJunitStubbingArgMismatches *self);

FOUNDATION_EXPORT OrgMockitoInternalJunitStubbingArgMismatches *new_OrgMockitoInternalJunitStubbingArgMismatches_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalJunitStubbingArgMismatches *create_OrgMockitoInternalJunitStubbingArgMismatches_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalJunitStubbingArgMismatches)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalJunitStubbingArgMismatches")
