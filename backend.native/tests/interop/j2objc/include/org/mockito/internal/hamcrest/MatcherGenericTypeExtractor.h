//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/hamcrest/MatcherGenericTypeExtractor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor")
#ifdef RESTRICT_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor
#define INCLUDE_ALL_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor 0
#else
#define INCLUDE_ALL_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor 1
#endif
#undef RESTRICT_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalHamcrestMatcherGenericTypeExtractor_) && (INCLUDE_ALL_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor || defined(INCLUDE_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor))
#define OrgMockitoInternalHamcrestMatcherGenericTypeExtractor_

@class IOSClass;

/*!
 @brief Extracts generic type of matcher
 */
@interface OrgMockitoInternalHamcrestMatcherGenericTypeExtractor : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Gets the generic type of given matcher.For example,
  for matcher class that extends BaseMatcher[Integer] this method returns Integer
 */
+ (IOSClass *)genericTypeOfMatcherWithIOSClass:(IOSClass *)matcherClass;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalHamcrestMatcherGenericTypeExtractor)

FOUNDATION_EXPORT void OrgMockitoInternalHamcrestMatcherGenericTypeExtractor_init(OrgMockitoInternalHamcrestMatcherGenericTypeExtractor *self);

FOUNDATION_EXPORT OrgMockitoInternalHamcrestMatcherGenericTypeExtractor *new_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalHamcrestMatcherGenericTypeExtractor *create_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor_init(void);

FOUNDATION_EXPORT IOSClass *OrgMockitoInternalHamcrestMatcherGenericTypeExtractor_genericTypeOfMatcherWithIOSClass_(IOSClass *matcherClass);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalHamcrestMatcherGenericTypeExtractor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalHamcrestMatcherGenericTypeExtractor")
