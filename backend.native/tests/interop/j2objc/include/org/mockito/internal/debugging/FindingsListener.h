//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/debugging/FindingsListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalDebuggingFindingsListener")
#ifdef RESTRICT_OrgMockitoInternalDebuggingFindingsListener
#define INCLUDE_ALL_OrgMockitoInternalDebuggingFindingsListener 0
#else
#define INCLUDE_ALL_OrgMockitoInternalDebuggingFindingsListener 1
#endif
#undef RESTRICT_OrgMockitoInternalDebuggingFindingsListener

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalDebuggingFindingsListener_) && (INCLUDE_ALL_OrgMockitoInternalDebuggingFindingsListener || defined(INCLUDE_OrgMockitoInternalDebuggingFindingsListener))
#define OrgMockitoInternalDebuggingFindingsListener_

@class OrgMockitoInternalInvocationInvocationMatcher;
@protocol OrgMockitoInvocationInvocation;

@protocol OrgMockitoInternalDebuggingFindingsListener < JavaObject >

- (void)foundStubCalledWithDifferentArgsWithOrgMockitoInvocationInvocation:(id<OrgMockitoInvocationInvocation>)unused
                         withOrgMockitoInternalInvocationInvocationMatcher:(OrgMockitoInternalInvocationInvocationMatcher *)unstubbed;

- (void)foundUnusedStubWithOrgMockitoInvocationInvocation:(id<OrgMockitoInvocationInvocation>)unused;

- (void)foundUnstubbedWithOrgMockitoInternalInvocationInvocationMatcher:(OrgMockitoInternalInvocationInvocationMatcher *)unstubbed;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalDebuggingFindingsListener)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalDebuggingFindingsListener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalDebuggingFindingsListener")
