//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/debugging/LocationImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalDebuggingLocationImpl")
#ifdef RESTRICT_OrgMockitoInternalDebuggingLocationImpl
#define INCLUDE_ALL_OrgMockitoInternalDebuggingLocationImpl 0
#else
#define INCLUDE_ALL_OrgMockitoInternalDebuggingLocationImpl 1
#endif
#undef RESTRICT_OrgMockitoInternalDebuggingLocationImpl

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalDebuggingLocationImpl_) && (INCLUDE_ALL_OrgMockitoInternalDebuggingLocationImpl || defined(INCLUDE_OrgMockitoInternalDebuggingLocationImpl))
#define OrgMockitoInternalDebuggingLocationImpl_

#define RESTRICT_OrgMockitoInvocationLocation 1
#define INCLUDE_OrgMockitoInvocationLocation 1
#include "org/mockito/invocation/Location.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaLangThrowable;
@class OrgMockitoInternalExceptionsStacktraceStackTraceFilter;

@interface OrgMockitoInternalDebuggingLocationImpl : NSObject < OrgMockitoInvocationLocation, JavaIoSerializable >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithOrgMockitoInternalExceptionsStacktraceStackTraceFilter:(OrgMockitoInternalExceptionsStacktraceStackTraceFilter *)stackTraceFilter;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)stackTraceHolder;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgMockitoInternalDebuggingLocationImpl)

FOUNDATION_EXPORT void OrgMockitoInternalDebuggingLocationImpl_init(OrgMockitoInternalDebuggingLocationImpl *self);

FOUNDATION_EXPORT OrgMockitoInternalDebuggingLocationImpl *new_OrgMockitoInternalDebuggingLocationImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalDebuggingLocationImpl *create_OrgMockitoInternalDebuggingLocationImpl_init(void);

FOUNDATION_EXPORT void OrgMockitoInternalDebuggingLocationImpl_initWithOrgMockitoInternalExceptionsStacktraceStackTraceFilter_(OrgMockitoInternalDebuggingLocationImpl *self, OrgMockitoInternalExceptionsStacktraceStackTraceFilter *stackTraceFilter);

FOUNDATION_EXPORT OrgMockitoInternalDebuggingLocationImpl *new_OrgMockitoInternalDebuggingLocationImpl_initWithOrgMockitoInternalExceptionsStacktraceStackTraceFilter_(OrgMockitoInternalExceptionsStacktraceStackTraceFilter *stackTraceFilter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalDebuggingLocationImpl *create_OrgMockitoInternalDebuggingLocationImpl_initWithOrgMockitoInternalExceptionsStacktraceStackTraceFilter_(OrgMockitoInternalExceptionsStacktraceStackTraceFilter *stackTraceFilter);

FOUNDATION_EXPORT void OrgMockitoInternalDebuggingLocationImpl_initWithJavaLangThrowable_(OrgMockitoInternalDebuggingLocationImpl *self, JavaLangThrowable *stackTraceHolder);

FOUNDATION_EXPORT OrgMockitoInternalDebuggingLocationImpl *new_OrgMockitoInternalDebuggingLocationImpl_initWithJavaLangThrowable_(JavaLangThrowable *stackTraceHolder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalDebuggingLocationImpl *create_OrgMockitoInternalDebuggingLocationImpl_initWithJavaLangThrowable_(JavaLangThrowable *stackTraceHolder);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalDebuggingLocationImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalDebuggingLocationImpl")
