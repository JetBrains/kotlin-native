//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/debugging/InvocationsPrinter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalDebuggingInvocationsPrinter")
#ifdef RESTRICT_OrgMockitoInternalDebuggingInvocationsPrinter
#define INCLUDE_ALL_OrgMockitoInternalDebuggingInvocationsPrinter 0
#else
#define INCLUDE_ALL_OrgMockitoInternalDebuggingInvocationsPrinter 1
#endif
#undef RESTRICT_OrgMockitoInternalDebuggingInvocationsPrinter

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalDebuggingInvocationsPrinter_) && (INCLUDE_ALL_OrgMockitoInternalDebuggingInvocationsPrinter || defined(INCLUDE_OrgMockitoInternalDebuggingInvocationsPrinter))
#define OrgMockitoInternalDebuggingInvocationsPrinter_

/*!
 @brief Prints invocations in human-readable, printable way
 */
@interface OrgMockitoInternalDebuggingInvocationsPrinter : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (NSString *)printInvocationsWithId:(id)mock;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalDebuggingInvocationsPrinter)

FOUNDATION_EXPORT void OrgMockitoInternalDebuggingInvocationsPrinter_init(OrgMockitoInternalDebuggingInvocationsPrinter *self);

FOUNDATION_EXPORT OrgMockitoInternalDebuggingInvocationsPrinter *new_OrgMockitoInternalDebuggingInvocationsPrinter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalDebuggingInvocationsPrinter *create_OrgMockitoInternalDebuggingInvocationsPrinter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalDebuggingInvocationsPrinter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalDebuggingInvocationsPrinter")
