//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/stubbing/InvocationContainerImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalStubbingInvocationContainerImpl")
#ifdef RESTRICT_OrgMockitoInternalStubbingInvocationContainerImpl
#define INCLUDE_ALL_OrgMockitoInternalStubbingInvocationContainerImpl 0
#else
#define INCLUDE_ALL_OrgMockitoInternalStubbingInvocationContainerImpl 1
#endif
#undef RESTRICT_OrgMockitoInternalStubbingInvocationContainerImpl

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalStubbingInvocationContainerImpl_) && (INCLUDE_ALL_OrgMockitoInternalStubbingInvocationContainerImpl || defined(INCLUDE_OrgMockitoInternalStubbingInvocationContainerImpl))
#define OrgMockitoInternalStubbingInvocationContainerImpl_

#define RESTRICT_OrgMockitoInvocationInvocationContainer 1
#define INCLUDE_OrgMockitoInvocationInvocationContainer 1
#include "org/mockito/invocation/InvocationContainer.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class OrgMockitoInternalStubbingStubbedInvocationMatcher;
@class OrgMockitoQualityStrictness;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol OrgMockitoInvocationInvocation;
@protocol OrgMockitoInvocationMatchableInvocation;
@protocol OrgMockitoMockMockCreationSettings;
@protocol OrgMockitoStubbingAnswer;

@interface OrgMockitoInternalStubbingInvocationContainerImpl : NSObject < OrgMockitoInvocationInvocationContainer, JavaIoSerializable >

#pragma mark Public

- (instancetype __nonnull)initWithOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)mockSettings;

/*!
 @brief Adds new stubbed answer and returns the invocation matcher the answer was added to.
 */
- (OrgMockitoInternalStubbingStubbedInvocationMatcher *)addAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer
                                                                                  withBoolean:(jboolean)isConsecutive
                                                              withOrgMockitoQualityStrictness:(OrgMockitoQualityStrictness *)stubbingStrictness;

- (void)addAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer
              withOrgMockitoQualityStrictness:(OrgMockitoQualityStrictness *)stubbingStrictness;

- (void)addConsecutiveAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

- (void)clearInvocations;

- (OrgMockitoInternalStubbingStubbedInvocationMatcher *)findAnswerForWithOrgMockitoInvocationInvocation:(id<OrgMockitoInvocationInvocation>)invocation;

- (id<OrgMockitoInvocationMatchableInvocation>)getInvocationForStubbing;

- (id<JavaUtilList>)getInvocations;

/*!
 @brief Stubbings in ascending order, most recent last
 */
- (id<JavaUtilCollection>)getStubbingsAscending;

/*!
 @brief Stubbings in descending order, most recent first
 */
- (id<JavaUtilList>)getStubbingsDescending;

- (jboolean)hasAnswersForStubbing;

- (jboolean)hasInvocationForPotentialStubbing;

- (id)invokedMock;

- (void)resetInvocationForPotentialStubbingWithOrgMockitoInvocationMatchableInvocation:(id<OrgMockitoInvocationMatchableInvocation>)invocationMatcher;

/*!
 @brief Sets the answers declared with 'doAnswer' style.
 */
- (void)setAnswersForStubbingWithJavaUtilList:(id<JavaUtilList>)answers
              withOrgMockitoQualityStrictness:(OrgMockitoQualityStrictness *)strictness;

- (void)setInvocationForPotentialStubbingWithOrgMockitoInvocationMatchableInvocation:(id<OrgMockitoInvocationMatchableInvocation>)invocation;

- (void)setMethodForStubbingWithOrgMockitoInvocationMatchableInvocation:(id<OrgMockitoInvocationMatchableInvocation>)invocation;

- (NSString *)description;

#pragma mark Package-Private

- (id)answerToWithOrgMockitoInvocationInvocation:(id<OrgMockitoInvocationInvocation>)invocation;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalStubbingInvocationContainerImpl)

FOUNDATION_EXPORT void OrgMockitoInternalStubbingInvocationContainerImpl_initWithOrgMockitoMockMockCreationSettings_(OrgMockitoInternalStubbingInvocationContainerImpl *self, id<OrgMockitoMockMockCreationSettings> mockSettings);

FOUNDATION_EXPORT OrgMockitoInternalStubbingInvocationContainerImpl *new_OrgMockitoInternalStubbingInvocationContainerImpl_initWithOrgMockitoMockMockCreationSettings_(id<OrgMockitoMockMockCreationSettings> mockSettings) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalStubbingInvocationContainerImpl *create_OrgMockitoInternalStubbingInvocationContainerImpl_initWithOrgMockitoMockMockCreationSettings_(id<OrgMockitoMockMockCreationSettings> mockSettings);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalStubbingInvocationContainerImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalStubbingInvocationContainerImpl")
