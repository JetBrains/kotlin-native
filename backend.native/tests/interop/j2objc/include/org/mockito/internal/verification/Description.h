//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/verification/Description.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalVerificationDescription")
#ifdef RESTRICT_OrgMockitoInternalVerificationDescription
#define INCLUDE_ALL_OrgMockitoInternalVerificationDescription 0
#else
#define INCLUDE_ALL_OrgMockitoInternalVerificationDescription 1
#endif
#undef RESTRICT_OrgMockitoInternalVerificationDescription

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalVerificationDescription_) && (INCLUDE_ALL_OrgMockitoInternalVerificationDescription || defined(INCLUDE_OrgMockitoInternalVerificationDescription))
#define OrgMockitoInternalVerificationDescription_

#define RESTRICT_OrgMockitoVerificationVerificationMode 1
#define INCLUDE_OrgMockitoVerificationVerificationMode 1
#include "org/mockito/verification/VerificationMode.h"

@protocol OrgMockitoInternalVerificationApiVerificationData;

/*!
 @brief Description verification mode wraps an existing verification mode and prepends
  a custom message to the assertion error if verification fails.
 @author Geoff.Schoeman
 @since 2.1.0
 */
@interface OrgMockitoInternalVerificationDescription : NSObject < OrgMockitoVerificationVerificationMode >

#pragma mark Public

/*!
 @brief Constructs a verification mode which wraps the given verification mode.
 @param verification The implementation to use for verification
 @param description_ The failure message to prepend if verification fails
 */
- (instancetype __nonnull)initWithOrgMockitoVerificationVerificationMode:(id<OrgMockitoVerificationVerificationMode>)verification
                                                            withNSString:(NSString *)description_;

- (id<OrgMockitoVerificationVerificationMode>)description__WithNSString:(NSString *)description_;

/*!
 @brief Performs verification using the wrapped verification mode implementation.
 Prepends the custom failure message if verification fails.
 @param data the data to be verified
 */
- (void)verifyWithOrgMockitoInternalVerificationApiVerificationData:(id<OrgMockitoInternalVerificationApiVerificationData>)data;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalVerificationDescription)

FOUNDATION_EXPORT void OrgMockitoInternalVerificationDescription_initWithOrgMockitoVerificationVerificationMode_withNSString_(OrgMockitoInternalVerificationDescription *self, id<OrgMockitoVerificationVerificationMode> verification, NSString *description_);

FOUNDATION_EXPORT OrgMockitoInternalVerificationDescription *new_OrgMockitoInternalVerificationDescription_initWithOrgMockitoVerificationVerificationMode_withNSString_(id<OrgMockitoVerificationVerificationMode> verification, NSString *description_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalVerificationDescription *create_OrgMockitoInternalVerificationDescription_initWithOrgMockitoVerificationVerificationMode_withNSString_(id<OrgMockitoVerificationVerificationMode> verification, NSString *description_);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalVerificationDescription)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalVerificationDescription")
