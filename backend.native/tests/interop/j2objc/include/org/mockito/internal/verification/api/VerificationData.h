//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/verification/api/VerificationData.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalVerificationApiVerificationData")
#ifdef RESTRICT_OrgMockitoInternalVerificationApiVerificationData
#define INCLUDE_ALL_OrgMockitoInternalVerificationApiVerificationData 0
#else
#define INCLUDE_ALL_OrgMockitoInternalVerificationApiVerificationData 1
#endif
#undef RESTRICT_OrgMockitoInternalVerificationApiVerificationData

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalVerificationApiVerificationData_) && (INCLUDE_ALL_OrgMockitoInternalVerificationApiVerificationData || defined(INCLUDE_OrgMockitoInternalVerificationApiVerificationData))
#define OrgMockitoInternalVerificationApiVerificationData_

@class OrgMockitoInternalInvocationInvocationMatcher;
@protocol JavaUtilList;
@protocol OrgMockitoInvocationMatchableInvocation;

/*!
 @brief Data needed to perform verification of interactions.
 This interface is considered public even though it lives in private package.
  In the next major version of Mockito, this class will be moved to public space.
 */
@protocol OrgMockitoInternalVerificationApiVerificationData < JavaObject >

/*!
 @brief All invocations recorded on the mock object that is being verified.
 Does not include invocations recorded on other mock objects.
 */
- (id<JavaUtilList>)getAllInvocations;

/*!
 @brief The target or wanted invocation.
 Below example illustrates what is the 'target' invocation: 
 <pre class="code"><code class="java">
    mock.foo();   // <- invocation 1
    mock.bar();   // <- invocation 2
    verify(mock).bar();  // <- target invocation 
 </code>
@endcode
  Target invocation can contain argument matchers therefore the returned type is <code>MatchableInvocation</code>
  and not <code>Invocation</code>.
 @since 2.2.12
 */
- (id<OrgMockitoInvocationMatchableInvocation>)getTarget;

/*!
 */
- (OrgMockitoInternalInvocationInvocationMatcher *)getWanted __attribute__((deprecated));

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalVerificationApiVerificationData)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalVerificationApiVerificationData)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalVerificationApiVerificationData")
