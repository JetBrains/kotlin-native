//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/util/reflection/FieldInitializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer")
#ifdef RESTRICT_OrgMockitoInternalUtilReflectionFieldInitializer
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer 0
#else
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer 1
#endif
#undef RESTRICT_OrgMockitoInternalUtilReflectionFieldInitializer
#ifdef INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator
#define INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator 1
#endif
#ifdef INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator
#define INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator 1
#endif

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalUtilReflectionFieldInitializer_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer || defined(INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer))
#define OrgMockitoInternalUtilReflectionFieldInitializer_

@class JavaLangReflectField;
@class OrgMockitoInternalUtilReflectionFieldInitializationReport;
@protocol OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver;

/*!
 @brief Initialize a field with type instance if a default constructor can be found.
 <p>
  If the given field is already initialized, then <strong>the actual instance is returned</strong>.
  This initializer doesn't work with inner classes, local classes, interfaces or abstract types. 
 </p>
 */
@interface OrgMockitoInternalUtilReflectionFieldInitializer : NSObject

#pragma mark Public

/*!
 @brief Prepare initializer with the given field on the given instance.
 <p>
  This constructor fail fast if the field type cannot be handled. 
 </p>
 @param fieldOwner Instance of the test.
 @param field Field to be initialize.
 */
- (instancetype __nonnull)initWithId:(id)fieldOwner
            withJavaLangReflectField:(JavaLangReflectField *)field;

/*!
 @brief Prepare initializer with the given field on the given instance.
 <p>
  This constructor fail fast if the field type cannot be handled. 
 </p>
 @param fieldOwner Instance of the test.
 @param field Field to be initialize.
 @param argResolver Constructor parameters resolver
 */
- (instancetype __nonnull)initWithId:(id)fieldOwner
            withJavaLangReflectField:(JavaLangReflectField *)field
withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver:(id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver>)argResolver;

/*!
 @brief Initialize field if not initialized and return the actual instance.
 @return Actual field instance.
 */
- (OrgMockitoInternalUtilReflectionFieldInitializationReport *)initialize__ OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionFieldInitializer)

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionFieldInitializer_initWithId_withJavaLangReflectField_(OrgMockitoInternalUtilReflectionFieldInitializer *self, id fieldOwner, JavaLangReflectField *field);

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer *new_OrgMockitoInternalUtilReflectionFieldInitializer_initWithId_withJavaLangReflectField_(id fieldOwner, JavaLangReflectField *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer *create_OrgMockitoInternalUtilReflectionFieldInitializer_initWithId_withJavaLangReflectField_(id fieldOwner, JavaLangReflectField *field);

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionFieldInitializer_initWithId_withJavaLangReflectField_withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_(OrgMockitoInternalUtilReflectionFieldInitializer *self, id fieldOwner, JavaLangReflectField *field, id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver> argResolver);

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer *new_OrgMockitoInternalUtilReflectionFieldInitializer_initWithId_withJavaLangReflectField_withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_(id fieldOwner, JavaLangReflectField *field, id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver> argResolver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer *create_OrgMockitoInternalUtilReflectionFieldInitializer_initWithId_withJavaLangReflectField_withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_(id fieldOwner, JavaLangReflectField *field, id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver> argResolver);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionFieldInitializer)

#endif

#if !defined (OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer || defined(INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver))
#define OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_

@class IOSObjectArray;

/*!
 @brief Represents the strategy used to resolve actual instances
  to be given to a constructor given the argument types.
 */
@protocol OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver < JavaObject >

/*!
 @brief Try to resolve instances from types.
 <p>
  Checks on the real argument type or on the correct argument number
  will happen during the field initialization <code>FieldInitializer.initialize()</code>.
  I.e the only responsibility of this method, is to provide instances <strong>if possible</strong>.
  </p>
 @param argTypes Constructor argument types, should not be null.
 @return The argument instances to be given to the constructor, should not be null.
 */
- (IOSObjectArray *)resolveTypeInstancesWithIOSClassArray:(IOSObjectArray *)argTypes;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver)

#endif

#if !defined (OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer || defined(INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator))
#define OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator_

@class OrgMockitoInternalUtilReflectionFieldInitializationReport;

@protocol OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator < JavaObject >

- (OrgMockitoInternalUtilReflectionFieldInitializationReport *)instantiate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator)

#endif

#if !defined (OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer || defined(INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator))
#define OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator_

@class JavaLangReflectField;
@class OrgMockitoInternalUtilReflectionFieldInitializationReport;

/*!
 @brief Constructor instantiating strategy for no-arg constructor.
 <p>
  If a no-arg constructor can be found then the instance is created using
  this constructor.
  Otherwise a technical MockitoException is thrown. 
 </p>
 */
@interface OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator : NSObject < OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator >

#pragma mark Public

- (OrgMockitoInternalUtilReflectionFieldInitializationReport *)instantiate;

#pragma mark Package-Private

/*!
 @brief Internal, checks are done by FieldInitializer.
 Fields are assumed to be accessible.
 */
- (instancetype __nonnull)initWithId:(id)testClass
            withJavaLangReflectField:(JavaLangReflectField *)field;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator)

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator_initWithId_withJavaLangReflectField_(OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator *self, id testClass, JavaLangReflectField *field);

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator *new_OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator_initWithId_withJavaLangReflectField_(id testClass, JavaLangReflectField *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator *create_OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator_initWithId_withJavaLangReflectField_(id testClass, JavaLangReflectField *field);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionFieldInitializer_NoArgConstructorInstantiator)

#endif

#if !defined (OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer || defined(INCLUDE_OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator))
#define OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator_

@class JavaLangReflectField;
@class OrgMockitoInternalUtilReflectionFieldInitializationReport;
@protocol OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver;

/*!
 @brief Constructor instantiating strategy for parameterized constructors.
 <p>
  Choose the constructor with the highest number of parameters, then
  call the ConstructorArgResolver to get actual argument instances.
  If the argResolver fail, then a technical MockitoException is thrown is thrown.
  Otherwise the instance is created with the resolved arguments. 
 </p>
 */
@interface OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator : NSObject < OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorInstantiator >

#pragma mark Public

- (OrgMockitoInternalUtilReflectionFieldInitializationReport *)instantiate;

#pragma mark Package-Private

/*!
 @brief Internal, checks are done by FieldInitializer.
 Fields are assumed to be accessible.
 */
- (instancetype __nonnull)initWithId:(id)testClass
            withJavaLangReflectField:(JavaLangReflectField *)field
withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver:(id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver>)argumentResolver;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator)

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator_initWithId_withJavaLangReflectField_withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_(OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator *self, id testClass, JavaLangReflectField *field, id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver> argumentResolver);

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator *new_OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator_initWithId_withJavaLangReflectField_withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_(id testClass, JavaLangReflectField *field, id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver> argumentResolver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator *create_OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator_initWithId_withJavaLangReflectField_withOrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver_(id testClass, JavaLangReflectField *field, id<OrgMockitoInternalUtilReflectionFieldInitializer_ConstructorArgumentResolver> argumentResolver);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionFieldInitializer_ParameterizedConstructorInstantiator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionFieldInitializer")
