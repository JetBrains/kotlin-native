//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/configuration/injection/filter/TerminalMockCandidateFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter")
#ifdef RESTRICT_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter
#define INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter 0
#else
#define INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter 1
#endif
#undef RESTRICT_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter_) && (INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter || defined(INCLUDE_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter))
#define OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter_

#define RESTRICT_OrgMockitoInternalConfigurationInjectionFilterMockCandidateFilter 1
#define INCLUDE_OrgMockitoInternalConfigurationInjectionFilterMockCandidateFilter 1
#include "org/mockito/internal/configuration/injection/filter/MockCandidateFilter.h"

@class JavaLangReflectField;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol OrgMockitoInternalConfigurationInjectionFilterOngoingInjector;

/*!
 @brief This node returns an actual injecter which will be either : 
 <ul>
  <li>an <code>OngoingInjector</code> that do nothing if a candidate couldn't be found</li>
  <li>an <code>OngoingInjector</code> that will try to inject the candidate trying first the property setter then if not possible try the field access</li>
  </ul>
 */
@interface OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter : NSObject < OrgMockitoInternalConfigurationInjectionFilterMockCandidateFilter >

#pragma mark Public

- (instancetype __nonnull)init;

- (id<OrgMockitoInternalConfigurationInjectionFilterOngoingInjector>)filterCandidateWithJavaUtilCollection:(id<JavaUtilCollection>)mocks
                                                                                  withJavaLangReflectField:(JavaLangReflectField *)candidateFieldToBeInjected
                                                                                          withJavaUtilList:(id<JavaUtilList>)allRemainingCandidateFields
                                                                                                    withId:(id)injectee;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter)

FOUNDATION_EXPORT void OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter_init(OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter *self);

FOUNDATION_EXPORT OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter *new_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter *create_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionFilterTerminalMockCandidateFilter")
