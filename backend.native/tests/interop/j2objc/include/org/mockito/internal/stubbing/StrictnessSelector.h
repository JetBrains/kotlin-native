//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/stubbing/StrictnessSelector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalStubbingStrictnessSelector")
#ifdef RESTRICT_OrgMockitoInternalStubbingStrictnessSelector
#define INCLUDE_ALL_OrgMockitoInternalStubbingStrictnessSelector 0
#else
#define INCLUDE_ALL_OrgMockitoInternalStubbingStrictnessSelector 1
#endif
#undef RESTRICT_OrgMockitoInternalStubbingStrictnessSelector

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalStubbingStrictnessSelector_) && (INCLUDE_ALL_OrgMockitoInternalStubbingStrictnessSelector || defined(INCLUDE_OrgMockitoInternalStubbingStrictnessSelector))
#define OrgMockitoInternalStubbingStrictnessSelector_

@class OrgMockitoQualityStrictness;
@protocol OrgMockitoMockMockCreationSettings;
@protocol OrgMockitoStubbingStubbing;

/*!
 @brief Helps determining the actual strictness given that it can be configured in multiple ways (at mock, at stubbing, in rule)
 */
@interface OrgMockitoInternalStubbingStrictnessSelector : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Determines the actual strictness in the following importance order:
  1st - strictness configured when declaring stubbing;
  2nd - strictness configured at mock level;
  3rd - strictness configured at test level (rule, mockito session)
 @param stubbing stubbing to check for strictness. Null permitted.
 @param mockSettings settings of the mock object, may or may not have strictness configured. Must not be null.
 @param testLevelStrictness strictness configured using the test-level configuration (rule, mockito session). Null permitted.
 @return actual strictness, can be null.
 */
+ (OrgMockitoQualityStrictness *)determineStrictnessWithOrgMockitoStubbingStubbing:(id<OrgMockitoStubbingStubbing>)stubbing
                                            withOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)mockSettings
                                                   withOrgMockitoQualityStrictness:(OrgMockitoQualityStrictness *)testLevelStrictness;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalStubbingStrictnessSelector)

FOUNDATION_EXPORT void OrgMockitoInternalStubbingStrictnessSelector_init(OrgMockitoInternalStubbingStrictnessSelector *self);

FOUNDATION_EXPORT OrgMockitoInternalStubbingStrictnessSelector *new_OrgMockitoInternalStubbingStrictnessSelector_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalStubbingStrictnessSelector *create_OrgMockitoInternalStubbingStrictnessSelector_init(void);

FOUNDATION_EXPORT OrgMockitoQualityStrictness *OrgMockitoInternalStubbingStrictnessSelector_determineStrictnessWithOrgMockitoStubbingStubbing_withOrgMockitoMockMockCreationSettings_withOrgMockitoQualityStrictness_(id<OrgMockitoStubbingStubbing> stubbing, id<OrgMockitoMockMockCreationSettings> mockSettings, OrgMockitoQualityStrictness *testLevelStrictness);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalStubbingStrictnessSelector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalStubbingStrictnessSelector")
