//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/verification/VerificationOverTimeImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalVerificationVerificationOverTimeImpl")
#ifdef RESTRICT_OrgMockitoInternalVerificationVerificationOverTimeImpl
#define INCLUDE_ALL_OrgMockitoInternalVerificationVerificationOverTimeImpl 0
#else
#define INCLUDE_ALL_OrgMockitoInternalVerificationVerificationOverTimeImpl 1
#endif
#undef RESTRICT_OrgMockitoInternalVerificationVerificationOverTimeImpl

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalVerificationVerificationOverTimeImpl_) && (INCLUDE_ALL_OrgMockitoInternalVerificationVerificationOverTimeImpl || defined(INCLUDE_OrgMockitoInternalVerificationVerificationOverTimeImpl))
#define OrgMockitoInternalVerificationVerificationOverTimeImpl_

#define RESTRICT_OrgMockitoVerificationVerificationMode 1
#define INCLUDE_OrgMockitoVerificationVerificationMode 1
#include "org/mockito/verification/VerificationMode.h"

@class OrgMockitoInternalUtilTimer;
@protocol OrgMockitoInternalVerificationApiVerificationData;

/*!
 @brief Verifies that another verification mode (the delegate) is satisfied within a certain timeframe
  (before timeoutMillis has passed, measured from the call to verify()), and either returns immediately
  once it does, or waits until it is definitely satisfied once the full time has passed.
 */
@interface OrgMockitoInternalVerificationVerificationOverTimeImpl : NSObject < OrgMockitoVerificationVerificationMode >

#pragma mark Public

/*!
 @brief Create this verification mode, to be used to verify invocation ongoing data later.
 @param pollingPeriodMillis The frequency to poll delegate.verify(), to check whether the delegate has been satisfied
 @param durationMillis The max time to wait (in millis) for the delegate verification mode to be satisfied
 @param delegate The verification mode to delegate overall success or failure to
 @param returnOnSuccess Whether to immediately return successfully once the delegate is satisfied (as in                         
 <code>org.mockito.verification.VerificationWithTimeout</code> , or to only return once                         the delegate is satisfied and the full duration has passed (as in
                          
 <code>org.mockito.verification.VerificationAfterDelay</code> ).
 */
- (instancetype __nonnull)initWithLong:(jlong)pollingPeriodMillis
                              withLong:(jlong)durationMillis
withOrgMockitoVerificationVerificationMode:(id<OrgMockitoVerificationVerificationMode>)delegate
                           withBoolean:(jboolean)returnOnSuccess;

/*!
 @brief Create this verification mode, to be used to verify invocation ongoing data later.
 @param pollingPeriodMillis The frequency to poll delegate.verify(), to check whether the delegate has been satisfied
 @param delegate The verification mode to delegate overall success or failure to
 @param returnOnSuccess Whether to immediately return successfully once the delegate is satisfied (as in                         
 <code>org.mockito.verification.VerificationWithTimeout</code> , or to only return once                         the delegate is satisfied and the full duration has passed (as in
                          
 <code>org.mockito.verification.VerificationAfterDelay</code> ).
 @param timer Checker of whether the duration of the verification is still acceptable
 */
- (instancetype __nonnull)initWithLong:(jlong)pollingPeriodMillis
withOrgMockitoVerificationVerificationMode:(id<OrgMockitoVerificationVerificationMode>)delegate
                           withBoolean:(jboolean)returnOnSuccess
       withOrgMockitoInternalUtilTimer:(OrgMockitoInternalUtilTimer *)timer;

- (OrgMockitoInternalVerificationVerificationOverTimeImpl *)copyWithVerificationModeWithOrgMockitoVerificationVerificationMode:(id<OrgMockitoVerificationVerificationMode>)verificationMode OBJC_METHOD_FAMILY_NONE;

- (id<OrgMockitoVerificationVerificationMode>)description__WithNSString:(NSString *)description_;

- (id<OrgMockitoVerificationVerificationMode>)getDelegate;

- (jlong)getPollingPeriodMillis;

- (OrgMockitoInternalUtilTimer *)getTimer;

- (jboolean)isReturnOnSuccess;

/*!
 @brief Verify the given ongoing verification data, and confirm that it satisfies the delegate verification mode
  before the full duration has passed.
 In practice, this polls the delegate verification mode until it is satisfied. If it is not satisfied once
  the full duration has passed, the last error returned by the delegate verification mode will be thrown
  here in turn. This may be thrown early if the delegate is unsatisfied and the verification mode is known
  to never recover from this situation (e.g. <code>AtMost</code>).
  If it is satisfied before the full duration has passed, behaviour is dependent on the returnOnSuccess parameter
  given in the constructor. If true, this verification mode is immediately satisfied once the delegate is. If
  false, this verification mode is not satisfied until the delegate is satisfied and the full time has passed.
 @throw MockitoAssertionErrorif the delegate verification mode does not succeed before the timeout
 */
- (void)verifyWithOrgMockitoInternalVerificationApiVerificationData:(id<OrgMockitoInternalVerificationApiVerificationData>)data;

#pragma mark Protected

- (jboolean)canRecoverFromFailureWithOrgMockitoVerificationVerificationMode:(id<OrgMockitoVerificationVerificationMode>)verificationMode;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalVerificationVerificationOverTimeImpl)

FOUNDATION_EXPORT void OrgMockitoInternalVerificationVerificationOverTimeImpl_initWithLong_withLong_withOrgMockitoVerificationVerificationMode_withBoolean_(OrgMockitoInternalVerificationVerificationOverTimeImpl *self, jlong pollingPeriodMillis, jlong durationMillis, id<OrgMockitoVerificationVerificationMode> delegate, jboolean returnOnSuccess);

FOUNDATION_EXPORT OrgMockitoInternalVerificationVerificationOverTimeImpl *new_OrgMockitoInternalVerificationVerificationOverTimeImpl_initWithLong_withLong_withOrgMockitoVerificationVerificationMode_withBoolean_(jlong pollingPeriodMillis, jlong durationMillis, id<OrgMockitoVerificationVerificationMode> delegate, jboolean returnOnSuccess) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalVerificationVerificationOverTimeImpl *create_OrgMockitoInternalVerificationVerificationOverTimeImpl_initWithLong_withLong_withOrgMockitoVerificationVerificationMode_withBoolean_(jlong pollingPeriodMillis, jlong durationMillis, id<OrgMockitoVerificationVerificationMode> delegate, jboolean returnOnSuccess);

FOUNDATION_EXPORT void OrgMockitoInternalVerificationVerificationOverTimeImpl_initWithLong_withOrgMockitoVerificationVerificationMode_withBoolean_withOrgMockitoInternalUtilTimer_(OrgMockitoInternalVerificationVerificationOverTimeImpl *self, jlong pollingPeriodMillis, id<OrgMockitoVerificationVerificationMode> delegate, jboolean returnOnSuccess, OrgMockitoInternalUtilTimer *timer);

FOUNDATION_EXPORT OrgMockitoInternalVerificationVerificationOverTimeImpl *new_OrgMockitoInternalVerificationVerificationOverTimeImpl_initWithLong_withOrgMockitoVerificationVerificationMode_withBoolean_withOrgMockitoInternalUtilTimer_(jlong pollingPeriodMillis, id<OrgMockitoVerificationVerificationMode> delegate, jboolean returnOnSuccess, OrgMockitoInternalUtilTimer *timer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalVerificationVerificationOverTimeImpl *create_OrgMockitoInternalVerificationVerificationOverTimeImpl_initWithLong_withOrgMockitoVerificationVerificationMode_withBoolean_withOrgMockitoInternalUtilTimer_(jlong pollingPeriodMillis, id<OrgMockitoVerificationVerificationMode> delegate, jboolean returnOnSuccess, OrgMockitoInternalUtilTimer *timer);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalVerificationVerificationOverTimeImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalVerificationVerificationOverTimeImpl")
