//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/configuration/plugins/PluginRegistry.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsPluginRegistry")
#ifdef RESTRICT_OrgMockitoInternalConfigurationPluginsPluginRegistry
#define INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsPluginRegistry 0
#else
#define INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsPluginRegistry 1
#endif
#undef RESTRICT_OrgMockitoInternalConfigurationPluginsPluginRegistry

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalConfigurationPluginsPluginRegistry_) && (INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsPluginRegistry || defined(INCLUDE_OrgMockitoInternalConfigurationPluginsPluginRegistry))
#define OrgMockitoInternalConfigurationPluginsPluginRegistry_

@protocol OrgMockitoPluginsAnnotationEngine;
@protocol OrgMockitoPluginsInstantiatorProvider2;
@protocol OrgMockitoPluginsMockMaker;
@protocol OrgMockitoPluginsStackTraceCleanerProvider;

@interface OrgMockitoInternalConfigurationPluginsPluginRegistry : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

/*!
 @brief Returns the annotation engine available for the current runtime.
 <p>Returns <code>org.mockito.internal.configuration.InjectingAnnotationEngine</code> if no 
 <code>org.mockito.plugins.AnnotationEngine</code> extension exists or is visible in the current classpath.</p>
 */
- (id<OrgMockitoPluginsAnnotationEngine>)getAnnotationEngine;

/*!
 @brief Returns the instantiator provider available for the current runtime.
 <p>Returns <code>org.mockito.internal.creation.instance.DefaultInstantiatorProvider</code> if no 
 <code>org.mockito.plugins.InstantiatorProvider2</code> extension exists or is visible in the
  current classpath.</p>
 */
- (id<OrgMockitoPluginsInstantiatorProvider2>)getInstantiatorProvider;

/*!
 @brief Returns the implementation of the mock maker available for the current runtime.
 <p>Returns <code>org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker</code> if no 
 <code>org.mockito.plugins.MockMaker</code> extension exists or is visible in the current classpath.</p>
 */
- (id<OrgMockitoPluginsMockMaker>)getMockMaker;

/*!
 @brief The implementation of the stack trace cleaner
 */
- (id<OrgMockitoPluginsStackTraceCleanerProvider>)getStackTraceCleanerProvider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalConfigurationPluginsPluginRegistry)

FOUNDATION_EXPORT void OrgMockitoInternalConfigurationPluginsPluginRegistry_initPackagePrivate(OrgMockitoInternalConfigurationPluginsPluginRegistry *self);

FOUNDATION_EXPORT OrgMockitoInternalConfigurationPluginsPluginRegistry *new_OrgMockitoInternalConfigurationPluginsPluginRegistry_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalConfigurationPluginsPluginRegistry *create_OrgMockitoInternalConfigurationPluginsPluginRegistry_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalConfigurationPluginsPluginRegistry)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsPluginRegistry")
