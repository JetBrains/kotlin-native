//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner")
#ifdef RESTRICT_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner
#define INCLUDE_ALL_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner 0
#else
#define INCLUDE_ALL_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner 1
#endif
#undef RESTRICT_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner_) && (INCLUDE_ALL_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner || defined(INCLUDE_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner))
#define OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner_

#define RESTRICT_OrgMockitoExceptionsStacktraceStackTraceCleaner 1
#define INCLUDE_OrgMockitoExceptionsStacktraceStackTraceCleaner 1
#include "org/mockito/exceptions/stacktrace/StackTraceCleaner.h"

@class JavaLangStackTraceElement;

/*!
 @brief This predicate is used to filter "good" <code>StackTraceElement</code>.Good
 */
@interface OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner : NSObject < OrgMockitoExceptionsStacktraceStackTraceCleaner >

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)isInWithJavaLangStackTraceElement:(JavaLangStackTraceElement *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner)

FOUNDATION_EXPORT void OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner_init(OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner *self);

FOUNDATION_EXPORT OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner *new_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner *create_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalExceptionsStacktraceDefaultStackTraceCleaner")
