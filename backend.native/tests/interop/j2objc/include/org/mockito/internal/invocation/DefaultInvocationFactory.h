//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/invocation/DefaultInvocationFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalInvocationDefaultInvocationFactory")
#ifdef RESTRICT_OrgMockitoInternalInvocationDefaultInvocationFactory
#define INCLUDE_ALL_OrgMockitoInternalInvocationDefaultInvocationFactory 0
#else
#define INCLUDE_ALL_OrgMockitoInternalInvocationDefaultInvocationFactory 1
#endif
#undef RESTRICT_OrgMockitoInternalInvocationDefaultInvocationFactory

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalInvocationDefaultInvocationFactory_) && (INCLUDE_ALL_OrgMockitoInternalInvocationDefaultInvocationFactory || defined(INCLUDE_OrgMockitoInternalInvocationDefaultInvocationFactory))
#define OrgMockitoInternalInvocationDefaultInvocationFactory_

#define RESTRICT_OrgMockitoInvocationInvocationFactory 1
#define INCLUDE_OrgMockitoInvocationInvocationFactory 1
#include "org/mockito/invocation/InvocationFactory.h"

@class IOSObjectArray;
@class JavaLangReflectMethod;
@class OrgMockitoInternalInvocationInterceptedInvocation;
@protocol JavaUtilConcurrentCallable;
@protocol OrgMockitoInternalInvocationRealMethod;
@protocol OrgMockitoInvocationInvocation;
@protocol OrgMockitoInvocationInvocationFactory_RealMethodBehavior;
@protocol OrgMockitoInvocationLocation;
@protocol OrgMockitoMockMockCreationSettings;

@interface OrgMockitoInternalInvocationDefaultInvocationFactory : NSObject < OrgMockitoInvocationInvocationFactory >

#pragma mark Public

- (instancetype __nonnull)init;

+ (OrgMockitoInternalInvocationInterceptedInvocation *)createInvocationWithId:(id)mock
                                                    withJavaLangReflectMethod:(JavaLangReflectMethod *)invokedMethod
                                                            withNSObjectArray:(IOSObjectArray *)arguments
                                   withOrgMockitoInternalInvocationRealMethod:(id<OrgMockitoInternalInvocationRealMethod>)realMethod
                                       withOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)settings
                                             withOrgMockitoInvocationLocation:(id<OrgMockitoInvocationLocation>)location;

- (id<OrgMockitoInvocationInvocation>)createInvocationWithId:(id)target
                      withOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)settings
                                   withJavaLangReflectMethod:(JavaLangReflectMethod *)method
                              withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)realMethod
                                           withNSObjectArray:(IOSObjectArray *)args;

- (id<OrgMockitoInvocationInvocation>)createInvocationWithId:(id)target
                      withOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)settings
                                   withJavaLangReflectMethod:(JavaLangReflectMethod *)method
withOrgMockitoInvocationInvocationFactory_RealMethodBehavior:(id<OrgMockitoInvocationInvocationFactory_RealMethodBehavior>)realMethod
                                           withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalInvocationDefaultInvocationFactory)

FOUNDATION_EXPORT void OrgMockitoInternalInvocationDefaultInvocationFactory_init(OrgMockitoInternalInvocationDefaultInvocationFactory *self);

FOUNDATION_EXPORT OrgMockitoInternalInvocationDefaultInvocationFactory *new_OrgMockitoInternalInvocationDefaultInvocationFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalInvocationDefaultInvocationFactory *create_OrgMockitoInternalInvocationDefaultInvocationFactory_init(void);

FOUNDATION_EXPORT OrgMockitoInternalInvocationInterceptedInvocation *OrgMockitoInternalInvocationDefaultInvocationFactory_createInvocationWithId_withJavaLangReflectMethod_withNSObjectArray_withOrgMockitoInternalInvocationRealMethod_withOrgMockitoMockMockCreationSettings_withOrgMockitoInvocationLocation_(id mock, JavaLangReflectMethod *invokedMethod, IOSObjectArray *arguments, id<OrgMockitoInternalInvocationRealMethod> realMethod, id<OrgMockitoMockMockCreationSettings> settings, id<OrgMockitoInvocationLocation> location);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalInvocationDefaultInvocationFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalInvocationDefaultInvocationFactory")
