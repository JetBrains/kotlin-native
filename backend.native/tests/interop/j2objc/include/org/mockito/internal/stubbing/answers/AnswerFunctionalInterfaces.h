//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/internal/stubbing/answers/AnswerFunctionalInterfaces.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces")
#ifdef RESTRICT_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces
#define INCLUDE_ALL_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces 0
#else
#define INCLUDE_ALL_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces 1
#endif
#undef RESTRICT_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_) && (INCLUDE_ALL_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces || defined(INCLUDE_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces))
#define OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_

@protocol OrgMockitoStubbingAnswer1;
@protocol OrgMockitoStubbingAnswer2;
@protocol OrgMockitoStubbingAnswer3;
@protocol OrgMockitoStubbingAnswer4;
@protocol OrgMockitoStubbingAnswer5;
@protocol OrgMockitoStubbingAnswer;
@protocol OrgMockitoStubbingVoidAnswer1;
@protocol OrgMockitoStubbingVoidAnswer2;
@protocol OrgMockitoStubbingVoidAnswer3;
@protocol OrgMockitoStubbingVoidAnswer4;
@protocol OrgMockitoStubbingVoidAnswer5;

/*!
 @brief Functional interfaces to make it easy to implement answers in Java 8
 @since 2.1.0
 */
@interface OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces : NSObject

#pragma mark Public

/*!
 @brief Construct an answer from a two parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingAnswer1:(id<OrgMockitoStubbingAnswer1>)answer;

/*!
 @brief Construct an answer from a two parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingAnswer2:(id<OrgMockitoStubbingAnswer2>)answer;

/*!
 @brief Construct an answer from a three parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingAnswer3:(id<OrgMockitoStubbingAnswer3>)answer;

/*!
 @brief Construct an answer from a four parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingAnswer4:(id<OrgMockitoStubbingAnswer4>)answer;

/*!
 @brief Construct an answer from a five parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingAnswer5:(id<OrgMockitoStubbingAnswer5>)answer;

/*!
 @brief Construct an answer from a two parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingVoidAnswer1:(id<OrgMockitoStubbingVoidAnswer1>)answer;

/*!
 @brief Construct an answer from a two parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingVoidAnswer2:(id<OrgMockitoStubbingVoidAnswer2>)answer;

/*!
 @brief Construct an answer from a three parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingVoidAnswer3:(id<OrgMockitoStubbingVoidAnswer3>)answer;

/*!
 @brief Construct an answer from a four parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingVoidAnswer4:(id<OrgMockitoStubbingVoidAnswer4>)answer;

/*!
 @brief Construct an answer from a five parameter answer interface
 @param answer answer interface
 @return a new answer object
 */
+ (id<OrgMockitoStubbingAnswer>)toAnswerWithOrgMockitoStubbingVoidAnswer5:(id<OrgMockitoStubbingVoidAnswer5>)answer;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces)

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingAnswer1_(id<OrgMockitoStubbingAnswer1> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingVoidAnswer1_(id<OrgMockitoStubbingVoidAnswer1> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingAnswer2_(id<OrgMockitoStubbingAnswer2> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingVoidAnswer2_(id<OrgMockitoStubbingVoidAnswer2> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingAnswer3_(id<OrgMockitoStubbingAnswer3> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingVoidAnswer3_(id<OrgMockitoStubbingVoidAnswer3> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingAnswer4_(id<OrgMockitoStubbingAnswer4> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingVoidAnswer4_(id<OrgMockitoStubbingVoidAnswer4> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingAnswer5_(id<OrgMockitoStubbingAnswer5> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces_toAnswerWithOrgMockitoStubbingVoidAnswer5_(id<OrgMockitoStubbingVoidAnswer5> answer);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalStubbingAnswersAnswerFunctionalInterfaces")
