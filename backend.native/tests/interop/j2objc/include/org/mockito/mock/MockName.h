//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/mock/MockName.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoMockMockName")
#ifdef RESTRICT_OrgMockitoMockMockName
#define INCLUDE_ALL_OrgMockitoMockMockName 0
#else
#define INCLUDE_ALL_OrgMockitoMockMockName 1
#endif
#undef RESTRICT_OrgMockitoMockMockName

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoMockMockName_) && (INCLUDE_ALL_OrgMockitoMockMockName || defined(INCLUDE_OrgMockitoMockMockName))
#define OrgMockitoMockMockName_

/*!
 @brief Represents the name of the mock as shown in the verification failure reports, etc.
 */
@protocol OrgMockitoMockMockName < JavaObject >

/*!
 @brief the name
 */
- (NSString *)description;

/*!
 @brief default name means generated by Mockito.non-default means the user has named the mock at creation.
 */
- (jboolean)isDefault;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoMockMockName)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoMockMockName)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoMockMockName")
