//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/testing/mockito/build_result/java/org/mockito/verification/VerificationStrategy.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoVerificationVerificationStrategy")
#ifdef RESTRICT_OrgMockitoVerificationVerificationStrategy
#define INCLUDE_ALL_OrgMockitoVerificationVerificationStrategy 0
#else
#define INCLUDE_ALL_OrgMockitoVerificationVerificationStrategy 1
#endif
#undef RESTRICT_OrgMockitoVerificationVerificationStrategy

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoVerificationVerificationStrategy_) && (INCLUDE_ALL_OrgMockitoVerificationVerificationStrategy || defined(INCLUDE_OrgMockitoVerificationVerificationStrategy))
#define OrgMockitoVerificationVerificationStrategy_

@protocol OrgMockitoVerificationVerificationMode;

/*!
 @brief Strategy to possibly lazily perform verifications.
 */
@protocol OrgMockitoVerificationVerificationStrategy < JavaObject >

/*!
 @brief Possibly wrap the given VerificationMode and return a wrapping
  VerificationMode instead.
 @param mode The original mode.
 @return A wrapping mode that uses the original mode.
 */
- (id<OrgMockitoVerificationVerificationMode>)maybeVerifyLazilyWithOrgMockitoVerificationVerificationMode:(id<OrgMockitoVerificationVerificationMode>)mode;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoVerificationVerificationStrategy)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoVerificationVerificationStrategy)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoVerificationVerificationStrategy")
