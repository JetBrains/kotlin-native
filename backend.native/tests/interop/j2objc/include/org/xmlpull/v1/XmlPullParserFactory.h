//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/xml/src/main/java/org/xmlpull/v1/XmlPullParserFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgXmlpullV1XmlPullParserFactory")
#ifdef RESTRICT_OrgXmlpullV1XmlPullParserFactory
#define INCLUDE_ALL_OrgXmlpullV1XmlPullParserFactory 0
#else
#define INCLUDE_ALL_OrgXmlpullV1XmlPullParserFactory 1
#endif
#undef RESTRICT_OrgXmlpullV1XmlPullParserFactory

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgXmlpullV1XmlPullParserFactory_) && (INCLUDE_ALL_OrgXmlpullV1XmlPullParserFactory || defined(INCLUDE_OrgXmlpullV1XmlPullParserFactory))
#define OrgXmlpullV1XmlPullParserFactory_

@class IOSClass;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@protocol OrgXmlpullV1XmlPullParser;
@protocol OrgXmlpullV1XmlSerializer;

/*!
 @brief This class is used to create implementations of XML Pull Parser defined in XMPULL V1 API.
 - seealso: XmlPullParser
 @author <a href="http://www.extreme.indiana.edu/~aslom/">Aleksander Slominski</a>
 @author Stefan Haustein
 */
@interface OrgXmlpullV1XmlPullParserFactory : NSObject {
 @public
  JavaUtilArrayList *parserClasses_;
  JavaUtilArrayList *serializerClasses_;
  /*!
   @brief Unused, but we have to keep it because it's public API.
   */
  NSString *classNamesLocation_;
  JavaUtilHashMap *features_;
}
@property (readonly, copy, class) NSString *PROPERTY_NAME NS_SWIFT_NAME(PROPERTY_NAME);

+ (NSString *)PROPERTY_NAME;

#pragma mark Public

/*!
 @brief Return the current value of the feature with given name.
 <p><b>NOTE:</b> factory features are not used for XML Serializer.
 @param name The name of feature to be retrieved.
 @return The value of named feature.
      Unknown features are <string>always</strong> returned as false
 */
- (jboolean)getFeatureWithNSString:(NSString *)name;

/*!
 @brief Indicates whether or not the factory is configured to produce
  parsers which are namespace aware
  (it simply set feature XmlPullParser.FEATURE_PROCESS_NAMESPACES to true or false).
 @return true if the factory is configured to produce parsers
     which are namespace aware; false otherwise.
 */
- (jboolean)isNamespaceAware;

/*!
 @brief Indicates whether or not the factory is configured to produce parsers
  which validate the XML content during parse.
 @return true if the factory is configured to produce parsers
  which validate the XML content during parse; false otherwise.
 */
- (jboolean)isValidating;

/*!
 @brief Creates a new instance of a PullParserFactory that can be used
  to create XML pull parsers.The factory will always return instances
  of Android's built-in <code>XmlPullParser</code> and <code>XmlSerializer</code>.
 */
+ (OrgXmlpullV1XmlPullParserFactory *)newInstance OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Creates a factory that always returns instances of Android's built-in 
 <code>XmlPullParser</code> and <code>XmlSerializer</code> implementation.This
  <b>does not</b> support factories capable of creating arbitrary parser
  and serializer implementations.
 Both arguments to this method are unused.
 */
+ (OrgXmlpullV1XmlPullParserFactory *)newInstanceWithNSString:(NSString *)unused
                                                 withIOSClass:(IOSClass *)unused2 OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Creates a new instance of a XML Pull Parser
  using the currently configured factory features.
 @return A new instance of a XML Pull Parser.
 */
- (id<OrgXmlpullV1XmlPullParser>)newPullParser OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Creates a new instance of a XML Serializer.
 <p><b>NOTE:</b> factory features are not used for XML Serializer.
 @return A new instance of a XML Serializer.
 @throw XmlPullParserExceptionif a parser cannot be created which satisfies the
  requested configuration.
 */
- (id<OrgXmlpullV1XmlSerializer>)newSerializer OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Set the features to be set when XML Pull Parser is created by this factory.
 <p><b>NOTE:</b> factory features are not used for XML Serializer.
 @param name string with URI identifying feature
 @param state if true feature will be set; if false will be ignored
 */
- (void)setFeatureWithNSString:(NSString *)name
                   withBoolean:(jboolean)state;

/*!
 @brief Specifies that the parser produced by this factory will provide
  support for XML namespaces.
 By default the value of this is set to false.
 @param awareness true if the parser produced by this code     will provide support for XML namespaces;  false otherwise.
 */
- (void)setNamespaceAwareWithBoolean:(jboolean)awareness;

/*!
 @brief Specifies that the parser produced by this factory will be validating
  (it simply set feature XmlPullParser.FEATURE_VALIDATION to true or false).
 By default the value of this is set to false.
 @param validating - if true the parsers created by this factory  must be validating.
 */
- (void)setValidatingWithBoolean:(jboolean)validating;

#pragma mark Protected

/*!
 @brief Protected constructor to be called by factory implementations.
 */
- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgXmlpullV1XmlPullParserFactory)

J2OBJC_FIELD_SETTER(OrgXmlpullV1XmlPullParserFactory, parserClasses_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgXmlpullV1XmlPullParserFactory, serializerClasses_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgXmlpullV1XmlPullParserFactory, classNamesLocation_, NSString *)
J2OBJC_FIELD_SETTER(OrgXmlpullV1XmlPullParserFactory, features_, JavaUtilHashMap *)

inline NSString *OrgXmlpullV1XmlPullParserFactory_get_PROPERTY_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgXmlpullV1XmlPullParserFactory_PROPERTY_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgXmlpullV1XmlPullParserFactory, PROPERTY_NAME, NSString *)

FOUNDATION_EXPORT void OrgXmlpullV1XmlPullParserFactory_init(OrgXmlpullV1XmlPullParserFactory *self);

FOUNDATION_EXPORT OrgXmlpullV1XmlPullParserFactory *new_OrgXmlpullV1XmlPullParserFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgXmlpullV1XmlPullParserFactory *create_OrgXmlpullV1XmlPullParserFactory_init(void);

FOUNDATION_EXPORT OrgXmlpullV1XmlPullParserFactory *OrgXmlpullV1XmlPullParserFactory_newInstance(void);

FOUNDATION_EXPORT OrgXmlpullV1XmlPullParserFactory *OrgXmlpullV1XmlPullParserFactory_newInstanceWithNSString_withIOSClass_(NSString *unused, IOSClass *unused2);

J2OBJC_TYPE_LITERAL_HEADER(OrgXmlpullV1XmlPullParserFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgXmlpullV1XmlPullParserFactory")
