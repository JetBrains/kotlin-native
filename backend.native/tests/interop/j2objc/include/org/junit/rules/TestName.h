//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/rules/TestName.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRulesTestName")
#ifdef RESTRICT_OrgJunitRulesTestName
#define INCLUDE_ALL_OrgJunitRulesTestName 0
#else
#define INCLUDE_ALL_OrgJunitRulesTestName 1
#endif
#undef RESTRICT_OrgJunitRulesTestName

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRulesTestName_) && (INCLUDE_ALL_OrgJunitRulesTestName || defined(INCLUDE_OrgJunitRulesTestName))
#define OrgJunitRulesTestName_

#define RESTRICT_OrgJunitRulesTestWatcher 1
#define INCLUDE_OrgJunitRulesTestWatcher 1
#include "org/junit/rules/TestWatcher.h"

@class OrgJunitRunnerDescription;

/*!
 @brief The TestName Rule makes the current test name available inside test methods:
 @code

  public class TestNameTest {
    &#064;Rule
   public TestName name= new TestName();  
  &#064;Test
   public void testA() {
       assertEquals(&quot;testA&quot;, name.getMethodName());
      }  
  &#064;Test
   public void testB() {
       assertEquals(&quot;testB&quot;, name.getMethodName());
      }    }    
  
@endcode
 @since 4.7
 */
@interface OrgJunitRulesTestName : OrgJunitRulesTestWatcher

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @return the name of the currently-running test method
 */
- (NSString *)getMethodName;

#pragma mark Protected

- (void)startingWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)d;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRulesTestName)

FOUNDATION_EXPORT void OrgJunitRulesTestName_init(OrgJunitRulesTestName *self);

FOUNDATION_EXPORT OrgJunitRulesTestName *new_OrgJunitRulesTestName_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRulesTestName *create_OrgJunitRulesTestName_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRulesTestName)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRulesTestName")
