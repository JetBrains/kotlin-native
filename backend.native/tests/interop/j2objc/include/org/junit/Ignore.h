//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/Ignore.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitIgnore")
#ifdef RESTRICT_OrgJunitIgnore
#define INCLUDE_ALL_OrgJunitIgnore 0
#else
#define INCLUDE_ALL_OrgJunitIgnore 1
#endif
#undef RESTRICT_OrgJunitIgnore

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitIgnore_) && (INCLUDE_ALL_OrgJunitIgnore || defined(INCLUDE_OrgJunitIgnore))
#define OrgJunitIgnore_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief <p>Sometimes you want to temporarily disable a test or a group of tests.
 Methods annotated with 
 <code>org.junit.Test</code> that are also annotated with <code>&#064;Ignore</code> will not be executed as tests.
  Also, you can annotate a class containing test methods with <code>&#064;Ignore</code> and none of the containing
  tests will be executed. Native JUnit 4 test runners should report the number of ignored tests along with the
  number of tests that ran and the number of tests that failed.</p>
  For example: 
 @code

        &#064;Ignore &#064;Test public void something() { ... 
  
@endcode
  &#064;Ignore takes an optional default parameter if you want to record why a test is being ignored:<br>
  @code

        &#064;Ignore("not ready yet") &#064;Test public void something() { ... 
  
@endcode
  &#064;Ignore can also be applied to the test class:<br>
  @code

            &#064;Ignore public class IgnoreMe {
                    &#064;Test public void test1() { ... }
                    &#064;Test public void test2() { ... }
          } 
  
@endcode
 @since 4.0
 */
@protocol OrgJunitIgnore < JavaLangAnnotationAnnotation >

@property (readonly) NSString *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitIgnore : NSObject < OrgJunitIgnore > {
 @public
  NSString *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitIgnore)

FOUNDATION_EXPORT id<OrgJunitIgnore> create_OrgJunitIgnore(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitIgnore)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitIgnore")
