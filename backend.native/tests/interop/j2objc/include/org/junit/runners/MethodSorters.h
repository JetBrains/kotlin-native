//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/runners/MethodSorters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnersMethodSorters")
#ifdef RESTRICT_OrgJunitRunnersMethodSorters
#define INCLUDE_ALL_OrgJunitRunnersMethodSorters 0
#else
#define INCLUDE_ALL_OrgJunitRunnersMethodSorters 1
#endif
#undef RESTRICT_OrgJunitRunnersMethodSorters

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRunnersMethodSorters_) && (INCLUDE_ALL_OrgJunitRunnersMethodSorters || defined(INCLUDE_OrgJunitRunnersMethodSorters))
#define OrgJunitRunnersMethodSorters_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@protocol JavaUtilComparator;

typedef NS_ENUM(NSUInteger, OrgJunitRunnersMethodSorters_Enum) {
  OrgJunitRunnersMethodSorters_Enum_NAME_ASCENDING = 0,
  OrgJunitRunnersMethodSorters_Enum_JVM = 1,
  OrgJunitRunnersMethodSorters_Enum_DEFAULT = 2,
};

/*!
 @brief Sort the methods into a specified execution order.
 Defines common <code>MethodSorter</code> implementations.
 @since 4.11
 */
@interface OrgJunitRunnersMethodSorters : JavaLangEnum

@property (readonly, class, nonnull) OrgJunitRunnersMethodSorters *NAME_ASCENDING NS_SWIFT_NAME(NAME_ASCENDING);
@property (readonly, class, nonnull) OrgJunitRunnersMethodSorters *JVM NS_SWIFT_NAME(JVM);
@property (readonly, class, nonnull) OrgJunitRunnersMethodSorters *DEFAULT NS_SWIFT_NAME(DEFAULT);
+ (OrgJunitRunnersMethodSorters * __nonnull)NAME_ASCENDING;

+ (OrgJunitRunnersMethodSorters * __nonnull)JVM;

+ (OrgJunitRunnersMethodSorters * __nonnull)DEFAULT;

#pragma mark Public

- (id<JavaUtilComparator>)getComparator;

+ (OrgJunitRunnersMethodSorters *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgJunitRunnersMethodSorters_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgJunitRunnersMethodSorters)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgJunitRunnersMethodSorters *OrgJunitRunnersMethodSorters_values_[];

/*!
 @brief Sorts the test methods by the method name, in lexicographic order,
  with <code>Method.toString()</code> used as a tiebreaker
 */
inline OrgJunitRunnersMethodSorters *OrgJunitRunnersMethodSorters_get_NAME_ASCENDING(void);
J2OBJC_ENUM_CONSTANT(OrgJunitRunnersMethodSorters, NAME_ASCENDING)

/*!
 @brief Leaves the test methods in the order returned by the JVM.
 Note that the order from the JVM may vary from run to run
 */
inline OrgJunitRunnersMethodSorters *OrgJunitRunnersMethodSorters_get_JVM(void);
J2OBJC_ENUM_CONSTANT(OrgJunitRunnersMethodSorters, JVM)

/*!
 @brief Sorts the test methods in a deterministic, but not predictable, order
 */
inline OrgJunitRunnersMethodSorters *OrgJunitRunnersMethodSorters_get_DEFAULT(void);
J2OBJC_ENUM_CONSTANT(OrgJunitRunnersMethodSorters, DEFAULT)

FOUNDATION_EXPORT IOSObjectArray *OrgJunitRunnersMethodSorters_values(void);

FOUNDATION_EXPORT OrgJunitRunnersMethodSorters *OrgJunitRunnersMethodSorters_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgJunitRunnersMethodSorters *OrgJunitRunnersMethodSorters_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnersMethodSorters)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnersMethodSorters")
