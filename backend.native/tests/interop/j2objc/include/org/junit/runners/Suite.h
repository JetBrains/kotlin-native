//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/runners/Suite.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnersSuite")
#ifdef RESTRICT_OrgJunitRunnersSuite
#define INCLUDE_ALL_OrgJunitRunnersSuite 0
#else
#define INCLUDE_ALL_OrgJunitRunnersSuite 1
#endif
#undef RESTRICT_OrgJunitRunnersSuite

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRunnersSuite_) && (INCLUDE_ALL_OrgJunitRunnersSuite || defined(INCLUDE_OrgJunitRunnersSuite))
#define OrgJunitRunnersSuite_

#define RESTRICT_OrgJunitRunnersParentRunner 1
#define INCLUDE_OrgJunitRunnersParentRunner 1
#include "org/junit/runners/ParentRunner.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgJunitRunnerDescription;
@class OrgJunitRunnerNotificationRunNotifier;
@class OrgJunitRunnerRunner;
@class OrgJunitRunnersModelRunnerBuilder;
@protocol JavaUtilList;

/*!
 @brief Using <code>Suite</code> as a runner allows you to manually
  build a suite containing tests from many classes.It is the JUnit 4 equivalent of the JUnit 3.8.x
  static <code>junit.framework.Test</code> <code>suite()</code> method.
 To use it, annotate a class
  with <code>@@RunWith(Suite.class)</code> and <code>@@SuiteClasses({TestClass1.class, ...})</code>.
  When you run this class, it will run all the tests in all the suite classes.
 @since 4.0
 */
@interface OrgJunitRunnersSuite : OrgJunitRunnersParentRunner

#pragma mark Public

/*!
 @brief Called reflectively on classes annotated with <code>@@RunWith(Suite.class)</code>
 @param klass the root class
 @param builder builds runners for classes in the suite
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)klass
     withOrgJunitRunnersModelRunnerBuilder:(OrgJunitRunnersModelRunnerBuilder *)builder;

/*!
 @brief Call this when there is no single root class (for example, multiple class names
  passed on the command line to <code>org.junit.runner.JUnitCore</code>
 @param builder builds runners for classes in the suite
 @param classes the classes in the suite
 */
- (instancetype __nonnull)initWithOrgJunitRunnersModelRunnerBuilder:(OrgJunitRunnersModelRunnerBuilder *)builder
                                                  withIOSClassArray:(IOSObjectArray *)classes;

/*!
 @brief Returns an empty suite.
 */
+ (OrgJunitRunnerRunner *)emptySuite;

#pragma mark Protected

/*!
 @brief Call this when the default builder is good enough.Left in for compatibility with JUnit 4.4.
 @param klass the root of the suite
 @param suiteClasses the classes in the suite
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)klass
                         withIOSClassArray:(IOSObjectArray *)suiteClasses;

/*!
 @brief Called by this class and subclasses once the runners making up the suite have been determined
 @param klass root of the suite
 @param runners for each class in the suite, a <code>Runner</code>
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)klass
                          withJavaUtilList:(id<JavaUtilList>)runners;

/*!
 @brief Called by this class and subclasses once the classes making up the suite have been determined
 @param builder builds runners for classes in the suite
 @param klass the root of the suite
 @param suiteClasses the classes in the suite
 */
- (instancetype __nonnull)initWithOrgJunitRunnersModelRunnerBuilder:(OrgJunitRunnersModelRunnerBuilder *)builder
                                                       withIOSClass:(IOSClass *)klass
                                                  withIOSClassArray:(IOSObjectArray *)suiteClasses;

- (OrgJunitRunnerDescription *)describeChildWithId:(OrgJunitRunnerRunner *)child;

- (id<JavaUtilList>)getChildren;

- (void)runChildWithId:(OrgJunitRunnerRunner *)runner
withOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnersSuite)

FOUNDATION_EXPORT OrgJunitRunnerRunner *OrgJunitRunnersSuite_emptySuite(void);

FOUNDATION_EXPORT void OrgJunitRunnersSuite_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(OrgJunitRunnersSuite *self, IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder);

FOUNDATION_EXPORT OrgJunitRunnersSuite *new_OrgJunitRunnersSuite_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnersSuite *create_OrgJunitRunnersSuite_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder);

FOUNDATION_EXPORT void OrgJunitRunnersSuite_initWithOrgJunitRunnersModelRunnerBuilder_withIOSClassArray_(OrgJunitRunnersSuite *self, OrgJunitRunnersModelRunnerBuilder *builder, IOSObjectArray *classes);

FOUNDATION_EXPORT OrgJunitRunnersSuite *new_OrgJunitRunnersSuite_initWithOrgJunitRunnersModelRunnerBuilder_withIOSClassArray_(OrgJunitRunnersModelRunnerBuilder *builder, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnersSuite *create_OrgJunitRunnersSuite_initWithOrgJunitRunnersModelRunnerBuilder_withIOSClassArray_(OrgJunitRunnersModelRunnerBuilder *builder, IOSObjectArray *classes);

FOUNDATION_EXPORT void OrgJunitRunnersSuite_initWithIOSClass_withIOSClassArray_(OrgJunitRunnersSuite *self, IOSClass *klass, IOSObjectArray *suiteClasses);

FOUNDATION_EXPORT OrgJunitRunnersSuite *new_OrgJunitRunnersSuite_initWithIOSClass_withIOSClassArray_(IOSClass *klass, IOSObjectArray *suiteClasses) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnersSuite *create_OrgJunitRunnersSuite_initWithIOSClass_withIOSClassArray_(IOSClass *klass, IOSObjectArray *suiteClasses);

FOUNDATION_EXPORT void OrgJunitRunnersSuite_initWithOrgJunitRunnersModelRunnerBuilder_withIOSClass_withIOSClassArray_(OrgJunitRunnersSuite *self, OrgJunitRunnersModelRunnerBuilder *builder, IOSClass *klass, IOSObjectArray *suiteClasses);

FOUNDATION_EXPORT OrgJunitRunnersSuite *new_OrgJunitRunnersSuite_initWithOrgJunitRunnersModelRunnerBuilder_withIOSClass_withIOSClassArray_(OrgJunitRunnersModelRunnerBuilder *builder, IOSClass *klass, IOSObjectArray *suiteClasses) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnersSuite *create_OrgJunitRunnersSuite_initWithOrgJunitRunnersModelRunnerBuilder_withIOSClass_withIOSClassArray_(OrgJunitRunnersModelRunnerBuilder *builder, IOSClass *klass, IOSObjectArray *suiteClasses);

FOUNDATION_EXPORT void OrgJunitRunnersSuite_initWithIOSClass_withJavaUtilList_(OrgJunitRunnersSuite *self, IOSClass *klass, id<JavaUtilList> runners);

FOUNDATION_EXPORT OrgJunitRunnersSuite *new_OrgJunitRunnersSuite_initWithIOSClass_withJavaUtilList_(IOSClass *klass, id<JavaUtilList> runners) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnersSuite *create_OrgJunitRunnersSuite_initWithIOSClass_withJavaUtilList_(IOSClass *klass, id<JavaUtilList> runners);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnersSuite)

#endif

#if !defined (OrgJunitRunnersSuite_SuiteClasses_) && (INCLUDE_ALL_OrgJunitRunnersSuite || defined(INCLUDE_OrgJunitRunnersSuite_SuiteClasses))
#define OrgJunitRunnersSuite_SuiteClasses_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief The <code>SuiteClasses</code> annotation specifies the classes to be run when a class
  annotated with <code>@@RunWith(Suite.class)</code> is run.
 */
@protocol OrgJunitRunnersSuite_SuiteClasses < JavaLangAnnotationAnnotation >

@property (readonly) IOSObjectArray *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitRunnersSuite_SuiteClasses : NSObject < OrgJunitRunnersSuite_SuiteClasses > {
 @public
  IOSObjectArray *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnersSuite_SuiteClasses)

FOUNDATION_EXPORT id<OrgJunitRunnersSuite_SuiteClasses> create_OrgJunitRunnersSuite_SuiteClasses(IOSObjectArray *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnersSuite_SuiteClasses)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnersSuite")
