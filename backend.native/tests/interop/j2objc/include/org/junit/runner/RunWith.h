//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/runner/RunWith.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnerRunWith")
#ifdef RESTRICT_OrgJunitRunnerRunWith
#define INCLUDE_ALL_OrgJunitRunnerRunWith 0
#else
#define INCLUDE_ALL_OrgJunitRunnerRunWith 1
#endif
#undef RESTRICT_OrgJunitRunnerRunWith

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRunnerRunWith_) && (INCLUDE_ALL_OrgJunitRunnerRunWith || defined(INCLUDE_OrgJunitRunnerRunWith))
#define OrgJunitRunnerRunWith_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief When a class is annotated with <code>&#064;RunWith</code> or extends a class annotated
  with <code>&#064;RunWith</code>, JUnit will invoke the class it references to run the
  tests in that class instead of the runner built into JUnit.We added this feature late
  in development.
 While it seems powerful we expect the runner API to change as we learn
  how people really use it. Some of the classes that are currently internal will likely
  be refined and become public.
  For example, suites in JUnit 4 are built using RunWith, and a custom runner named Suite: 
 @code

   &#064;RunWith(Suite.class)
   &#064;SuiteClasses({ATest.class, BTest.class, CTest.class})
  public class ABCSuite {
  } 
  
@endcode
 @since 4.0
 */
@protocol OrgJunitRunnerRunWith < JavaLangAnnotationAnnotation >

@property (readonly) IOSClass *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitRunnerRunWith : NSObject < OrgJunitRunnerRunWith > {
 @public
  IOSClass *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerRunWith)

FOUNDATION_EXPORT id<OrgJunitRunnerRunWith> create_OrgJunitRunnerRunWith(IOSClass *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerRunWith)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnerRunWith")
