//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/hamcrest/CustomMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgHamcrestCustomMatcher")
#ifdef RESTRICT_OrgHamcrestCustomMatcher
#define INCLUDE_ALL_OrgHamcrestCustomMatcher 0
#else
#define INCLUDE_ALL_OrgHamcrestCustomMatcher 1
#endif
#undef RESTRICT_OrgHamcrestCustomMatcher

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgHamcrestCustomMatcher_) && (INCLUDE_ALL_OrgHamcrestCustomMatcher || defined(INCLUDE_OrgHamcrestCustomMatcher))
#define OrgHamcrestCustomMatcher_

#define RESTRICT_OrgHamcrestBaseMatcher 1
#define INCLUDE_OrgHamcrestBaseMatcher 1
#include "org/hamcrest/BaseMatcher.h"

@protocol OrgHamcrestDescription;

/*!
 @brief Utility class for writing one off matchers.
 For example: 
 @code

  Matcher&lt;String&gt; aNonEmptyString = new CustomMatcher&lt;String&gt;("a non empty string") {
    public boolean matches(Object object) {
      return ((object instanceof String) && !((String) object).isEmpty();
    }
  }; 
  
@endcode
  <p>
  This class is designed for scenarios where an anonymous inner class
  matcher makes sense. It should not be used by API designers implementing
  matchers.
 @author Neil Dunn
 - seealso: CustomTypeSafeMatcherfor a type safe variant of this class that you probably
   want to use.
 */
@interface OrgHamcrestCustomMatcher : OrgHamcrestBaseMatcher

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)description_;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgHamcrestCustomMatcher)

FOUNDATION_EXPORT void OrgHamcrestCustomMatcher_initWithNSString_(OrgHamcrestCustomMatcher *self, NSString *description_);

J2OBJC_TYPE_LITERAL_HEADER(OrgHamcrestCustomMatcher)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgHamcrestCustomMatcher")
