//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/hamcrest/core/StringEndsWith.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgHamcrestCoreStringEndsWith")
#ifdef RESTRICT_OrgHamcrestCoreStringEndsWith
#define INCLUDE_ALL_OrgHamcrestCoreStringEndsWith 0
#else
#define INCLUDE_ALL_OrgHamcrestCoreStringEndsWith 1
#endif
#undef RESTRICT_OrgHamcrestCoreStringEndsWith

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgHamcrestCoreStringEndsWith_) && (INCLUDE_ALL_OrgHamcrestCoreStringEndsWith || defined(INCLUDE_OrgHamcrestCoreStringEndsWith))
#define OrgHamcrestCoreStringEndsWith_

#define RESTRICT_OrgHamcrestCoreSubstringMatcher 1
#define INCLUDE_OrgHamcrestCoreSubstringMatcher 1
#include "org/hamcrest/core/SubstringMatcher.h"

@protocol OrgHamcrestMatcher;

/*!
 @brief Tests if the argument is a string that contains a substring.
 */
@interface OrgHamcrestCoreStringEndsWith : OrgHamcrestCoreSubstringMatcher

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)substring;

/*!
 @brief Creates a matcher that matches if the examined <code>String</code> ends with the specified 
 <code>String</code>.
 <p>
  For example: 
 @code
assertThat("myStringOfNote", endsWith("Note"))
@endcode
 @param suffix the substring that the returned matcher will expect at the end of any examined string
 */
+ (id<OrgHamcrestMatcher>)endsWithWithNSString:(NSString *)suffix;

#pragma mark Protected

- (jboolean)evalSubstringOfWithNSString:(NSString *)s;

- (NSString *)relationship;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgHamcrestCoreStringEndsWith)

FOUNDATION_EXPORT void OrgHamcrestCoreStringEndsWith_initWithNSString_(OrgHamcrestCoreStringEndsWith *self, NSString *substring);

FOUNDATION_EXPORT OrgHamcrestCoreStringEndsWith *new_OrgHamcrestCoreStringEndsWith_initWithNSString_(NSString *substring) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgHamcrestCoreStringEndsWith *create_OrgHamcrestCoreStringEndsWith_initWithNSString_(NSString *substring);

FOUNDATION_EXPORT id<OrgHamcrestMatcher> OrgHamcrestCoreStringEndsWith_endsWithWithNSString_(NSString *suffix);

J2OBJC_TYPE_LITERAL_HEADER(OrgHamcrestCoreStringEndsWith)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgHamcrestCoreStringEndsWith")
