//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/hamcrest/core/Every.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgHamcrestCoreEvery")
#ifdef RESTRICT_OrgHamcrestCoreEvery
#define INCLUDE_ALL_OrgHamcrestCoreEvery 0
#else
#define INCLUDE_ALL_OrgHamcrestCoreEvery 1
#endif
#undef RESTRICT_OrgHamcrestCoreEvery

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgHamcrestCoreEvery_) && (INCLUDE_ALL_OrgHamcrestCoreEvery || defined(INCLUDE_OrgHamcrestCoreEvery))
#define OrgHamcrestCoreEvery_

#define RESTRICT_OrgHamcrestTypeSafeDiagnosingMatcher 1
#define INCLUDE_OrgHamcrestTypeSafeDiagnosingMatcher 1
#include "org/hamcrest/TypeSafeDiagnosingMatcher.h"

@class IOSClass;
@class OrgHamcrestInternalReflectiveTypeFinder;
@protocol JavaLangIterable;
@protocol OrgHamcrestDescription;
@protocol OrgHamcrestMatcher;

@interface OrgHamcrestCoreEvery : OrgHamcrestTypeSafeDiagnosingMatcher

#pragma mark Public

- (instancetype __nonnull)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

/*!
 @brief Creates a matcher for <code>Iterable</code>s that only matches when a single pass over the
  examined <code>Iterable</code> yields items that are all matched by the specified 
 <code>itemMatcher</code>.
 <p>
  For example: 
 @code
assertThat(Arrays.asList("bar", "baz"), everyItem(startsWith("ba")))
@endcode
 @param itemMatcher the matcher to apply to every item provided by the examined 
 <code>Iterable</code>
 */
+ (id<OrgHamcrestMatcher>)everyItemWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)itemMatcher;

- (jboolean)matchesSafelyWithId:(id<JavaLangIterable>)collection
     withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatchDescription;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgHamcrestInternalReflectiveTypeFinder:(OrgHamcrestInternalReflectiveTypeFinder *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgHamcrestCoreEvery)

FOUNDATION_EXPORT void OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(OrgHamcrestCoreEvery *self, id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT OrgHamcrestCoreEvery *new_OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgHamcrestCoreEvery *create_OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT id<OrgHamcrestMatcher> OrgHamcrestCoreEvery_everyItemWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> itemMatcher);

J2OBJC_TYPE_LITERAL_HEADER(OrgHamcrestCoreEvery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgHamcrestCoreEvery")
