def dist = findProperty('org.jetbrains.kotlin.native.home') ?: 'dist'
dist = (new File(dist)).isAbsolute() ? dist : "${project.getProjectDir()}/$dist"
def toolExtension = System.getProperty("os.name").startsWith('Windows') ? ".bat" : ""

def linkerOpts = []
if (MPPTools.isMacos()) {
    linkerOpts += ['-linker-options','-L/opt/local/lib', '-linker-options', '-L/usr/local/lib']
} else if (MPPTools.isLinux()) {
    linkerOpts += ['-linker-options', '-L/usr/lib/x86_64-linux-gnu', '-linker-options', '-L/usr/lib64']
} else if (MPPTools.isWindows()) {
    linkerOpts += ['-linker-options', "-L${MPPTools.mingwPath()}/lib"]
}

def includeDirsFfmpeg = []
def filterDirsFfmpeg = []
if (MPPTools.isMacos()) {
    filterDirsFfmpeg += ['-headerFilterAdditionalSearchPrefix', '/opt/local/include',
                          '-headerFilterAdditionalSearchPrefix', '/usr/local/include']
} else if (MPPTools.isLinux()) {
    filterDirsFfmpeg += ['-headerFilterAdditionalSearchPrefix', '/usr/include',
                          '-headerFilterAdditionalSearchPrefix', '/usr/include/x86_64-linux-gnu',
                          '-headerFilterAdditionalSearchPrefix', '/usr/include/ffmpeg']
} else if (MPPTools.isWindows()) {
    includeDirsFfmpeg += ['-compilerOpt', "-I${MPPTools.mingwPath()}/include"]
}

def includeDirsSdl = []
if (MPPTools.isMacos()) {
    includeDirsSdl += ['-compilerOpt', '-I/opt/local/include/SDL2',
                       '-compilerOpt', '-I/usr/local/include/SDL2']
} else if (MPPTools.isLinux()) {
    includeDirsSdl += ['-compilerOpt', '-I/usr/include/SDL2']
} else if (MPPTools.isWindows()) {
    includeDirsSdl += ['-compilerOpt', "-I${MPPTools.mingwPath()}/include/SDL2"]
}

project.ext {
    applicationName = 'Videoplayer'
    repeatNumber = 10
    buildSteps = ["runCinteropFfmpeg": ["$dist/bin/cinterop$toolExtension", "-o", "$dist/../samples/videoplayer/build/classes/kotlin/videoPlayer/main/videoplayer-cinterop-ffmpeg.klib",
                                        "-def", "$dist/../samples/videoplayer/src/nativeInterop/cinterop/ffmpeg.def"] + filterDirsFfmpeg + includeDirsFfmpeg,
                  "runCinteropSdl": ["$dist/bin/cinterop$toolExtension", "-o", "$dist/../samples/videoplayer/build/classes/kotlin/videoPlayer/main/videoplayer-cinterop-sdl.klib",
                                     "-def", "$dist/../samples/videoplayer/src/nativeInterop/cinterop/sdl.def"] + includeDirsSdl,
                  "runKonanProgram": ["$dist/bin/konanc$toolExtension", "-ea", "-p", "program", "-o", "${buildDir.absolutePath}/program${MPPTools.getNativeProgramExtension()}",
                                      "-l", "$dist/../samples/videoplayer/build/classes/kotlin/videoPlayer/main/videoplayer-cinterop-ffmpeg.klib",
                                      "-l", "$dist/../samples/videoplayer/build/classes/kotlin/videoPlayer/main/videoplayer-cinterop-sdl.klib",
                                      "-Xmulti-platform", "$dist/../samples/videoplayer/src/videoPlayerMain/kotlin",
                                      "-entry", "sample.videoplayer.main"] + linkerOpts]
}
apply from: rootProject.file("${rootProject.rootDir}/gradle/compileBenchmark.gradle")