plugins {
    id 'kotlin-multiplatform'
}

def tensorflowHome = "${MPPTools.kotlinNativeDataPath()}/third-party/tensorflow"

// Determine host preset.
def hostPreset = MPPTools.defaultHostPreset(project, [kotlin.presets.macosX64, kotlin.presets.linuxX64])

kotlin {
    targetFromPreset(hostPreset, 'tensorflow') {
        binaries {
            executable() {
                entryPoint = 'sample.tensorflow.main'
                linkerOpts += ["-L$tensorflowHome/lib".toString(), '-ltensorflow']
                runTask?.environment('LD_LIBRARY_PATH', "$tensorflowHome/lib".toString())
                runTask?.environment('DYLD_LIBRARY_PATH', "$tensorflowHome/lib".toString())
            }
        }
        compilations.main.cinterops {
            tensorflow {
                includeDirs "$tensorflowHome/include"
            }
        }
    }
}

task downloadTensorflow(type: Exec) {
    workingDir projectDir
    commandLine './downloadTensorflow.sh'
}
tasks[kotlin.targets.tensorflow.compilations.main.cinterops.tensorflow.interopProcessingTaskName].dependsOn downloadTensorflow