buildscript {
    repositories {
        maven {
            url 'https://cache-redirector.jetbrains.com/maven-central'
        }
        maven {
            url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
        maven {
	        url "https://teamcity.jetbrains.com/guestAuth/app/rest/builds/buildType:(id:Kotlin_13M1_Compiler),number:1.3-M1-eap-77,branch:default:any/artifacts/content/maven/"
	    }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:${project.property('konan.plugin.version')}"
    }
}

apply plugin: 'konan'

konan.targets = ['macbook', 'linux']

def konanUserDir = System.getenv("KONAN_DATA_DIR") ?: "${System.getProperty("user.home")}/.konan"
def torchHome = "$konanUserDir/third-party/torch"

task downloadTorch(type: Exec) {
    workingDir getProjectDir()
    commandLine './downloadTorch.sh'
}

konanArtifacts {
    interop('TorchInterop') {
        defFile "src/main/c_interop/torch.def"
        includeDirs "${torchHome}/include", "${torchHome}/include/TH"
        dependsOn 'downloadTorch'
    }

    program('Torch') {
        libraries {
            artifact 'TorchInterop'
        }
        linkerOpts "-L${torchHome}/lib -lATen"
    }
}

tasks.findByName("runTorch")?.dependsOn 'warning'

task warning {
    doLast {
        println "Note: You may need to specify LD_LIBRARY_PATH or DYLD_LIBRARY_PATH env variables to $torchHome/lib if the ATen dynamic library cannot be found."

    }
}
