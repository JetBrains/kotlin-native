buildscript {
    repositories {
        mavenCentral()
        maven {
            url  "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:+"
    }
}

apply plugin: 'konan'

konanInterop {
    sdlOsx {
        defFile 'sdl.def'
        includeDirs '/Library/Frameworks/SDL2.framework/Headers', "${System.getProperty("user.home")}/Library/Frameworks/SDL2.framework/Headers"

        target 'osx'
    }

    sdlLinux {
        defFile 'sdl.def'
        includeDirs '/usr/include/SDL2'
        target 'linux'
    }

    sdlIos {
        defFile 'sdl.def'
        includeDirs "${project.property("konan.home")}/dependencies/target-sysroot-2-darwin-ios/System/Library/Frameworks/SDL2.framework/Headers"
        target 'ios'
    }

    sdlRaspberry {
        defFile 'sdl.def'
        includeDirs "${project.property("konan.home")}/dependencies/target-sysroot-1-raspberrypi/usr/include/SDL2"
        target 'raspberrypi'
    }
}

konanArtifacts {
    TetrisOsx {
        inputFiles project.file('Tetris.kt')
        useInterop 'sdlOsx'
        linkerOpts "-F ${System.getProperty("user.home")}/Library/Frameworks -F /Library/Frameworks -framework SDL2"
        // Use this line instead of the previous one if you've got a 'No SDL-framework' error.
        //linkerOpts "-L/opt/local/lib -L/usr/local/lib -lSDL2"
        target 'osx'
    }

    TetrisLinux {
        inputFiles project.file('Tetris.kt')
        useInterop 'sdlLinux'

        linkerOpts '-L/usr/lib/x86_64-linux-gnu -lSDL2'
        target 'linux'
    }

    TetrisIos {

        inputFiles project.file('Tetris.kt')
        useInterop 'sdlIos'

        linkerOpts '-framework SDL2 -framework AVFoundation -framework CoreGraphics -framework CoreMotion ' +
                   '-framework Foundation -framework GameController -framework AudioToolbox -framework OpenGLES ' +
                   '-framework QuartzCore -framework UIKit'
        noMain()
        target 'ios'
    }

    TetrisRaspberry {
        inputFiles project.file('Tetris.kt')
        useInterop 'sdlRaspberry'

        linkerOpts '-lSDL2'
        target 'raspberrypi'
    }

}

build {
    doLast {
        getTaskDependencies().getDependencies().forEach() { task ->
            if (task.name.startsWith("compileKonan")) {
                copy {
                    from task.artifactPath
                    into projectDir.canonicalPath
                }
            }
        }
    }
}
