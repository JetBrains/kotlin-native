def endorsedLibrariesList = ['kotlinx.cli']

def toTaskName(library) {
    def name = ""
    library.split("\\.").each { word -> name += word.capitalize() }
    return name
}

task clean {
    doLast {
        delete buildDir
    }
}

task jvmJar {
    endorsedLibrariesList.each { library ->
        dependsOn "$library:jvmJar"
    }
}

// Build all default libraries.
targetList.each { target ->
    task("${target}EndorsedLibraries", type: Copy) {
        endorsedLibrariesList.each { library ->
            dependsOn "$library:${target}${ toTaskName(library) }"
        }
        destinationDir project.buildDir
        endorsedLibrariesList.each { library ->
            from(project("$library").file("build/${target}${ toTaskName(library) }")) {
                include('**')
                into("${library.replaceAll("\\.", "-")}")
            }
        }
    }
}

endorsedLibrariesList.each { library ->
    task("${toTaskName(library)}CommonSources", type: Zip) {
        destinationDirectory = file("${rootProject.projectDir}/dist/sources")
        archiveFileName = "${library.replaceAll("\\.", "-")}-common-sources.zip"

        includeEmptyDirs = false
        include('**/*.kt')

        from(project(":endorsedLibraries:${library}").file('src/main/kotlin'))
    }
    task("${toTaskName(library)}NativeSources", type: Zip) {
        destinationDirectory = file("${rootProject.projectDir}/dist/sources")
        archiveFileName = "${library.replaceAll("\\.", "-")}-native-sources.zip"

        includeEmptyDirs = false
        include('**/*.kt')

        from(project(":endorsedLibraries:${library}").file('src/main/kotlin-native'))
    }
}

task endorsedLibsSources {
    endorsedLibrariesList.each { library ->
        dependsOn "${toTaskName(library)}CommonSources"
        dependsOn "${toTaskName(library)}NativeSources"
    }
}