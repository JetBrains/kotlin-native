/*
 * Copyright 2010-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'
apply plugin: 'kotlin'

buildscript {
    ext.rootBuildDirectory = "$rootDir/.."
    apply from: "$rootBuildDirectory/gradle/loadRootProperties.gradle"
    apply from: "$rootBuildDirectory/gradle/kotlinGradlePlugin.gradle"
    dependencies{
        classpath "org.jetbrains.kotlin:kotlin-serialization:$buildKotlinVersion"
    }
    
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

/* don't use repositories: gradle will ignore it anyway, but may confuse gradle build engineer, see outer build.gradle */

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "org.jetbrains.kotlin:kotlin-stdlib:$buildKotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$buildKotlinVersion"
    compile group: 'com.ullink.slack', name: 'simpleslackapi', version: '0.6.0'
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0"

    // Support composite build against kotlin-native-shared.
    // Gradle cannot substitute a dependency in buildSrc by an included build.
    // See: https://github.com/gradle/gradle/issues/3768.
    // Thus we have to compile sources of the included shared once more to use it in buildSrc.
    if (project.hasProperty("sharedProjectPath")) {
        compile project(':shared')
    } else {
        // If there is no composite build against shared, add a dependency on a published jar.
        compile "org.jetbrains.kotlin:kotlin-native-shared:$sharedVersion"
    }
    
}

rootProject.dependencies {
    runtime project(path)
}

compileGroovy {
    // Add Kotlin classes to a classpath for the Groovy compiler
    classpath += project.files(compileKotlin.destinationDir)
}