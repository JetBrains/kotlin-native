/*
 * Copyright 2010-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'
apply plugin: 'kotlin'

buildscript {
    ext.rootBuildDirectory = "$rootDir/.."
    apply from: "$rootBuildDirectory/gradle/loadRootProperties.gradle"
    apply from: "$rootBuildDirectory/gradle/kotlinGradlePlugin.gradle"
    dependencies{
        classpath "org.jetbrains.kotlin:kotlin-serialization:$buildKotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
    
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'

/* don't use repositories: gradle will ignore it anyway, but may confuse gradle build engineer, see outer build.gradle */

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "org.jetbrains.kotlin:kotlin-stdlib:$buildKotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$buildKotlinVersion"
    compile group: 'com.ullink.slack', name: 'simpleslackapi', version: '1.2.0'
    // An artifact from the included build 'shared' cannot be used here due to https://github.com/gradle/gradle/issues/3768
    implementation "org.jetbrains.kotlin:kotlin-gradle-plugin"
    compile project(':shared')
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0"
}

sourceSets.main.kotlin.srcDirs = ["src", "$projectDir/../../tools/benchmarks/shared/src"]

rootProject.dependencies {
    runtime project(path)
}

compileGroovy {
    // Add Kotlin classes to a classpath for the Groovy compiler
    classpath += project.files(compileKotlin.destinationDir)
}