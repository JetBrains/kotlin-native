/*
 * Copyright 2010-2017 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    apply from: "$rootDir/gradle/kotlinGradlePlugin.gradle"
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:$gradlePluginVersion"
    }

    ext.useCustomDist = project.hasProperty("konan.home")
    if (!useCustomDist) {
        ext.setProperty("konan.home", distDir.absolutePath)
    }
}

apply plugin: 'kotlin'
apply plugin: 'konan'

konanArtifacts {
    def testFiles = fileTree('src/test/testData') {
        include "*.kt"
    }
    testFiles.files.each { file ->
        def name = file.name
        library(name.take(name.lastIndexOf('.'))) {
            srcFiles file.absolutePath

            // Build the compiler before building the test unless a custom path to the distribution is specified.
            if (!useCustomDist) {
                dependsOn ':dist'
            }
        }
    }
}

repositories {
    maven {
        url buildKotlinCompilerRepo
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$buildKotlinVersion"
    compile project(path: ':backend.native', configuration: 'cli_bc')
    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$buildKotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test:$buildKotlinVersion"
}

test {
    dependsOn 'cleanTest'
    systemProperty('konan.home', getProperty("konan.home"))
    dependsOn konanArtifacts.collect { it.getByTarget('host') }
    if (useCustomDist) {
        // Use the klib utility from the distribution
        def distClasspath = fileTree("${project.getProperty("konan.home")}/konan/lib") {
            include "**/*.jar"
        }
        classpath = distClasspath + sourceSets.test.runtimeClasspath - sourceSets.main.runtimeClasspath
    }
}