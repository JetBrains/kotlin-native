buildscript {
    ext.rootBuildDirectory = file('../../..')

    apply from: "$rootBuildDirectory/gradle/loadRootProperties.gradle"
    apply from: "$rootBuildDirectory/gradle/kotlinGradlePlugin.gradle"

    repositories {
        maven {
            url 'https://cache-redirector.jetbrains.com/jcenter'
        }
        maven {
            url kotlinCompilerRepo
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

repositories {
    maven {
        url 'https://cache-redirector.jetbrains.com/jcenter'
    }
    maven {
        url kotlinCompilerRepo
    }
    maven {
        url buildKotlinCompilerRepo
    }
}

apply plugin: 'kotlin-multiplatform'

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlinVersion"
            }
            kotlin.srcDir '../../benchmarks/shared/src'
        }
        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
            }
            kotlin.srcDir 'src/main/kotlin'
            kotlin.srcDir '../shared/src/main/kotlin'
            kotlin.srcDir '../src/main/kotlin-js'
        }
    }

    targets {
        fromPreset(presets.js, 'js') {
            compilations.main.kotlinOptions {
                outputFile = "${projectDir}/js/main.js"
                main = "call"
            }
        }
    }
}

task assembleWeb(type: Sync) {
    def runtimeDependencies = kotlin.targets.js.compilations.main.runtimeDependencyFiles
    from(files {
        runtimeDependencies.collect { File file ->
            zipTree(file.absolutePath)
        }
    }.builtBy(runtimeDependencies)) {
        includeEmptyDirs = false
        include { fileTreeElement ->
            def path = fileTreeElement.path
            path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                    !path.startsWith("META-INF/"))
        }
    }

    from compileKotlinJs.destinationDir
    into "${buildDir}/js"
}